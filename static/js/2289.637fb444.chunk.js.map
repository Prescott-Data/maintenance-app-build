{"version":3,"file":"static/js/2289.637fb444.chunk.js","mappings":"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","sources":["D2App/pages/organisationUnits/List.js","D2App/pages/organisationUnits/list/OrganisationUnitList.js","D2App/pages/organisationUnits/list/OrganisationUnitListActions.js","D2App/pages/organisationUnits/list/OrganisationUnitListMessage.js","D2App/pages/organisationUnits/list/OrganisationUnitRow.js","D2App/pages/organisationUnits/list/useOrganisationUnits.js","webpack://@dhis2/app-shell/./src/D2App/pages/organisationUnits/list/OrganisationUnitList.module.css?1639"],"sourcesContent":["import React from 'react';\nimport { OrganisationUnitList } from './list/';\nexport const Component = () => {\n  return /*#__PURE__*/React.createElement(OrganisationUnitList, null);\n};","import { getCoreRowModel, getExpandedRowModel, useReactTable } from '@tanstack/react-table';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { IdentifiableFilter, SectionList } from '../../../components';\nimport { DefaultDetailsPanelContent, DetailsPanel } from '../../../components/sectionList/detailsPanel';\nimport { useModelListView } from '../../../components/sectionList/listView';\nimport { ModelValue } from '../../../components/sectionList/modelValue/ModelValue';\nimport { SectionListTitle } from '../../../components/sectionList/SectionListTitle';\nimport { Toolbar } from '../../../components/sectionList/toolbar';\nimport { SchemaName, useSchema, useSectionListFilter } from '../../../lib';\nimport { getFieldFilter } from '../../../lib/models/path';\nimport { useCurrentUserRootOrgUnits } from '../../../lib/user/currentUserStore';\nimport css from './OrganisationUnitList.module.css';\nimport { OrganisationUnitListMessage } from './OrganisationUnitListMessage';\nimport { OrganisationUnitRow } from './OrganisationUnitRow';\nimport { useFilteredOrgUnits, usePaginatedChildrenOrgUnitsController } from './useOrganisationUnits';\nconst useColumns = () => {\n  const {\n    columns: selectedColumns\n  } = useModelListView();\n  const schema = useSchema(SchemaName.organisationUnit);\n  const columnDefinitions = useMemo(() => selectedColumns.map(descriptor => {\n    return {\n      accessorKey: descriptor.path,\n      header: descriptor.label,\n      cell: _ref => {\n        let {\n          row\n        } = _ref;\n        return /*#__PURE__*/React.createElement(ModelValue, {\n          path: descriptor.path === 'name' ? 'displayName' : descriptor.path,\n          schema: schema,\n          sectionModel: row.original\n        });\n      },\n      meta: {\n        fieldFilter: getFieldFilter(schema, descriptor.path)\n      }\n    };\n  }), [selectedColumns, schema]);\n  return columnDefinitions;\n};\nexport const OrganisationUnitList = () => {\n  const columnDefinitions = useColumns();\n  const [identifiableFilter] = useSectionListFilter('identifiable');\n  const userRootOrgUnits = useCurrentUserRootOrgUnits();\n  const initialExpandedState = useMemo(() => {\n    return Object.fromEntries(userRootOrgUnits.map(ou => [ou.id, true]));\n  }, [userRootOrgUnits]);\n  const [parentIdsToLoad, setParentIdsToLoad] = useState(() => initialExpandedState);\n  // the expanded organisationUnit Ids\n  const [expanded, setExpanded] = useState(() => initialExpandedState);\n  const [detailsId, setDetailsId] = useState();\n  const handleDetailsClick = useCallback(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    setDetailsId(prevDetailsId => prevDetailsId === id ? undefined : id);\n  }, [setDetailsId]);\n  const fieldFilters = columnDefinitions.map(column => column.meta.fieldFilter);\n  const {\n    queries,\n    fetchNextPage\n  } = usePaginatedChildrenOrgUnitsController({\n    parentIds: parentIdsToLoad,\n    fieldFilters\n  });\n  const isFiltering = !!identifiableFilter;\n  const hasErrored = queries.some(query => query.isError);\n  const orgUnitFiltered = useFilteredOrgUnits({\n    searchQuery: identifiableFilter,\n    fieldFilters,\n    enabled: isFiltering\n  });\n\n  // expand ancestors of the filtered org units\n  useEffect(() => {\n    // reset state when not filtering\n    if (!isFiltering) {\n      setExpanded(initialExpandedState);\n      setParentIdsToLoad(initialExpandedState);\n      return;\n    }\n    // if we are filtering, expand all, and reset parentIdsToLoad\n    setExpanded(true);\n    // hide data from usePaginatedChildrenOrgUnitsController\n    setParentIdsToLoad({});\n  }, [isFiltering, initialExpandedState]);\n  const {\n    rootOrgUnits,\n    flatOrgUnits\n  } = useMemo(() => {\n    const rootOrgUnits = new Map();\n    //gather all loaded orgUnits and their ancestors and deduplicate them\n\n    const deduplicatedOrgUnits = queries.concat(orgUnitFiltered).flatMap(q => {\n      var _q$data$organisationU;\n      if (!q.data) {\n        return [];\n      }\n      const queryOrgs = (_q$data$organisationU = q.data.organisationUnits) !== null && _q$data$organisationU !== void 0 ? _q$data$organisationU : [];\n      const ancestors = queryOrgs.flatMap(ou => ou.ancestors);\n      return [...queryOrgs, ...ancestors];\n    }).reduce((acc, ou) => {\n      if (initialExpandedState[ou.id]) {\n        rootOrgUnits.set(ou.id, ou);\n      }\n      acc[ou.id] = ou;\n      return acc;\n    }, {});\n    return {\n      rootOrgUnits: Array.from(rootOrgUnits.values()),\n      flatOrgUnits: Object.values(deduplicatedOrgUnits)\n    };\n  }, [queries, orgUnitFiltered, initialExpandedState]);\n  const handleExpand = useCallback(valueOrUpdater => {\n    // when we expand something and are not filtering, we need to load the children\n    // also translate expandedState === true (expand all) to expand all loaded units\n    const getAllExpanded = () => Object.fromEntries(flatOrgUnits.map(ou => [ou.id, true]));\n    // we always want to keep root loaded\n    const getValueWithRoot = value => ({\n      ...initialExpandedState,\n      ...value\n    });\n    if (typeof valueOrUpdater === 'function') {\n      setExpanded(old => {\n        const value = valueOrUpdater(old);\n        if (!isFiltering) {\n          setParentIdsToLoad(value === true ? getAllExpanded() : getValueWithRoot(value));\n        }\n        return value;\n      });\n    } else {\n      setExpanded(valueOrUpdater);\n      if (!isFiltering) {\n        setParentIdsToLoad(valueOrUpdater === true ? getAllExpanded() : getValueWithRoot(valueOrUpdater));\n      }\n    }\n  }, [isFiltering, setExpanded, flatOrgUnits, initialExpandedState]);\n  const table = useReactTable({\n    columns: columnDefinitions,\n    // note data must change for table to re-compute\n    // thus we have to compute the root whenever data changes (since subrows is not part of the data)\n    data: rootOrgUnits,\n    getRowId: row => row.id,\n    getCoreRowModel: getCoreRowModel(),\n    getRowCanExpand: row => row.original.childCount > 0,\n    getSubRows: row => {\n      return flatOrgUnits.filter(d => {\n        var _d$parent;\n        return ((_d$parent = d.parent) === null || _d$parent === void 0 ? void 0 : _d$parent.id) === row.id;\n      });\n    },\n    getExpandedRowModel: getExpandedRowModel(),\n    onExpandedChange: handleExpand,\n    state: {\n      expanded\n    },\n    enableSubRowSelection: false\n  });\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SectionListTitle, null), /*#__PURE__*/React.createElement(IdentifiableFilter, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.listDetailsWrapper\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    selectedModels: new Set(table.getSelectedRowModel().flatRows.map(r => r.id)),\n    onDeselectAll: () => {\n      table.resetRowSelection(true);\n    }\n  }), /*#__PURE__*/React.createElement(SectionList, {\n    headerColumns: table.getHeaderGroups()[0].headers.map(h => ({\n      label: h.column.columnDef.header,\n      path: h.column.id\n    }))\n  }, /*#__PURE__*/React.createElement(OrganisationUnitListMessage, {\n    isFiltering: isFiltering,\n    queries: queries.concat(orgUnitFiltered),\n    orgUnitCount: table.getRowCount()\n  }), table.getRowModel().rows.map(row => /*#__PURE__*/React.createElement(OrganisationUnitRow, {\n    key: row.id,\n    row: row,\n    toggleShowAll: id => setParentIdsToLoad(prev => {\n      const {\n        [id]: wasShown,\n        ...withoutId\n      } = prev;\n      if (wasShown) {\n        return withoutId;\n      }\n      return {\n        ...prev,\n        [id]: true\n      };\n    }),\n    showAllActive: parentIdsToLoad[row.original.id] === true,\n    onShowDetailsClick: handleDetailsClick,\n    isFiltering: isFiltering,\n    hasErrored: hasErrored,\n    fetchNextPage: fetchNextPage\n  }))), detailsId && /*#__PURE__*/React.createElement(DetailsPanel, {\n    onClose: () => setDetailsId(undefined)\n    // reset component state when modelId changes\n    ,\n    key: detailsId\n  }, /*#__PURE__*/React.createElement(DefaultDetailsPanelContent, {\n    modelId: detailsId\n  }))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, FlyoutMenu, IconEdit16, IconMore16, IconMore24, MenuItem, Popover } from '@dhis2/ui';\nimport React, { useState, useRef } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useHref, useLinkClickHandler } from 'react-router-dom';\nimport { DeleteAction } from '../../../components/sectionList/listActions/DeleteAction';\nimport { ListActions, ActionEdit } from '../../../components/sectionList/listActions/SectionListActions';\nimport { TooltipWrapper } from '../../../components/tooltip';\nimport { TOOLTIPS } from '../../../lib';\nimport { canDeleteModel } from '../../../lib/models/access';\nexport const OrganisationUnitListActions = _ref => {\n  let {\n    model,\n    onShowDetailsClick\n  } = _ref;\n  const deletable = canDeleteModel(model);\n  const queryClient = useQueryClient();\n  const handleDeleteSuccess = () => {\n    queryClient.invalidateQueries({\n      queryKey: [{\n        resource: 'organisationUnits'\n      }]\n    });\n  };\n  return /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(ActionEdit, {\n    modelId: model.id\n  }), /*#__PURE__*/React.createElement(OrganisationUnitActionMore, {\n    deletable: deletable,\n    model: model\n    // onTranslateClick={() => onOpenTranslationClick(model)}\n    ,\n    onDeleteSuccess: handleDeleteSuccess,\n    onShowDetailsClick: onShowDetailsClick\n  }));\n};\nconst OrganisationUnitActionMore = _ref2 => {\n  let {\n    deletable,\n    model,\n    // onTranslateClick,\n    onDeleteSuccess,\n    onShowDetailsClick\n  } = _ref2;\n  const [open, setOpen] = useState(false);\n  const ref = useRef(null);\n  const href = useHref(model.id, {\n    relative: 'path'\n  });\n  const handleEditClick = useLinkClickHandler(model.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: () => setOpen(!open),\n    dataTest: \"row-actions-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, null)\n  }), open && /*#__PURE__*/React.createElement(Popover, {\n    arrow: false,\n    placement: \"bottom-end\",\n    reference: ref,\n    onClickOutside: () => setOpen(false),\n    dataTest: \"row-actions-menu\"\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Show details'),\n    icon: /*#__PURE__*/React.createElement(IconMore16, null),\n    onClick: () => {\n      onShowDetailsClick(model);\n      setOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Edit'),\n    icon: /*#__PURE__*/React.createElement(IconEdit16, null),\n    onClick: (_, e) => {\n      handleEditClick(e);\n      setOpen(false);\n    },\n    target: \"_blank\",\n    href: href\n  }), /*#__PURE__*/React.createElement(TooltipWrapper, {\n    condition: !deletable,\n    content: TOOLTIPS.noDeleteAccess\n  }, /*#__PURE__*/React.createElement(DeleteAction, {\n    model: model,\n    disabled: !deletable,\n    onDeleteSuccess: () => {\n      onDeleteSuccess();\n      setOpen(false);\n    },\n    onCancel: () => setOpen(false)\n  })))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Center } from '@dhis2/ui';\nimport React from 'react';\nimport { SectionListLoader } from '../../../components/sectionList/SectionListLoader';\nimport { SectionListEmpty, SectionListError, SectionListMessage } from '../../../components/sectionList/SectionListMessages';\nexport const OrganisationUnitListMessage = _ref => {\n  let {\n    orgUnitCount,\n    isFiltering,\n    queries\n  } = _ref;\n  const firstError = queries.find(query => query.error);\n  if (firstError) {\n    console.error(firstError.error);\n    return /*#__PURE__*/React.createElement(SectionListError, null);\n  }\n\n  // we only show loading indicator when we don't have any data to show\n  // and some query is loading\n  const showLoading = orgUnitCount < 1 && queries.some(query => query.isLoading);\n  if (showLoading) {\n    return /*#__PURE__*/React.createElement(SectionListLoader, null);\n  }\n  if (isFiltering && orgUnitCount < 1) {\n    return /*#__PURE__*/React.createElement(SectionListEmpty, null);\n  }\n  // if for some reason we don't have any data, are not loading and are not filtering\n  // it could mean that the user doesn't have access to any org units\n  if (orgUnitCount < 1) {\n    return /*#__PURE__*/React.createElement(SectionListMessage, null, /*#__PURE__*/React.createElement(Center, null, i18n.t('No organisation units available')));\n  }\n  return null;\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Checkbox, DataTableCell, DataTableRow, IconArrowDown16, IconArrowUp16, IconChevronDown16, IconChevronRight16 } from '@dhis2/ui';\nimport { flexRender } from '@tanstack/react-table';\nimport React from 'react';\nimport css from './OrganisationUnitList.module.css';\nimport { OrganisationUnitListActions } from './OrganisationUnitListActions';\nexport const OrganisationUnitRow = _ref => {\n  let {\n    row,\n    toggleShowAll,\n    showAllActive,\n    isFiltering,\n    fetchNextPage,\n    onShowDetailsClick,\n    hasErrored\n  } = _ref;\n  const parentRow = row.getParentRow();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTableRow, {\n    key: row.id\n  }, /*#__PURE__*/React.createElement(DataTableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: `${row.depth * 2}rem`,\n      display: 'flex'\n    }\n  }, row.getCanExpand() ? /*#__PURE__*/React.createElement(React.Fragment, null, isFiltering && (showAllActive || row.original.childCount !== row.subRows.length) && /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: () => {\n      toggleShowAll(row.original.id);\n    },\n    icon: showAllActive ? /*#__PURE__*/React.createElement(IconArrowUp16, null) : /*#__PURE__*/React.createElement(IconArrowDown16, null)\n  }, \"Show all\"), /*#__PURE__*/React.createElement(Button, {\n    className: css.expandButton,\n    secondary: true,\n    type: \"button\",\n    dataTest: \"row-expand-icon\",\n    loading: row.getIsExpanded() && row.subRows.length < 1 && !hasErrored,\n    icon: row.getIsExpanded() ? /*#__PURE__*/React.createElement(IconChevronDown16, null) : /*#__PURE__*/React.createElement(IconChevronRight16, null),\n    onClick: row.getToggleExpandedHandler()\n  })) : null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: row.getIsSelected(),\n    onChange: _ref2 => {\n      let {\n        checked\n      } = _ref2;\n      return row.toggleSelected(checked);\n    }\n  }))), row.getVisibleCells().map(cell => {\n    return /*#__PURE__*/React.createElement(DataTableCell, {\n      key: cell.id\n    }, flexRender(cell.column.columnDef.cell, cell.getContext()));\n  }), /*#__PURE__*/React.createElement(DataTableCell, null, /*#__PURE__*/React.createElement(OrganisationUnitListActions, {\n    model: row.original,\n    onShowDetailsClick: onShowDetailsClick\n    // onOpenTranslationClick={()=>{}}\n  }))), !isFiltering && parentRow && parentRow.getIsExpanded() && parentRow.subRows.length < (parentRow === null || parentRow === void 0 ? void 0 : parentRow.original.childCount) && row === parentRow.subRows[parentRow.subRows.length - 1] && /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    colSpan: \"100\",\n    style: {\n      textAlign: 'center'\n    },\n    onClick: () => fetchNextPage(parentRow.original.id)\n  }, i18n.t('Load more for {{orgUnitName}}', {\n    orgUnitName: parentRow.original.displayName\n  }))));\n};","import { useCallback, useMemo, useState } from 'react';\nimport { useQuery, useQueries } from 'react-query';\nimport { useBoundResourceQueryFn } from '../../../lib/query/useBoundQueryFn';\nconst staticOrgUnitFields = ['id', 'access', 'displayName', 'level', 'path', 'parent', 'children~size~rename(childCount)'];\nconst getOrgUnitFieldFilters = fieldFilters => {\n  const orgUnitFields = staticOrgUnitFields.concat(fieldFilters);\n  const ancestorFields = `ancestors[${orgUnitFields.join()},href]`;\n  return orgUnitFields.concat(ancestorFields);\n};\nexport const useFilteredOrgUnits = _ref => {\n  let {\n    fieldFilters,\n    searchQuery,\n    enabled\n  } = _ref;\n  const boundQueryFn = useBoundResourceQueryFn();\n  const resourceQuery = {\n    resource: 'organisationUnits',\n    params: {\n      fields: getOrgUnitFieldFilters(fieldFilters),\n      query: searchQuery,\n      withinUserHierarchy: true\n    }\n  };\n  return useQuery({\n    enabled,\n    queryKey: [resourceQuery],\n    queryFn: boundQueryFn,\n    staleTime: 60000,\n    cacheTime: 60000,\n    keepPreviousData: true\n  });\n};\nexport const usePaginatedChildrenOrgUnitsController = options => {\n  const boundQueryFn = useBoundResourceQueryFn();\n  const parentIds = options.parentIds;\n\n  // store a \"map\" of pages to fetch for each parent id\n  const [parentIdPages, setFetchPages] = useState(Object.fromEntries(Object.keys(parentIds).map(id => [id, [1]])));\n\n  // this will create a query for each parent id and each page\n  // eg if parentIds = ['a', 'b'] and fetchPages = {a: [1, 2], b: [1]}\n  // then queries will be [['a', 1], ['a', 2], ['b', 1]]\n  const flatParentIdPages = useMemo(() => {\n    return Object.keys(parentIds).flatMap(id => {\n      const pages = parentIdPages[id] || [1];\n      return pages.map(p => [id, p]);\n    });\n  }, [parentIds, parentIdPages]);\n  const fetchNextPage = useCallback(id => {\n    setFetchPages(prev => {\n      const pages = prev[id] || [1];\n      return {\n        ...prev,\n        [id]: [...pages, pages[pages.length - 1] + 1]\n      };\n    });\n  }, [setFetchPages]);\n  const queryObjects = flatParentIdPages.map(_ref2 => {\n    let [id, page] = _ref2;\n    const resourceQuery = {\n      resource: 'organisationUnits',\n      params: {\n        fields: getOrgUnitFieldFilters(options.fieldFilters),\n        // `id:eq:id` is for an edge-case where a root-unit is a leaf-node\n        // and `parent.id`-filter would return empty results\n        filter: [`parent.id:eq:${id}`, `id:eq:${id}`],\n        rootJunction: 'OR',\n        order: 'displayName:asc',\n        page: page\n      }\n    };\n    const queryOptions = {\n      enabled: options.enabled,\n      queryKey: [resourceQuery],\n      queryFn: boundQueryFn,\n      staleTime: 60000,\n      cacheTime: 60000,\n      meta: {\n        parent: id\n      }\n    };\n    return queryOptions;\n  });\n  const queries = useQueries(queryObjects);\n  return {\n    queries,\n    fetchNextPage\n  };\n};","// extracted by mini-css-extract-plugin\nexport default {\"expandButton\":\"OrganisationUnitList_expandButton__AjbgN\",\"listDetailsWrapper\":\"OrganisationUnitList_listDetailsWrapper__eX9Q3\"};"],"names":["Component","React","OrganisationUnitList","columnDefinitions","useColumns","columns","selectedColumns","useModelListView","schema","useSchema","SchemaName","organisationUnit","useMemo","map","descriptor","accessorKey","path","header","label","cell","_ref","row","ModelValue","sectionModel","original","meta","fieldFilter","getFieldFilter","identifiableFilter","useSectionListFilter","userRootOrgUnits","useCurrentUserRootOrgUnits","initialExpandedState","Object","fromEntries","ou","id","parentIdsToLoad","setParentIdsToLoad","useState","expanded","setExpanded","detailsId","setDetailsId","handleDetailsClick","useCallback","_ref2","prevDetailsId","undefined","fieldFilters","column","queries","fetchNextPage","usePaginatedChildrenOrgUnitsController","parentIds","isFiltering","hasErrored","some","query","isError","orgUnitFiltered","useFilteredOrgUnits","searchQuery","enabled","useEffect","rootOrgUnits","flatOrgUnits","Map","deduplicatedOrgUnits","concat","flatMap","q","_q$data$organisationU","data","queryOrgs","organisationUnits","ancestors","reduce","acc","set","Array","from","values","handleExpand","valueOrUpdater","getAllExpanded","getValueWithRoot","value","old","table","useReactTable","getRowId","getCoreRowModel","getRowCanExpand","childCount","getSubRows","filter","d","_d$parent","parent","getExpandedRowModel","onExpandedChange","state","enableSubRowSelection","SectionListTitle","IdentifiableFilter","className","css","listDetailsWrapper","Toolbar","selectedModels","Set","getSelectedRowModel","flatRows","r","onDeselectAll","resetRowSelection","SectionList","headerColumns","getHeaderGroups","headers","h","columnDef","OrganisationUnitListMessage","orgUnitCount","getRowCount","getRowModel","rows","OrganisationUnitRow","key","toggleShowAll","prev","wasShown","withoutId","showAllActive","onShowDetailsClick","DetailsPanel","onClose","DefaultDetailsPanelContent","modelId","OrganisationUnitListActions","model","deletable","canDeleteModel","queryClient","useQueryClient","ListActions","ActionEdit","OrganisationUnitActionMore","onDeleteSuccess","handleDeleteSuccess","invalidateQueries","queryKey","resource","open","setOpen","ref","useRef","href","useHref","relative","handleEditClick","useLinkClickHandler","Button","small","secondary","onClick","dataTest","icon","IconMore24","Popover","arrow","placement","reference","onClickOutside","FlyoutMenu","MenuItem","dense","i18n","t","IconMore16","IconEdit16","_","e","target","TooltipWrapper","condition","content","TOOLTIPS","noDeleteAccess","DeleteAction","disabled","onCancel","firstError","find","error","console","SectionListError","isLoading","SectionListLoader","SectionListEmpty","SectionListMessage","Center","parentRow","getParentRow","DataTableRow","DataTableCell","style","paddingLeft","depth","display","getCanExpand","subRows","length","IconArrowUp16","IconArrowDown16","expandButton","type","loading","getIsExpanded","IconChevronDown16","IconChevronRight16","getToggleExpandedHandler","Checkbox","checked","getIsSelected","onChange","toggleSelected","getVisibleCells","flexRender","getContext","colSpan","textAlign","orgUnitName","displayName","staticOrgUnitFields","getOrgUnitFieldFilters","orgUnitFields","ancestorFields","join","boundQueryFn","useBoundResourceQueryFn","resourceQuery","params","fields","withinUserHierarchy","useQuery","queryFn","staleTime","cacheTime","keepPreviousData","options","parentIdPages","setFetchPages","keys","flatParentIdPages","p","pages","queryObjects","page","rootJunction","order","useQueries"],"sourceRoot":""}