{"version":3,"file":"static/js/9025.5f2048bd.chunk.js","mappings":"oRAQA,MAAMA,EAAWC,IACf,IAAKA,EAAMC,GACT,OAAOC,EAAAA,EAAKC,EAAE,WAChB,EAYK,SAASC,IACd,IAAIC,EACJ,MAAMC,GAA4BC,EAAAA,EAAAA,OAC5B,OACJC,IACEC,EAAAA,EAAAA,OACE,OACJC,IACEC,EAAAA,EAAAA,IAAa,CACfC,aAAc,CACZF,QAAQ,KAGNG,EAA4C,YAAtBH,EAAOI,WAC7BC,EAAWF,EACXG,EAAWD,OAAWE,EAAYlB,EAClCmB,GAAuBC,EAAAA,EAAAA,IAAQ,wBAC/B,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAAS,gBAAiB,CAC5BC,eAAgB,GAChBP,WACAQ,OAAQC,GAAiBA,EAAcxB,GACvCyB,MAAOzB,IAAE,CACPA,SAGE0B,GAAsBC,EAAAA,EAAAA,QAAO,CACjCC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAStC,OANAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAC6D,QAA5DA,EAAwB1B,EAA0B2B,YAA4C,IAA1BD,GAAoCA,EAAsB/B,IAAMY,GACvIL,EAAO,mBAAoBF,EAA0B2B,KAAKhC,GAC5D,GACC,CAACO,EAAsE,QAA7DH,EAAyBC,EAA0B2B,YAA6C,IAA3B5B,OAAoC,EAASA,EAAuBJ,GAAIY,IACtIqB,EAAAA,cAAoBC,EAAAA,GAAsB,CAC5DC,SAAU,2BACVC,UAAWA,IAAMV,EAAoBW,QAAQT,UAC7CU,SAAUA,IAAMC,OAAOC,KAAKvB,EAAsB,WACpCgB,EAAAA,cAAoB,MAAO,CACzCQ,UAAWC,EAAAA,QAAQC,qBACLV,EAAAA,cAAoBW,EAAAA,EAAO,CACzC9C,UAAU,EACV+C,KAAM,mBACNC,MAAO7C,EAAAA,EAAKC,EAAE,4BAA6B,CACzC6C,WAAY9C,EAAAA,EAAKC,EAAE,0BAErB8C,SAAU/C,EAAAA,EAAKC,EAAE,iDACjB+C,MAAO7B,EAAK8B,WAAa9B,EAAK6B,MAC9BE,eAAgB/B,EAAK8B,QAAU9B,EAAK6B,WAAQjC,EAC5CmB,SAAU,4BACIF,EAAAA,cAAoBmB,EAAAA,GAAqB,CACvDtD,UAAU,EACVuD,YAAa,GACbvC,SAAUA,EACVwC,QAASlC,EAAK8B,WAAa9B,EAAK6B,MAChCM,IAAK7B,EACL8B,SAAUrC,EAAMpB,MAChB0D,SAAUC,IACR,IAAI,SACFF,GACEE,EACJvC,EAAMsC,SAASD,GACfrC,EAAMwC,QAAQ,EAEhBA,OAAQxC,EAAMwC,OACdC,QAASzC,EAAMyC,YAEnB,C,+BC9FA,WAAgB,oBAAsB,gD","sources":["D2App/pages/dataElements/fields/CategoryComboField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/CategoryComboField.module.css?8aba"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useEffect, useRef } from 'react';\nimport { useField, useForm, useFormState } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { CategoryComboSelect, EditableFieldWrapper } from '../../../components';\nimport { useDefaultCategoryComboQuery } from '../../../lib';\nimport classes from './CategoryComboField.module.css';\nconst required = value => {\n  if (!value.id) {\n    return i18n.t('Required');\n  }\n};\n\n/*\n * @TODO: Verify that the api ignores the category combo when it's disabled.\n *        If it does not, file a jira issue and \"escalate\" this so it will be\n *        implemented\n *\n * Field rule: Disable when domainType is TRACKER\n * Field rule: Set categoryCombo.id to the default category combo when\n *             domainType is Tracker\n */\nexport function CategoryComboField() {\n  var _defaultCategoryCombo2;\n  const defaultCategoryComboQuery = useDefaultCategoryComboQuery();\n  const {\n    change\n  } = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const domainTypeIsTracker = values.domainType === 'TRACKER';\n  const disabled = domainTypeIsTracker;\n  const validate = disabled ? undefined : required;\n  const newCategoryComboLink = useHref('/categoryCombos/new');\n  const {\n    input,\n    meta\n  } = useField('categoryCombo', {\n    validateFields: [],\n    validate,\n    format: categoryCombo => categoryCombo.id,\n    parse: id => ({\n      id\n    })\n  });\n  const categoryComboHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  useEffect(() => {\n    var _defaultCategoryCombo;\n    if ((_defaultCategoryCombo = defaultCategoryComboQuery.data) !== null && _defaultCategoryCombo !== void 0 && _defaultCategoryCombo.id && domainTypeIsTracker) {\n      change('categoryCombo.id', defaultCategoryComboQuery.data.id);\n    }\n  }, [change, (_defaultCategoryCombo2 = defaultCategoryComboQuery.data) === null || _defaultCategoryCombo2 === void 0 ? void 0 : _defaultCategoryCombo2.id, domainTypeIsTracker]);\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-categorycombo\",\n    onRefresh: () => categoryComboHandle.current.refetch(),\n    onAddNew: () => window.open(newCategoryComboLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.categoryComboSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"categoryCombo.id\",\n    label: i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Category combination')\n    }),\n    helpText: i18n.t('Choose how this data element is disaggregated'),\n    error: meta.touched && !!meta.error,\n    validationText: meta.touched ? meta.error : undefined,\n    dataTest: \"formfields-categorycombo\"\n  }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n    required: true,\n    placeholder: \"\",\n    disabled: disabled,\n    invalid: meta.touched && !!meta.error,\n    ref: categoryComboHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      input.onChange(selected);\n      input.onBlur();\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","// extracted by mini-css-extract-plugin\nexport default {\"categoryComboSelect\":\"CategoryComboField_categoryComboSelect__X790g\"};"],"names":["required","value","id","i18n","t","CategoryComboField","_defaultCategoryCombo2","defaultCategoryComboQuery","useDefaultCategoryComboQuery","change","useForm","values","useFormState","subscription","domainTypeIsTracker","domainType","disabled","validate","undefined","newCategoryComboLink","useHref","input","meta","useField","validateFields","format","categoryCombo","parse","categoryComboHandle","useRef","refetch","Error","useEffect","_defaultCategoryCombo","data","React","EditableFieldWrapper","dataTest","onRefresh","current","onAddNew","window","open","className","classes","categoryComboSelect","Field","name","label","fieldLabel","helpText","error","touched","validationText","CategoryComboSelect","placeholder","invalid","ref","selected","onChange","_ref","onBlur","onFocus"],"sourceRoot":""}