{"version":3,"file":"static/js/1746.59e51950.chunk.js","mappings":"qRAQA,MAAMA,EAAe,IAAIC,EAAAA,MAA0BC,EAAAA,GAAgC,YAAa,OAAQ,cAAe,aAAc,QAAS,SAAU,0CAC3IC,EAAYA,KACvB,MAAMC,EAAUC,EAAAA,GAAaC,sBACvBC,GAAUC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,KAAYC,GACtBC,EAAQ,CACZC,SAAU,yBACVF,GAAIF,EACJK,OAAQ,CACNC,OAAQf,EAAagB,WAGnBC,GAA6BC,EAAAA,EAAAA,UAAS,CAC1CC,SAAU,CAACP,GACXL,QAASA,IAEX,OAAoBa,EAAAA,cAAoBC,EAAAA,GAAU,CAChDC,UAAUC,EAAAA,EAAAA,IAAgB,CACxBnB,UACAK,YAEFL,QAASA,EACToB,cAAeP,EAA2BQ,KAC1CC,SAAUA,EAAAA,UACIN,EAAAA,cAAoBO,EAAAA,GAAyB,CAC3DvB,QAASA,GACKgB,EAAAA,cAAoBQ,EAAAA,kCAAmC,OAAO,C,+IC9BzE,MAAMA,EAAoCA,KAC/C,MAAMxB,EAAUC,EAAAA,GAAawB,SAC7B,OAAoBT,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBU,EAAAA,GAAqB,KAAmBV,EAAAA,cAAoBW,EAAAA,GAA0B,KAAMC,EAAAA,EAAKC,EAAE,sBAAoCb,EAAAA,cAAoBc,EAAAA,GAAgC,KAAMF,EAAAA,EAAKC,EAAE,yEAAuFb,EAAAA,cAAoBe,EAAAA,GAA2B,MAAoBf,EAAAA,cAAoBgB,EAAAA,GAAmB,KAAmBhB,EAAAA,cAAoBiB,EAAAA,GAAkB,CAC/hBC,cAAelC,MACEgB,EAAAA,cAAoBU,EAAAA,GAAqB,KAAmBV,EAAAA,cAAoBW,EAAAA,GAA0B,KAAmBX,EAAAA,cAAoB,QAAS,CAC3KmB,QAAS,0BACRP,EAAAA,EAAKC,EAAE,wBAAsCb,EAAAA,cAAoBgB,EAAAA,GAAmB,KAAmBhB,EAAAA,cAAoBoB,EAAAA,GAAuB,QAAsBpB,EAAAA,cAAoBqB,EAAAA,GAAyB,CACtNH,cAAelC,IACd,C,8VCPL,MAAM,aACJsC,EAAY,oBACZC,EAAmB,oBACnBC,GACEC,EAAAA,GACSC,EAA8BJ,EAAaK,MAAMH,GAAqBI,OAAO,CACxFC,UAAWC,EAAAA,EAAEC,SAASC,OACtBC,KAAMH,EAAAA,EAAEC,SAASC,OAAOE,WACxBC,YAAaL,EAAAA,EAAEC,SAASC,OAAOE,WAC/BE,WAAYN,EAAAA,EAAEO,UACdC,MAAOR,EAAAA,EAAEC,SAASG,WAClBK,OAAQT,EAAAA,EAAEC,SAASG,WACnBM,kBAAmBV,EAAAA,EAAEW,MAAMX,EAAAA,EAAEY,OAAO,CAClCnD,GAAIuC,EAAAA,EAAEC,cAGG3B,GAAgBuC,EAAAA,EAAAA,IAAYjB,GAC5BpB,GAAWsC,EAAAA,EAAAA,IAAmBlB,E","sources":["D2App/pages/organisationUnitGroups/Edit.js","D2App/pages/organisationUnitGroups/form/OrganisationalUnitGroupFormFields.js","D2App/pages/organisationUnitGroups/form/organisationUnitGroupSchema.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { DefaultEditFormContents, FormBase } from '../../components';\nimport { ATTRIBUTE_VALUES_FIELD_FILTERS, DEFAULT_FIELD_FILTERS, SECTIONS_MAP, useOnSubmitEdit } from '../../lib';\nimport { useBoundResourceQueryFn } from '../../lib/query/useBoundQueryFn';\nimport { validate } from './form';\nimport { OrganisationalUnitGroupFormFields } from './form/OrganisationalUnitGroupFormFields';\nconst fieldFilters = [...DEFAULT_FIELD_FILTERS, ...ATTRIBUTE_VALUES_FIELD_FILTERS, 'shortName', 'code', 'description', 'compulsory', 'color', 'symbol', 'organisationUnits[id,displayName,path]'];\nexport const Component = () => {\n  const section = SECTIONS_MAP.organisationUnitGroup;\n  const queryFn = useBoundResourceQueryFn();\n  const modelId = useParams().id;\n  const query = {\n    resource: 'organisationUnitGroups',\n    id: modelId,\n    params: {\n      fields: fieldFilters.concat()\n    }\n  };\n  const organisationUnitGroupQuery = useQuery({\n    queryKey: [query],\n    queryFn: queryFn\n  });\n  return /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitEdit({\n      section,\n      modelId\n    }),\n    section: section,\n    initialValues: organisationUnitGroupQuery.data,\n    validate: validate\n  }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(OrganisationalUnitGroupFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { CustomAttributesSection, DefaultIdentifiableFields, DescriptionField, OrganisationUnitField, StandardFormField, StandardFormSection, StandardFormSectionDescription, StandardFormSectionTitle } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nexport const OrganisationalUnitGroupFormFields = () => {\n  const section = SECTIONS_MAP.category;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this organisational unit group set.')), /*#__PURE__*/React.createElement(DefaultIdentifiableFields, null), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DescriptionField, {\n    schemaSection: section\n  }))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'organisationUnitGroups'\n  }, i18n.t('Organisation units'))), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(OrganisationUnitField, null))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n};","import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\n\n/*  Note that this describes what we send to the server,\n    and not what is stored in the form. */\nconst {\n  identifiable,\n  referenceCollection,\n  withAttributeValues\n} = modelFormSchemas;\nexport const organisationUnitGroupSchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  compulsory: z.boolean(),\n  color: z.string().optional(),\n  symbol: z.string().optional(),\n  organisationUnits: z.array(z.object({\n    id: z.string()\n  }))\n});\nexport const initialValues = getDefaults(organisationUnitGroupSchema);\nexport const validate = createFormValidate(organisationUnitGroupSchema);"],"names":["fieldFilters","DEFAULT_FIELD_FILTERS","ATTRIBUTE_VALUES_FIELD_FILTERS","Component","section","SECTIONS_MAP","organisationUnitGroup","queryFn","useBoundResourceQueryFn","modelId","useParams","id","query","resource","params","fields","concat","organisationUnitGroupQuery","useQuery","queryKey","React","FormBase","onSubmit","useOnSubmitEdit","initialValues","data","validate","DefaultEditFormContents","OrganisationalUnitGroupFormFields","category","StandardFormSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","DefaultIdentifiableFields","StandardFormField","DescriptionField","schemaSection","htmlFor","OrganisationUnitField","CustomAttributesSection","identifiable","referenceCollection","withAttributeValues","modelFormSchemas","organisationUnitGroupSchema","merge","extend","shortName","z","string","trim","code","optional","description","compulsory","boolean","color","symbol","organisationUnits","array","object","getDefaults","createFormValidate"],"sourceRoot":""}