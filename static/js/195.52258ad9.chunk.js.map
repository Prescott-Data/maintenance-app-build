{"version":3,"file":"static/js/195.52258ad9.chunk.js","mappings":"yRAMA,MAAM,aACJA,EAAY,oBACZC,EAAmB,oBACnBC,GACEC,EAAAA,GACSC,EAAiBJ,EAAaK,MAAMH,GAAqBI,OAAO,CAC3EC,UAAWC,EAAAA,EAAEC,SAASC,OACtBC,KAAMH,EAAAA,EAAEC,SAASC,OAAOE,WACxBC,YAAaL,EAAAA,EAAEC,SAASC,OAAOE,WAC/BE,kBAAmBN,EAAAA,EAAEO,WAAWC,EAAAA,GAASF,mBAAmBG,QAAQD,EAAAA,GAASF,kBAAkBI,gBAC/FC,cAAeX,EAAAA,EAAEY,UAAUH,SAAQ,GACnCI,gBAAiBpB,EAAoBqB,IAAI,EAAG,4CAA4CL,QAAQ,MAErFM,GAAgBC,EAAAA,EAAAA,IAAYpB,GAC5BqB,GAAWC,EAAAA,EAAAA,IAAmBtB,E","sources":["D2App/pages/categories/form/categorySchema.js"],"sourcesContent":["import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\nimport { Category } from '../../../types/generated';\n\n/*  Note that this describes what we send to the server,\n    and not what is stored in the form. */\nconst {\n  identifiable,\n  referenceCollection,\n  withAttributeValues\n} = modelFormSchemas;\nexport const categorySchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  dataDimensionType: z.nativeEnum(Category.dataDimensionType).default(Category.dataDimensionType.DISAGGREGATION),\n  dataDimension: z.boolean().default(true),\n  categoryOptions: referenceCollection.min(1, 'At least one category option is required').default([])\n});\nexport const initialValues = getDefaults(categorySchema);\nexport const validate = createFormValidate(categorySchema);"],"names":["identifiable","referenceCollection","withAttributeValues","modelFormSchemas","categorySchema","merge","extend","shortName","z","string","trim","code","optional","description","dataDimensionType","nativeEnum","Category","default","DISAGGREGATION","dataDimension","boolean","categoryOptions","min","initialValues","getDefaults","validate","createFormValidate"],"sourceRoot":""}