{"version":3,"file":"static/js/6544.d3f82546.chunk.js","mappings":"+VAcA,MAAM,KACJA,IACEC,EAAAA,EAAAA,MACEC,EAAW,KAAIC,EAAAA,EAAAA,IAAeC,EAAAA,GAAgBC,eAmG7C,MAAMC,EAAYA,KACvB,IAAIC,EACJ,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GADSC,EAAAA,EAAAA,KACcC,GACvBC,EAvGR,SAA6BD,GAC3B,MAAME,EAAqB,CACzBT,YAAa,CACXU,SAAU,gBAAgBH,IAC1BI,OAAQ,CACNC,OAAQ,CAAC,IAAK,yBAIpB,OAAOC,EAAAA,EAAAA,IAAaJ,EAAoB,CACtCK,UAAW,CACTP,OAGN,CAyF2BQ,CAAoBV,GACvCW,GAAwBC,EAAAA,EAAAA,MACxBC,EAhDR,WACE,MAAMC,GAAaC,EAAAA,EAAAA,MACnB,OAAOC,UACL,IAAI,OACFC,EAAM,YACNC,EAAW,YACXvB,GACEwB,EACJ,MAAMC,GAAmBC,EAAAA,EAAAA,GAA0B,CACjDJ,SACAC,cACAI,cAAe3B,IAMX4B,EAAgC,CACpClB,SAAU,eACVH,GAAIe,EAAOf,GACXsB,KAAM,aACNC,KAAMC,IACJ,IAAI,WACFC,GACED,EACJ,OAAOC,CAAU,GAGrB,UACQb,EAAWc,OAAOL,EAA+B,CACrDd,UAAW,CACTkB,WAAYP,IAGlB,CAAE,MAAOS,GACP,MAAO,CACL,CAACC,EAAAA,IAAaD,EAAEE,WAEpB,EAEJ,CAQ2BC,GAazB,MAAMC,EAvGR,SAA8BC,GAC5B,IAAIC,EAAoBC,EACxB,IAAI,cACFpC,EAAa,YACbL,EAAW,iBACX0C,GACEH,EACJ,IAAKvC,EACH,MAAO,CAAC,EAEV,MAAM2C,GAAkBC,EAAAA,EAAAA,GAAsB5C,EAAY2C,gBAAiBD,GAC3E,MAAO,CACLnC,GAAIF,EACJwC,KAAM7C,EAAY6C,KAClBC,UAAW9C,EAAY8C,UACvBC,KAAM/C,EAAY+C,KAClBC,YAAahD,EAAYgD,YACzBC,IAAKjD,EAAYiD,IACjBC,MAAO,CACLC,MAAoD,QAA5CX,EAAqBxC,EAAYkD,aAA0C,IAAvBV,OAAgC,EAASA,EAAmBW,MACxHC,KAAoD,QAA7CX,EAAsBzC,EAAYkD,aAA2C,IAAxBT,OAAiC,EAASA,EAAoBW,MAE5HC,UAAWrD,EAAYqD,UACvBC,WAAYtD,EAAYsD,WACxBC,SAAUvD,EAAYuD,SACtBC,UAAWxD,EAAYwD,UACvBC,gBAAiBzD,EAAYyD,gBAC7BC,cAAe1D,EAAY0D,eAAiB,CAC1CnD,GAAI,IAENoD,UAAW3D,EAAY2D,WAAa,CAClCpD,GAAI,IAENqD,iBAAkB5D,EAAY4D,kBAAoB,CAChDrD,GAAI,IAENsD,WAAY7D,EAAY6D,YAAc,GACtCC,kBAAmB9D,EAAY8D,mBAAqB,GACpDC,kBAAmB/D,EAAY+D,kBAC/BpB,kBAEJ,CA8DwBqB,CAAqB,CACzC3D,gBACAL,YAAkE,QAApDE,EAAyBM,EAAiBsB,YAA6C,IAA3B5B,OAAoC,EAASA,EAAuBF,YAC9I0C,iBAAkB1B,EAAsBc,MAAQ,KAElD,OAAoBmC,EAAAA,cAAoBC,EAAAA,GAAQ,CAC9CC,cAAe3D,EACf4D,MAAOC,EAAAA,EAAKC,EAAE,iBACAL,EAAAA,cAAoBC,EAAAA,GAAQ,CAC1CC,cAAenD,EACfoD,MAAOC,EAAAA,EAAKC,EAAE,sBACAL,EAAAA,cAAoBtE,EAAM,CACxC4E,gBAAgB,EAChBC,SAzBFnD,eAAwBC,EAAQmD,GAC9B,IAAIC,EACJ,MAAMC,QAAezD,EAAiB,CACpCI,SACAC,YAAakD,EAAKG,WAAWrD,YAC7BvB,YAAiE,QAAnD0E,EAAwBlE,EAAiBsB,YAA4C,IAA1B4C,OAAmC,EAASA,EAAsB1E,cAE7I,GAAI2E,EACF,OAAOA,EAETxE,EAASN,EACX,EAeEgF,SAAUvD,IACDuD,EAAAA,EAAAA,IAASC,EAAAA,kBAAmBxD,GAErCgB,cAAeA,IACdyC,IACD,IAAI,aACFC,EAAY,WACZC,EAAU,YACVC,GACEH,EACJ,OAAoBd,EAAAA,cAAoB,OAAQ,CAC9CO,SAAUQ,GACIf,EAAAA,cAAoBkB,EAAc,CAChDD,YAAaA,EACbD,WAAYA,IACX,KACD,EAEN,SAASE,EAAaC,GACpB,IAAI,YACFF,EAAW,WACXD,GACEG,EACJ,MAAMC,GAAeC,EAAAA,EAAAA,QAAO,MACtBnF,GAAWC,EAAAA,EAAAA,MASjB,OARAmF,EAAAA,EAAAA,YAAU,KAEN,IAAIC,EADFN,IAEiD,QAAlDM,EAAwBH,EAAaI,eAA+C,IAA1BD,GAA4CA,EAAsBE,eAAe,CAC1IC,SAAU,WAEd,GACC,CAACT,IACgBjB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMiB,GAA4BjB,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoB,MAAO,CAC/K4B,IAAKR,GACSpB,EAAAA,cAAoB6B,EAAAA,EAAW,CAC7CC,OAAO,EACPC,MAAO3B,EAAAA,EAAKC,EAAE,kDACbY,KAA6BjB,EAAAA,cAAoB,MAAO,CACzDgC,UAAWC,EAAAA,QAAQzB,MACLR,EAAAA,cAAoBkC,EAAAA,sBAAuB,OAAqBlC,EAAAA,cAAoB,MAAO,CACzGgC,UAAWC,EAAAA,QAAQE,aACLnC,EAAAA,cAAoBoC,EAAAA,GAAqB,CACvDC,YAAajC,EAAAA,EAAKC,EAAE,UACpBiC,YAAalC,EAAAA,EAAKC,EAAE,kBACpBW,WAAYA,EACZuB,cAAeA,IAAMrG,EAASN,MAElC,C,yJChMO,SAASsG,IACd,MAAMM,EAAU1G,EAAAA,GAAgBC,YAChC,OAAoBiE,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoByC,EAAAA,GAA0B,KAAMrC,EAAAA,EAAKC,EAAE,sBAAoCL,EAAAA,cAAoB0C,EAAAA,GAAgC,KAAMtC,EAAAA,EAAKC,EAAE,iDAA+DL,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB4C,EAAAA,GAAW,CAC7bC,cAAeL,KACCxC,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB8C,EAAAA,GAAgB,CAC9GD,cAAeL,KACCxC,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB+C,EAAAA,cAAe,OAAqB/C,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBgD,EAAAA,GAAW,CAC3NH,cAAeL,KACCxC,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBiD,EAAAA,GAAkB,CAChHC,SAAU9C,EAAAA,EAAKC,EAAE,6CACjBwC,cAAeL,KACCxC,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBmD,EAAAA,SAAU,OAAqBnD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBoD,EAAAA,kBAAmB,OAAqBpD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBqD,EAAAA,eAAgB,OAAqBrD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBsD,EAAAA,uBAAwB,OAAqBtD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBuD,EAAAA,YAAa,OAAqBvD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoBwD,EAAAA,eAAgB,OAAqBxD,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoByD,EAAAA,qBAAsB,QAAsBzD,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoByC,EAAAA,GAA0B,KAAMrC,EAAAA,EAAKC,EAAE,mCAAiDL,EAAAA,cAAoB0C,EAAAA,GAAgC,KAAMtC,EAAAA,EAAKC,EAAE,kDAAgEL,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB0D,EAAAA,mBAAoB,OAAqB1D,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB2D,EAAAA,eAAgB,OAAqB3D,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB4D,EAAAA,sBAAuB,QAAsB5D,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoByC,EAAAA,GAA0B,KAAMrC,EAAAA,EAAKC,EAAE,eAA6BL,EAAAA,cAAoB0C,EAAAA,GAAgC,KAAMtC,EAAAA,EAAKC,EAAE,gGAA8GL,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB6D,EAAAA,eAAgB,QAAsB7D,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoByC,EAAAA,GAA0B,KAAMrC,EAAAA,EAAKC,EAAE,uBAAqCL,EAAAA,cAAoB0C,EAAAA,GAAgC,KAAMtC,EAAAA,EAAKC,EAAE,mZAAiaL,EAAAA,cAAoB2C,EAAAA,GAAmB,KAAmB3C,EAAAA,cAAoB8D,EAAAA,uBAAwB,QAAsB9D,EAAAA,cAAoB+D,EAAAA,GAAyB,CAC1qFlB,cAAeL,IAEnB,C,8FCnBO,MAAM3B,EAAoBmD,EAAAA,EAAEC,OAAO,CACxCrF,KAAMoF,EAAAA,EAAEE,SAASC,OACjBtF,UAAWmF,EAAAA,EAAEE,SAASC,OACtBrF,KAAMkF,EAAAA,EAAEE,SAASC,OACjBpF,YAAaiF,EAAAA,EAAEE,SAASC,OACxB7E,SAAU0E,EAAAA,EAAEE,SAASC,OACrBnF,IAAKgF,EAAAA,EAAEE,SAASC,OAChB/E,UAAW4E,EAAAA,EAAEE,SAASC,OACtBlF,MAAO+E,EAAAA,EAAEC,OAAO,CACd/E,MAAO8E,EAAAA,EAAEE,SAASE,WAClBjF,KAAM6E,EAAAA,EAAEE,SAASE,aAEnB/E,WAAY2E,EAAAA,EAAEK,MAAM,CAACL,EAAAA,EAAEM,QAAQ,aAAcN,EAAAA,EAAEM,QAAQ,aACvD/E,UAAWyE,EAAAA,EAAEE,SACb1E,gBAAiBwE,EAAAA,EAAEE,SACnBxE,UAAWsE,EAAAA,EAAEC,OAAO,CAClB3H,GAAI0H,EAAAA,EAAEE,WAERvE,iBAAkBqE,EAAAA,EAAEC,OAAO,CACzB3H,GAAI0H,EAAAA,EAAEE,WAERtE,WAAYoE,EAAAA,EAAEO,MAAMP,EAAAA,EAAEC,OAAO,CAC3B3H,GAAI0H,EAAAA,EAAEE,YAERrE,kBAAmBmE,EAAAA,EAAEO,MAAMP,EAAAA,EAAEQ,UAC7B9F,gBAAiBsF,EAAAA,EAAEO,MAAMP,EAAAA,EAAEC,OAAO,CAChCQ,MAAOT,EAAAA,EAAEE,SAASE,WAClBM,UAAWV,EAAAA,EAAEC,OAAO,CAClB3H,GAAI0H,EAAAA,EAAEE,gBAGTS,S,0NC/BH,WAAgB,KAAO,mBAAmB,YAAc,0B","sources":["D2App/pages/dataElements/Edit.js","D2App/pages/dataElements/form/DataElementFormFields.js","D2App/pages/dataElements/form/dataElementSchema.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/Edit.module.css?74df"],"sourcesContent":["import { useDataEngine, useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { FORM_ERROR } from 'final-form';\nimport React, { useEffect, useRef } from 'react';\nimport { withTypes } from 'react-final-form';\nimport { useParams } from 'react-router-dom';\nimport { Loader, StandardFormActions, StandardFormSection } from '../../components';\nimport { useCustomAttributesQuery } from '../../components/form';\nimport { SCHEMA_SECTIONS, getSectionPath, useNavigateWithSearchState, validate } from '../../lib';\nimport { createJsonPatchOperations } from '../../lib/form/createJsonPatchOperations';\nimport { getAllAttributeValues } from '../../lib/models/attributes';\nimport classes from './Edit.module.css';\nimport { DataElementFormFields, dataElementSchema } from './form';\nconst {\n  Form\n} = withTypes();\nconst listPath = `/${getSectionPath(SCHEMA_SECTIONS.dataElement)}`;\nfunction useDataElementQuery(id) {\n  const DATA_ELEMENT_QUERY = {\n    dataElement: {\n      resource: `dataElements/${id}`,\n      params: {\n        fields: ['*', 'attributeValues[*]']\n      }\n    }\n  };\n  return useDataQuery(DATA_ELEMENT_QUERY, {\n    variables: {\n      id\n    }\n  });\n}\nfunction computeInitialValues(_ref) {\n  var _dataElement$style, _dataElement$style2;\n  let {\n    dataElementId,\n    dataElement,\n    customAttributes\n  } = _ref;\n  if (!dataElement) {\n    return {};\n  }\n  const attributeValues = getAllAttributeValues(dataElement.attributeValues, customAttributes);\n  return {\n    id: dataElementId,\n    name: dataElement.name,\n    shortName: dataElement.shortName,\n    code: dataElement.code,\n    description: dataElement.description,\n    url: dataElement.url,\n    style: {\n      color: (_dataElement$style = dataElement.style) === null || _dataElement$style === void 0 ? void 0 : _dataElement$style.color,\n      icon: (_dataElement$style2 = dataElement.style) === null || _dataElement$style2 === void 0 ? void 0 : _dataElement$style2.icon\n    },\n    fieldMask: dataElement.fieldMask,\n    domainType: dataElement.domainType,\n    formName: dataElement.formName,\n    valueType: dataElement.valueType,\n    aggregationType: dataElement.aggregationType,\n    categoryCombo: dataElement.categoryCombo || {\n      id: ''\n    },\n    optionSet: dataElement.optionSet || {\n      id: ''\n    },\n    commentOptionSet: dataElement.commentOptionSet || {\n      id: ''\n    },\n    legendSets: dataElement.legendSets || [],\n    aggregationLevels: dataElement.aggregationLevels || [],\n    zeroIsSignificant: dataElement.zeroIsSignificant,\n    attributeValues\n  };\n}\nfunction usePatchDirtyFields() {\n  const dataEngine = useDataEngine();\n  return async _ref2 => {\n    let {\n      values,\n      dirtyFields,\n      dataElement\n    } = _ref2;\n    const jsonPatchPayload = createJsonPatchOperations({\n      values,\n      dirtyFields,\n      originalValue: dataElement\n    });\n\n    // We want the promise so we know when submitting is done. The promise\n    // returned by the mutation function of useDataMutation will never\n    // resolve\n    const ADD_NEW_DATA_ELEMENT_MUTATION = {\n      resource: 'dataElements',\n      id: values.id,\n      type: 'json-patch',\n      data: _ref3 => {\n        let {\n          operations\n        } = _ref3;\n        return operations;\n      }\n    };\n    try {\n      await dataEngine.mutate(ADD_NEW_DATA_ELEMENT_MUTATION, {\n        variables: {\n          operations: jsonPatchPayload\n        }\n      });\n    } catch (e) {\n      return {\n        [FORM_ERROR]: e.toString()\n      };\n    }\n  };\n}\nexport const Component = () => {\n  var _dataElementQuery$dat2;\n  const navigate = useNavigateWithSearchState();\n  const params = useParams();\n  const dataElementId = params.id;\n  const dataElementQuery = useDataElementQuery(dataElementId);\n  const customAttributesQuery = useCustomAttributesQuery();\n  const patchDirtyFields = usePatchDirtyFields();\n  async function onSubmit(values, form) {\n    var _dataElementQuery$dat;\n    const errors = await patchDirtyFields({\n      values,\n      dirtyFields: form.getState().dirtyFields,\n      dataElement: (_dataElementQuery$dat = dataElementQuery.data) === null || _dataElementQuery$dat === void 0 ? void 0 : _dataElementQuery$dat.dataElement\n    });\n    if (errors) {\n      return errors;\n    }\n    navigate(listPath);\n  }\n  const initialValues = computeInitialValues({\n    dataElementId,\n    dataElement: (_dataElementQuery$dat2 = dataElementQuery.data) === null || _dataElementQuery$dat2 === void 0 ? void 0 : _dataElementQuery$dat2.dataElement,\n    customAttributes: customAttributesQuery.data || []\n  });\n  return /*#__PURE__*/React.createElement(Loader, {\n    queryResponse: dataElementQuery,\n    label: i18n.t('Data element')\n  }, /*#__PURE__*/React.createElement(Loader, {\n    queryResponse: customAttributesQuery,\n    label: i18n.t('Custom attributes')\n  }, /*#__PURE__*/React.createElement(Form, {\n    validateOnBlur: true,\n    onSubmit: onSubmit,\n    validate: values => {\n      return validate(dataElementSchema, values);\n    },\n    initialValues: initialValues\n  }, _ref4 => {\n    let {\n      handleSubmit,\n      submitting,\n      submitError\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(FormContents, {\n      submitError: submitError,\n      submitting: submitting\n    }));\n  })));\n};\nfunction FormContents(_ref5) {\n  let {\n    submitError,\n    submitting\n  } = _ref5;\n  const formErrorRef = useRef(null);\n  const navigate = useNavigateWithSearchState();\n  useEffect(() => {\n    if (submitError) {\n      var _formErrorRef$current;\n      (_formErrorRef$current = formErrorRef.current) === null || _formErrorRef$current === void 0 ? void 0 : _formErrorRef$current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [submitError]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, submitError && /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: formErrorRef\n  }, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong when submitting the form')\n  }, submitError))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form\n  }, /*#__PURE__*/React.createElement(DataElementFormFields, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formActions\n  }, /*#__PURE__*/React.createElement(StandardFormActions, {\n    cancelLabel: i18n.t('Cancel'),\n    submitLabel: i18n.t('Save and close'),\n    submitting: submitting,\n    onCancelClick: () => navigate(listPath)\n  })));\n}","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, StandardFormField, CustomAttributesSection } from '../../../components';\nimport { CodeField, DescriptionField, NameField, ShortNameField } from '../../../components/form';\nimport { SCHEMA_SECTIONS } from '../../../lib';\nimport { AggregationLevelsField, AggregationTypeField, CategoryComboField, ColorAndIconField, DomainField, FieldMaskField, FormNameField, LegendSetField, OptionSetCommentField, OptionSetField, UrlField, ValueTypeField, ZeroIsSignificantField } from '../fields';\nexport function DataElementFormFields() {\n  const section = SCHEMA_SECTIONS.dataElement;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the information for this data element')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(NameField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ShortNameField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(FormNameField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CodeField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DescriptionField, {\n    helpText: i18n.t('Explain the purpose of this data element.'),\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(UrlField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ColorAndIconField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(FieldMaskField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ZeroIsSignificantField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DomainField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ValueTypeField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(AggregationTypeField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Disaggregation and Option sets')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up disaggregation and predefined options.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CategoryComboField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(OptionSetField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(OptionSetCommentField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Legend set')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Visualize values for this data element in Analytics app. Multiple legendSet can be applied.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(LegendSetField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Aggregation levels')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('By default, the aggregation will start at the lowest assigned organisation unit. If you for example select \"Chiefdom\", it means that \"Chiefdom\", \"District\" and \"National\" aggregates use \"Chiefdom\" (the highest aggregation level available) as the data source, and PHU data will not be included. PHU will still be available for the PHU level, but not included in the aggregations to the levels above.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(AggregationLevelsField, null))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n}","import { z } from 'zod';\nexport const dataElementSchema = z.object({\n  name: z.string().trim(),\n  shortName: z.string().trim(),\n  code: z.string().trim(),\n  description: z.string().trim(),\n  formName: z.string().trim(),\n  url: z.string().trim(),\n  fieldMask: z.string().trim(),\n  style: z.object({\n    color: z.string().optional(),\n    icon: z.string().optional()\n  }),\n  domainType: z.union([z.literal('AGGREGATE'), z.literal('TRACKER')]),\n  valueType: z.string(),\n  aggregationType: z.string(),\n  optionSet: z.object({\n    id: z.string()\n  }),\n  commentOptionSet: z.object({\n    id: z.string()\n  }),\n  legendSets: z.array(z.object({\n    id: z.string()\n  })),\n  aggregationLevels: z.array(z.number()),\n  attributeValues: z.array(z.object({\n    value: z.string().optional(),\n    attribute: z.object({\n      id: z.string()\n    })\n  }))\n}).partial();","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Edit_form__bKt93\",\"formActions\":\"Edit_formActions__y4qQF\"};"],"names":["Form","withTypes","listPath","getSectionPath","SCHEMA_SECTIONS","dataElement","Component","_dataElementQuery$dat2","navigate","useNavigateWithSearchState","dataElementId","useParams","id","dataElementQuery","DATA_ELEMENT_QUERY","resource","params","fields","useDataQuery","variables","useDataElementQuery","customAttributesQuery","useCustomAttributesQuery","patchDirtyFields","dataEngine","useDataEngine","async","values","dirtyFields","_ref2","jsonPatchPayload","createJsonPatchOperations","originalValue","ADD_NEW_DATA_ELEMENT_MUTATION","type","data","_ref3","operations","mutate","e","FORM_ERROR","toString","usePatchDirtyFields","initialValues","_ref","_dataElement$style","_dataElement$style2","customAttributes","attributeValues","getAllAttributeValues","name","shortName","code","description","url","style","color","icon","fieldMask","domainType","formName","valueType","aggregationType","categoryCombo","optionSet","commentOptionSet","legendSets","aggregationLevels","zeroIsSignificant","computeInitialValues","React","Loader","queryResponse","label","i18n","t","validateOnBlur","onSubmit","form","_dataElementQuery$dat","errors","getState","validate","dataElementSchema","_ref4","handleSubmit","submitting","submitError","FormContents","_ref5","formErrorRef","useRef","useEffect","_formErrorRef$current","current","scrollIntoView","behavior","StandardFormSection","ref","NoticeBox","error","title","className","classes","DataElementFormFields","formActions","StandardFormActions","cancelLabel","submitLabel","onCancelClick","section","StandardFormSectionTitle","StandardFormSectionDescription","StandardFormField","NameField","schemaSection","ShortNameField","FormNameField","CodeField","DescriptionField","helpText","UrlField","ColorAndIconField","FieldMaskField","ZeroIsSignificantField","DomainField","ValueTypeField","AggregationTypeField","CategoryComboField","OptionSetField","OptionSetCommentField","LegendSetField","AggregationLevelsField","CustomAttributesSection","z","object","string","trim","optional","union","literal","array","number","value","attribute","partial"],"sourceRoot":""}