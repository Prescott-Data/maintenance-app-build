{"version":3,"file":"static/js/9416.1ae1abff.chunk.js","mappings":"mSAaO,SAASA,IACd,IAAIC,EACJ,MAAMC,EAAO,gBACP,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAASH,EAAM,CACjBI,UAAU,EACVC,OAAQC,GAAiC,OAAjBA,QAA0C,IAAjBA,OAA0B,EAASA,EAAaC,KAAID,GAAgBA,EAAaE,KAClIC,MAAOC,GAAOA,EAAIH,KAAIC,IAAE,CACtBA,SAEFG,eAAgB,KAEZC,GAAsBC,EAAAA,EAAAA,IAAQ,qBAC9BC,GAAqBC,EAAAA,EAAAA,QAAO,CAChCC,QAASA,IAAMC,QAAQC,MAAM,qBAEzBC,EAA2BC,EAAAA,cAAoB,IAAK,CACxDC,UAAWC,EAAAA,QAAQC,0BAClBC,EAAAA,EAAKC,EAAE,2BACJC,EAA0BN,EAAAA,cAAoB,MAAO,CACzDC,UAAWC,EAAAA,QAAQK,2BACLP,EAAAA,cAAoBQ,EAAAA,EAAa,KAAmBR,EAAAA,cAAoBS,EAAAA,EAAQ,CAC9FC,OAAO,EACPC,QAASjB,EAAmBkB,QAAQhB,SACnCQ,EAAAA,EAAKC,EAAE,iBAA+BL,EAAAA,cAAoBS,EAAAA,EAAQ,CACnEC,OAAO,EACPC,QAASA,IAAME,OAAOC,KAAKtB,EAAqB,WAC/CY,EAAAA,EAAKC,EAAE,cACV,OAAoBL,EAAAA,cAAoBe,EAAAA,EAAO,CAC7CC,SAAU,6BACVlB,QAAShB,EAAKgB,MACdmB,eAA+C,QAA9BtC,EAAcG,EAAKgB,aAAmC,IAAhBnB,OAAyB,EAASA,EAAYuC,WACrGtC,KAAMA,GACQoB,EAAAA,cAAoBmB,EAAAA,GAAsB,CACxDC,IAAK1B,EACL2B,SAAUxC,EAAMyC,MAChBC,SAAUC,IACR,IAAI,SACFH,GACEG,EACJ,OAAO3C,EAAM0C,SAASF,EAAS,EAEjCtB,YAAaA,EACbO,WAAYA,IAEhB,C,8IC3DA,WAAgB,0BAA4B,qDAAqD,yBAA2B,oD","sources":["D2App/pages/dataElementGroups/fields/DataElementsField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElementGroups/fields/DataElementsField.module.css?3e66"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { ButtonStrip, Button, Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { DataElementsTransfer } from '../../../components';\nimport classes from './DataElementsField.module.css';\n\n/**\n *\n * DataElements\n *\n */\nexport function DataElementsField() {\n  var _meta$error;\n  const name = 'dataElements';\n  const {\n    input,\n    meta\n  } = useField(name, {\n    multiple: true,\n    format: dataElements => dataElements === null || dataElements === void 0 ? void 0 : dataElements.map(dataElements => dataElements.id),\n    parse: ids => ids.map(id => ({\n      id\n    })),\n    validateFields: []\n  });\n  const newDataElementsLink = useHref('/dataElements/new');\n  const dataElementsHandle = useRef({\n    refetch: () => console.error('Not initialized')\n  });\n  const rightHeader = /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.dataElementsPickedHeader\n  }, i18n.t('Selected data elements'));\n  const leftFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dataElementsOptionsFooter\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: dataElementsHandle.current.refetch\n  }, i18n.t('Refresh list')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => window.open(newDataElementsLink, '_blank')\n  }, i18n.t('Add new'))));\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-dataElementsets\",\n    error: !!meta.error,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString(),\n    name: name\n  }, /*#__PURE__*/React.createElement(DataElementsTransfer, {\n    ref: dataElementsHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    rightHeader: rightHeader,\n    leftFooter: leftFooter\n  }));\n}","// extracted by mini-css-extract-plugin\nexport default {\"dataElementsOptionsFooter\":\"DataElementsField_dataElementsOptionsFooter__Fn5g8\",\"dataElementsPickedHeader\":\"DataElementsField_dataElementsPickedHeader__bqjmJ\"};"],"names":["DataElementsField","_meta$error","name","input","meta","useField","multiple","format","dataElements","map","id","parse","ids","validateFields","newDataElementsLink","useHref","dataElementsHandle","useRef","refetch","console","error","rightHeader","React","className","classes","dataElementsPickedHeader","i18n","t","leftFooter","dataElementsOptionsFooter","ButtonStrip","Button","small","onClick","current","window","open","Field","dataTest","validationText","toString","DataElementsTransfer","ref","selected","value","onChange","_ref"],"sourceRoot":""}