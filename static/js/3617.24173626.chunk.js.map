{"version":3,"file":"static/js/3617.24173626.chunk.js","mappings":"0NAEO,MAAMA,EAAkCC,IAC7C,IAAI,gBACFC,EAAe,mBACfC,KACGC,GACDH,EACJ,MAAMI,GAAUC,EAAAA,EAAAA,MACVC,EAAwB,SAASL,IACjCM,EAAYL,EAAmBM,KAAIC,GAAY,oBAAoBA,EAASC,OAE5EC,EAAU,CADK,iBAAiBT,EAAmBU,YACvBL,GAC9BN,GACFU,EAAQE,KAAKP,GAEf,MAAMP,EAAkC,CACtCe,SAAU,iBACVC,OAAQ,CACNC,OAAQ,CAAC,KAAM,eACfC,OAAQN,IAGZ,OAAOO,EAAAA,EAAAA,UAAS,CACdC,UAAW,OACRhB,EACHiB,SAAU,CAACrB,GACXK,QAASA,GACT,C","sources":["D2App/pages/categoryCombos/form/useIdenticalCategoryCombosQuery.js"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useBoundResourceQueryFn } from '../../../lib/query/useBoundQueryFn';\nexport const useIdenticalCategoryCombosQuery = _ref => {\n  let {\n    categoryComboId,\n    selectedCategories,\n    ...queryOptions\n  } = _ref;\n  const queryFn = useBoundResourceQueryFn();\n  const notSameCatComboFilter = `id:ne:${categoryComboId}`;\n  const idFilters = selectedCategories.map(category => `categories.id:eq:${category.id}`);\n  const lengthFilter = `categories:eq:${selectedCategories.length}`;\n  const filters = [lengthFilter, ...idFilters];\n  if (categoryComboId) {\n    filters.push(notSameCatComboFilter);\n  }\n  const useIdenticalCategoryCombosQuery = {\n    resource: 'categoryCombos',\n    params: {\n      fields: ['id', 'displayName'],\n      filter: filters\n    }\n  };\n  return useQuery({\n    staleTime: 60 * 1000,\n    ...queryOptions,\n    queryKey: [useIdenticalCategoryCombosQuery],\n    queryFn: queryFn\n  });\n};"],"names":["useIdenticalCategoryCombosQuery","_ref","categoryComboId","selectedCategories","queryOptions","queryFn","useBoundResourceQueryFn","notSameCatComboFilter","idFilters","map","category","id","filters","length","push","resource","params","fields","filter","useQuery","staleTime","queryKey"],"sourceRoot":""}