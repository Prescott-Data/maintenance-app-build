{"version":3,"file":"static/js/6101.6317073a.chunk.js","mappings":"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","sources":["D2App/pages/categoryOptionGroups/Edit.js","D2App/pages/categoryOptionGroups/form/CategoryOptionGroupFormFields.js","D2App/pages/categoryOptionGroups/form/categoryOptionGroupSchema.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { DefaultEditFormContents, FormBase } from '../../components';\nimport { ATTRIBUTE_VALUES_FIELD_FILTERS, DEFAULT_FIELD_FILTERS, SECTIONS_MAP, useOnSubmitEdit } from '../../lib';\nimport { useBoundResourceQueryFn } from '../../lib/query/useBoundQueryFn';\nimport CategoryOptionGroupFormFields from './form/CategoryOptionGroupFormFields';\nimport { validate } from './form/categoryOptionGroupSchema';\nconst fieldFilters = [...DEFAULT_FIELD_FILTERS, ...ATTRIBUTE_VALUES_FIELD_FILTERS, 'name', 'shortName', 'code', 'description', 'categoryOptions[id,displayName]', 'dataDimensionType'];\nexport const Component = () => {\n  const section = SECTIONS_MAP.categoryOptionGroup;\n  const queryFn = useBoundResourceQueryFn();\n  const modelId = useParams().id;\n  const query = {\n    resource: 'categoryOptionGroups',\n    id: modelId,\n    params: {\n      fields: fieldFilters.concat()\n    }\n  };\n  const categoryOptionGroupQuery = useQuery({\n    queryKey: [query],\n    queryFn: queryFn\n  });\n  return /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitEdit({\n      section,\n      modelId\n    }),\n    section: section,\n    initialValues: categoryOptionGroupQuery.data,\n    validate: validate\n  }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(CategoryOptionGroupFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { RadioFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport { CustomAttributesSection, DefaultIdentifiableFields, DescriptionField, HorizontalFieldGroup, ModelTransferField, StandardFormField, StandardFormSection, StandardFormSectionDescription, StandardFormSectionTitle } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nfunction CategoryOptionGroupFormFields() {\n  const section = SECTIONS_MAP.categoryOptionGroup;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this category option group.')), /*#__PURE__*/React.createElement(DefaultIdentifiableFields, null), /*#__PURE__*/React.createElement(DescriptionField, {\n    schemaSection: section,\n    helpText: i18n.t('Explain the purpose of this category option group.')\n  })), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Data configuration')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose how this category option  will be used to capture and analyze')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(HorizontalFieldGroup, {\n    label: 'Data dimension type (required)'\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Disaggregation'),\n    type: \"radio\",\n    value: 'DISAGGREGATION'\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Attribute'),\n    type: \"radio\",\n    value: 'ATTRIBUTE'\n  })))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'categoryOptions'\n  }, i18n.t('Category options'))), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose the category options to include in this category.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ModelTransferField, {\n    name: \"categoryOptions\",\n    query: {\n      resource: 'categoryOptions',\n      params: {\n        filter: ['isDefault:eq:false']\n      }\n    },\n    leftHeader: i18n.t('Available category options'),\n    rightHeader: i18n.t('Selected category options'),\n    filterPlaceholder: i18n.t('Filter available category options'),\n    filterPlaceholderPicked: i18n.t('Filter selected category options')\n  }))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  })));\n}\nexport default CategoryOptionGroupFormFields;","import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\nimport { CategoryOptionGroup } from '../../../types/generated';\n\n/*  Note that this describes what we send to the server, \n    and not what is stored in the form. */\nconst {\n  identifiable,\n  referenceCollection,\n  withAttributeValues\n} = modelFormSchemas;\nexport const categoryOptionGroupSchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  dataDimensionType: z.nativeEnum(CategoryOptionGroup.dataDimensionType).default(CategoryOptionGroup.dataDimensionType.DISAGGREGATION),\n  categoryOptions: referenceCollection.min(1, 'At least one category option is required').default([])\n});\nexport const initialValues = getDefaults(categoryOptionGroupSchema);\nexport const validate = createFormValidate(categoryOptionGroupSchema);"],"names":["fieldFilters","DEFAULT_FIELD_FILTERS","ATTRIBUTE_VALUES_FIELD_FILTERS","Component","section","SECTIONS_MAP","categoryOptionGroup","queryFn","useBoundResourceQueryFn","modelId","useParams","id","query","resource","params","fields","concat","categoryOptionGroupQuery","useQuery","queryKey","React","FormBase","onSubmit","useOnSubmitEdit","initialValues","data","validate","DefaultEditFormContents","CategoryOptionGroupFormFields","StandardFormSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","DefaultIdentifiableFields","DescriptionField","schemaSection","helpText","StandardFormField","HorizontalFieldGroup","label","Field","name","component","RadioFieldFF","type","value","htmlFor","ModelTransferField","filter","leftHeader","rightHeader","filterPlaceholder","filterPlaceholderPicked","CustomAttributesSection","identifiable","referenceCollection","withAttributeValues","modelFormSchemas","categoryOptionGroupSchema","merge","extend","shortName","z","string","trim","code","optional","description","dataDimensionType","nativeEnum","CategoryOptionGroup","default","DISAGGREGATION","categoryOptions","min","getDefaults","createFormValidate"],"sourceRoot":""}