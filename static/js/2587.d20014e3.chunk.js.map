{"version":3,"file":"static/js/2587.d20014e3.chunk.js","mappings":"qQAMO,SAASA,IACd,IAAIC,EAAcC,EAAaC,EAAuBC,EAAwBC,EAAeC,EAAuBC,EAAwBC,EAC5I,MAAMC,EAAY,YACZ,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAASH,GACPI,EAAeC,IACnB,IAAI,UACFC,EAAS,SACTC,GACEF,EACJ,MAAMG,EAAW,CACfC,KAAM,QACNC,YAAa,CAACJ,QAAaK,EAAWJ,QAAYI,IAEpDV,EAAMW,SAASJ,GACfP,EAAMY,QAAQ,EAEhB,OAAQZ,EAAMa,OAA6G,WAAlE,QAAhCtB,EAAeS,EAAMa,aAAoC,IAAjBtB,OAA0B,EAASA,EAAaiB,MAqC7FM,EAAAA,cAAoBC,EAAAA,EAAY,CAClDC,YAAaC,EAAAA,EAAKC,EAAE,wCAAyC,CAC3DV,MAAMW,EAAAA,EAAAA,IAAyD,QAAjCrB,EAAgBE,EAAMa,aAAqC,IAAlBf,OAA2B,EAASA,EAAcU,QAE3HY,WAAY,QACZC,UAAU,IA1CsIP,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBQ,EAAAA,EAAO,CAClOC,UAAWC,EAAAA,QAAIC,gBACfC,KAAM3B,EACN4B,MAAO1B,EAAK2B,WAAa3B,EAAK0B,MAC9BE,eAAgB5B,EAAK2B,QAAyC,QAA9BpC,EAAcS,EAAK0B,aAAmC,IAAhBnC,OAAyB,EAASA,EAAYiB,iBAAcC,GACpHI,EAAAA,cAAoBC,EAAAA,EAAY,CAC9CJ,SAAUmB,IACR,IAAIC,EAAeC,EACnB,OAAO7B,EAAa,CAClBE,UAAWyB,EAAEjB,MAAQoB,WAAWH,EAAEjB,YAASH,EAC3CJ,SAA4C,QAAjCyB,EAAgB/B,EAAMa,aAAqC,IAAlBkB,GAA4F,QAAvDC,EAAwBD,EAActB,mBAAmD,IAA1BuB,OAAzE,EAAqHA,EAAsB,IAC1N,EAEJE,MAAOjB,EAAAA,EAAKC,EAAE,aACdE,WAAY,QACZM,KAAM,YACNlB,KAAM,SACNK,MAA6D,QAArDpB,EAAwBO,EAAMa,MAAMJ,mBAAmD,IAA1BhB,GAAoG,QAAvDC,EAAyBD,EAAsB,UAA2C,IAA3BC,OAAzE,EAAsHA,EAAuByC,WACrPC,IAAK,MACLC,IAAK,KACLC,KAAM,QACSxB,EAAAA,cAAoBC,EAAAA,EAAY,CAC/CJ,SAAUmB,IACR,IAAIS,EAAeC,EACnB,OAAOrC,EAAa,CAClBE,UAA6C,QAAjCkC,EAAgBvC,EAAMa,aAAqC,IAAlB0B,GAA4F,QAAvDC,EAAwBD,EAAc9B,mBAAmD,IAA1B+B,OAAzE,EAAqHA,EAAsB,GAC3NlC,SAAUwB,EAAEjB,MAAQoB,WAAWH,EAAEjB,YAASH,GAC1C,EAEJU,WAAY,QACZc,MAAOjB,EAAAA,EAAKC,EAAE,aACdQ,KAAM,WACNlB,KAAM,SACNK,MAAyC,QAAjClB,EAAgBK,EAAMa,aAAqC,IAAlBlB,GAA4F,QAAvDC,EAAwBD,EAAcc,mBAAmD,IAA1Bb,GAAoG,QAAvDC,EAAyBD,EAAsB,UAA2C,IAA3BC,OAArL,EAAkOA,EAAuBsC,WACrUC,IAAK,OACLC,IAAK,MACLC,KAAM,SAQV,C,+BCpEA,WAAgB,gBAAkB,wC","sources":["D2App/pages/organisationUnits/form/GeometryFields.js","webpack://@dhis2/app-shell/./src/D2App/pages/organisationUnits/form/GeometryFields.module.css?a4cf"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { useField } from 'react-final-form';\nimport { getConstantTranslation } from '../../../lib';\nimport css from './GeometryFields.module.css';\nexport function GeometryFields() {\n  var _input$value, _meta$error, _input$value$coordina, _input$value$coordina2, _input$value4, _input$value4$coordin, _input$value4$coordin2, _input$value5;\n  const fieldName = 'geometry';\n  const {\n    input,\n    meta\n  } = useField(fieldName);\n  const handleChange = _ref => {\n    let {\n      longitude,\n      latitude\n    } = _ref;\n    const geometry = {\n      type: 'Point',\n      coordinates: [longitude || undefined, latitude || undefined]\n    };\n    input.onChange(geometry);\n    input.onBlur();\n  };\n  return !input.value || ((_input$value = input.value) === null || _input$value === void 0 ? void 0 : _input$value.type) === 'Point' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n    className: css.coordinateField,\n    name: fieldName,\n    error: meta.touched && !!meta.error,\n    validationText: meta.touched ? (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.coordinates : undefined\n  }, /*#__PURE__*/React.createElement(InputField, {\n    onChange: e => {\n      var _input$value2, _input$value2$coordin;\n      return handleChange({\n        longitude: e.value ? parseFloat(e.value) : undefined,\n        latitude: (_input$value2 = input.value) === null || _input$value2 === void 0 ? void 0 : (_input$value2$coordin = _input$value2.coordinates) === null || _input$value2$coordin === void 0 ? void 0 : _input$value2$coordin[1]\n      });\n    },\n    label: i18n.t('Longitude'),\n    inputWidth: \"400px\",\n    name: \"longitude\",\n    type: \"number\",\n    value: (_input$value$coordina = input.value.coordinates) === null || _input$value$coordina === void 0 ? void 0 : (_input$value$coordina2 = _input$value$coordina[0]) === null || _input$value$coordina2 === void 0 ? void 0 : _input$value$coordina2.toString(),\n    min: \"-90\",\n    max: \"90\",\n    step: \"any\"\n  }), /*#__PURE__*/React.createElement(InputField, {\n    onChange: e => {\n      var _input$value3, _input$value3$coordin;\n      return handleChange({\n        longitude: (_input$value3 = input.value) === null || _input$value3 === void 0 ? void 0 : (_input$value3$coordin = _input$value3.coordinates) === null || _input$value3$coordin === void 0 ? void 0 : _input$value3$coordin[0],\n        latitude: e.value ? parseFloat(e.value) : undefined\n      });\n    },\n    inputWidth: \"400px\",\n    label: i18n.t('Longitude'),\n    name: \"latitude\",\n    type: \"number\",\n    value: (_input$value4 = input.value) === null || _input$value4 === void 0 ? void 0 : (_input$value4$coordin = _input$value4.coordinates) === null || _input$value4$coordin === void 0 ? void 0 : (_input$value4$coordin2 = _input$value4$coordin[1]) === null || _input$value4$coordin2 === void 0 ? void 0 : _input$value4$coordin2.toString(),\n    min: \"-180\",\n    max: \"180\",\n    step: \"any\"\n  }))) : /*#__PURE__*/React.createElement(InputField, {\n    placeholder: i18n.t('{{type}} coordinates are not editable', {\n      type: getConstantTranslation((_input$value5 = input.value) === null || _input$value5 === void 0 ? void 0 : _input$value5.type)\n    }),\n    inputWidth: \"400px\",\n    disabled: true\n  });\n}","// extracted by mini-css-extract-plugin\nexport default {\"coordinateField\":\"GeometryFields_coordinateField__jZie1\"};"],"names":["GeometryFields","_input$value","_meta$error","_input$value$coordina","_input$value$coordina2","_input$value4","_input$value4$coordin","_input$value4$coordin2","_input$value5","fieldName","input","meta","useField","handleChange","_ref","longitude","latitude","geometry","type","coordinates","undefined","onChange","onBlur","value","React","InputField","placeholder","i18n","t","getConstantTranslation","inputWidth","disabled","Field","className","css","coordinateField","name","error","touched","validationText","e","_input$value2","_input$value2$coordin","parseFloat","label","toString","min","max","step","_input$value3","_input$value3$coordin"],"sourceRoot":""}