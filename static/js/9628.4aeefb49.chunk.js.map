{"version":3,"file":"static/js/9628.4aeefb49.chunk.js","mappings":"0QAOA,MAAMA,EAAe,IAAIC,EAAAA,MAA0BC,EAAAA,GAAgC,OAAQ,OAAQ,kBAC7FC,EAAUC,EAAAA,GAAaC,oBAChBC,EAAYA,KACvB,MAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,KAAYC,GACtBC,EAAQ,CACZC,SAAU,uBACVF,GAAIF,EACJK,OAAQ,CACNC,OAAQf,EAAagB,WAGnBX,GAAsBY,EAAAA,EAAAA,UAAS,CACnCC,SAAU,CAACN,GACXL,QAASA,IAEX,OAAoBY,EAAAA,cAAoBC,EAAAA,GAAU,CAChDC,UAAUC,EAAAA,EAAAA,IAAgB,CACxBnB,UACAM,YAEFN,QAASA,EACToB,cAAelB,EAAoBmB,KACnCC,SAAUA,EAAAA,UACIN,EAAAA,cAAoBO,EAAAA,GAAyB,CAC3DvB,QAASA,GACKgB,EAAAA,cAAoBQ,EAAAA,8BAA+B,OAAO,C,iKC3B5E,MAAMxB,E,SAAUC,GAAaC,oBAChBsB,EAAgCA,IACvBR,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBS,EAAAA,GAAqB,KAAmBT,EAAAA,cAAoBU,EAAAA,GAA0B,KAAMC,EAAAA,EAAKC,EAAE,sBAAoCZ,EAAAA,cAAoBa,EAAAA,GAAgC,KAAMF,EAAAA,EAAKC,EAAE,oDAAkEZ,EAAAA,cAAoBc,EAAAA,GAAmB,KAAmBd,EAAAA,cAAoBe,EAAAA,GAAO,CAC5bC,UAAWC,EAAAA,EACXC,SAAU,kBACVC,UAAU,EACVC,WAAY,QACZC,MAAOV,EAAAA,EAAKC,EAAE,QACdU,KAAM,OACNC,eAAgB,MACAvB,EAAAA,cAAoBc,EAAAA,GAAmB,KAAmBd,EAAAA,cAAoBwB,EAAAA,GAAW,CACzGC,cAAezC,KACCgB,EAAAA,cAAoBc,EAAAA,GAAmB,KAAmBd,EAAAA,cAAoBe,EAAAA,GAAO,CACrGC,UAAWU,EAAAA,EACXJ,KAAM,iBACND,MAAOV,EAAAA,EAAKC,EAAE,wBACdW,eAAgB,GAChBI,KAAM,eACW3B,EAAAA,cAAoB4B,EAAAA,GAAyB,CAC9DH,cAAezC,I,4LCtBnB,MAAM,oBACJ6C,GACEC,EAAAA,GAGSC,EAA4BF,EAAoBG,OAAO,CAClExC,GAAIyC,EAAAA,EAAEC,SACNC,KAAMF,EAAAA,EAAEC,SAASE,OAAOC,WACxBC,eAAgBL,EAAAA,EAAEM,UAAUF,WAAWG,SAAQ,KAEpCpC,GAAgBqC,EAAAA,EAAAA,IAAYV,GAC5BzB,GAAWoC,EAAAA,EAAAA,GAAmBX,E","sources":["D2App/pages/categoryOptionCombos/Edit.js","D2App/pages/categoryOptionCombos/form/CategoryOptionComboFormFields.js","D2App/pages/categoryOptionCombos/form/categoryOptionComboSchema.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { DefaultEditFormContents, FormBase } from '../../components';\nimport { ATTRIBUTE_VALUES_FIELD_FILTERS, DEFAULT_FIELD_FILTERS, SECTIONS_MAP, useOnSubmitEdit } from '../../lib';\nimport { useBoundResourceQueryFn } from '../../lib/query/useBoundQueryFn';\nimport { validate, CategoryOptionComboFormFields } from './form';\nconst fieldFilters = [...DEFAULT_FIELD_FILTERS, ...ATTRIBUTE_VALUES_FIELD_FILTERS, 'name', 'code', 'ignoreApproval'];\nconst section = SECTIONS_MAP.categoryOptionCombo;\nexport const Component = () => {\n  const queryFn = useBoundResourceQueryFn();\n  const modelId = useParams().id;\n  const query = {\n    resource: 'categoryOptionCombos',\n    id: modelId,\n    params: {\n      fields: fieldFilters.concat()\n    }\n  };\n  const categoryOptionCombo = useQuery({\n    queryKey: [query],\n    queryFn: queryFn\n  });\n  return /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitEdit({\n      section,\n      modelId\n    }),\n    section: section,\n    initialValues: categoryOptionCombo.data,\n    validate: validate\n  }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(CategoryOptionComboFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { CheckboxFieldFF, InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport { StandardFormField, StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, CodeField, CustomAttributesSection } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nconst section = SECTIONS_MAP.categoryOptionCombo;\nexport const CategoryOptionComboFormFields = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this category.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    component: InputFieldFF,\n    dataTest: \"formfields-name\",\n    disabled: true,\n    inputWidth: \"400px\",\n    label: i18n.t('Name'),\n    name: \"name\",\n    validateFields: []\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CodeField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    component: CheckboxFieldFF,\n    name: \"ignoreApproval\",\n    label: i18n.t('Ignore data approval'),\n    validateFields: [],\n    type: \"checkbox\"\n  }))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n};","import { z } from 'zod';\nimport { getDefaults, modelFormSchemas } from '../../../lib';\nimport { createFormValidate } from '../../../lib/form/validate';\nconst {\n  withAttributeValues\n} = modelFormSchemas;\n\n// categoryCombos should only be able to change the code and attributes\nexport const categoryOptionComboSchema = withAttributeValues.extend({\n  id: z.string(),\n  code: z.string().trim().optional(),\n  ignoreApproval: z.boolean().optional().default(false)\n});\nexport const initialValues = getDefaults(categoryOptionComboSchema);\nexport const validate = createFormValidate(categoryOptionComboSchema);"],"names":["fieldFilters","DEFAULT_FIELD_FILTERS","ATTRIBUTE_VALUES_FIELD_FILTERS","section","SECTIONS_MAP","categoryOptionCombo","Component","queryFn","useBoundResourceQueryFn","modelId","useParams","id","query","resource","params","fields","concat","useQuery","queryKey","React","FormBase","onSubmit","useOnSubmitEdit","initialValues","data","validate","DefaultEditFormContents","CategoryOptionComboFormFields","StandardFormSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","StandardFormField","Field","component","InputFieldFF","dataTest","disabled","inputWidth","label","name","validateFields","CodeField","schemaSection","CheckboxFieldFF","type","CustomAttributesSection","withAttributeValues","modelFormSchemas","categoryOptionComboSchema","extend","z","string","code","trim","optional","ignoreApproval","boolean","default","getDefaults","createFormValidate"],"sourceRoot":""}