{"version":3,"file":"static/js/2966.6baffa0d.chunk.js","mappings":"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","sources":["D2App/pages/dataElementGroups/Edit.js","D2App/pages/dataElementGroups/fields/DataElementsField.js","D2App/pages/dataElementGroups/form/DataElementGroupFormFields.js","D2App/pages/dataElementGroups/form/dataElementGroupSchema.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElementGroups/fields/DataElementsField.module.css?3e66"],"sourcesContent":["import { useDataQuery } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { withTypes } from 'react-final-form';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Loader } from '../../components';\nimport { DefaultEditFormContents, useCustomAttributesQuery } from '../../components/form';\nimport { SCHEMA_SECTIONS, getSectionPath, usePatchModel, validate } from '../../lib';\nimport { createJsonPatchOperations } from '../../lib/form/createJsonPatchOperations';\nimport { getAllAttributeValues } from '../../lib/models/attributes';\nimport { DataElementGroupFormFields, dataElementGroupSchema } from './form';\nconst {\n  Form\n} = withTypes();\nconst section = SCHEMA_SECTIONS.dataElementGroup;\nconst query = {\n  dataElementGroup: {\n    resource: `dataElementGroups`,\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: {\n      fields: ['*', 'attributeValues[*]']\n    }\n  }\n};\nfunction useDataElementGroupQuery(id) {\n  return useDataQuery(query, {\n    variables: {\n      id\n    }\n  });\n}\nfunction computeInitialValues(_ref2) {\n  let {\n    dataElementGroup,\n    customAttributes\n  } = _ref2;\n  if (!dataElementGroup) {\n    return {};\n  }\n\n  // We want to have an array in the state with all attributes, not just the\n  // ones that are set\n  const attributeValues = getAllAttributeValues(dataElementGroup.attributeValues, customAttributes);\n  return {\n    id: dataElementGroup.id,\n    name: dataElementGroup.name,\n    shortName: dataElementGroup.shortName,\n    code: dataElementGroup.code,\n    dataElements: dataElementGroup.dataElements,\n    attributeValues\n  };\n}\nexport const Component = () => {\n  var _dataElementGroupQuer;\n  const params = useParams();\n  const dataElementGroupId = params.id;\n  const dataElementGroupQuery = useDataElementGroupQuery(dataElementGroupId);\n  const attributesQuery = useCustomAttributesQuery();\n  const dataElementGroup = (_dataElementGroupQuer = dataElementGroupQuery.data) === null || _dataElementGroupQuer === void 0 ? void 0 : _dataElementGroupQuer.dataElementGroup;\n  return /*#__PURE__*/React.createElement(Loader, {\n    queryResponse: dataElementGroupQuery,\n    label: i18n.t('Data element group')\n  }, /*#__PURE__*/React.createElement(Loader, {\n    queryResponse: attributesQuery,\n    label: i18n.t('Attributes')\n  }, /*#__PURE__*/React.createElement(DataElementGroupForm, {\n    dataElementGroup: dataElementGroup,\n    attributes: attributesQuery.data\n  })));\n};\nfunction DataElementGroupForm(_ref3) {\n  let {\n    dataElementGroup,\n    attributes\n  } = _ref3;\n  const navigate = useNavigate();\n  const patchDirtyFields = usePatchModel(dataElementGroup.id, section.namePlural);\n  async function onSubmit(values, form) {\n    const jsonPatchOperations = createJsonPatchOperations({\n      values,\n      dirtyFields: form.getState().dirtyFields,\n      originalValue: dataElementGroup\n    });\n    const errors = await patchDirtyFields(jsonPatchOperations);\n    if (errors) {\n      return errors;\n    }\n    navigate(getSectionPath(section));\n  }\n  return /*#__PURE__*/React.createElement(Form, {\n    validateOnBlur: true,\n    onSubmit: onSubmit,\n    validate: values => {\n      return validate(dataElementGroupSchema, values);\n    },\n    initialValues: computeInitialValues({\n      dataElementGroup,\n      customAttributes: attributes\n    })\n  }, _ref4 => {\n    let {\n      handleSubmit\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n      section: section\n    }, /*#__PURE__*/React.createElement(DataElementGroupFormFields, null)));\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { ButtonStrip, Button, Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { DataElementsTransfer } from '../../../components';\nimport classes from './DataElementsField.module.css';\n\n/**\n *\n * DataElements\n *\n */\nexport function DataElementsField() {\n  var _meta$error;\n  const name = 'dataElements';\n  const {\n    input,\n    meta\n  } = useField(name, {\n    multiple: true,\n    format: dataElements => dataElements === null || dataElements === void 0 ? void 0 : dataElements.map(dataElements => dataElements.id),\n    parse: ids => ids.map(id => ({\n      id\n    })),\n    validateFields: []\n  });\n  const newDataElementsLink = useHref('/dataElements/new');\n  const dataElementsHandle = useRef({\n    refetch: () => console.error('Not initialized')\n  });\n  const rightHeader = /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.dataElementsPickedHeader\n  }, i18n.t('Selected data elements'));\n  const leftFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dataElementsOptionsFooter\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: dataElementsHandle.current.refetch\n  }, i18n.t('Refresh list')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => window.open(newDataElementsLink, '_blank')\n  }, i18n.t('Add new'))));\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-dataElementsets\",\n    error: !!meta.error,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString(),\n    name: name\n  }, /*#__PURE__*/React.createElement(DataElementsTransfer, {\n    ref: dataElementsHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    rightHeader: rightHeader,\n    leftFooter: leftFooter\n  }));\n}","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, StandardFormField, CustomAttributesSection } from '../../../components';\nimport { DefaultIdentifiableFields, DescriptionField } from '../../../components/form';\nimport { SCHEMA_SECTIONS } from '../../../lib';\nimport { DataElementsField } from '../fields';\nconst section = SCHEMA_SECTIONS.dataElementGroup;\nexport function DataElementGroupFormFields() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the information for this data element group')), /*#__PURE__*/React.createElement(DefaultIdentifiableFields, null), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DescriptionField, {\n    schemaSection: section,\n    helpText: i18n.t('Explain the purpose of this data element group.')\n  }))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Data elements')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, ''), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DataElementsField, null))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n}","import { z } from 'zod';\nexport const dataElementGroupSchema = z.object({\n  name: z.string().trim(),\n  shortName: z.string().trim(),\n  code: z.string().trim(),\n  description: z.string().trim(),\n  dataElements: z.array(z.object({\n    id: z.string()\n  }))\n}).partial();","// extracted by mini-css-extract-plugin\nexport default {\"dataElementsOptionsFooter\":\"DataElementsField_dataElementsOptionsFooter__Fn5g8\",\"dataElementsPickedHeader\":\"DataElementsField_dataElementsPickedHeader__bqjmJ\"};"],"names":["Form","withTypes","section","SCHEMA_SECTIONS","dataElementGroup","query","resource","id","_ref","params","fields","computeInitialValues","_ref2","customAttributes","attributeValues","getAllAttributeValues","name","shortName","code","dataElements","Component","_dataElementGroupQuer","dataElementGroupId","useParams","dataElementGroupQuery","useDataQuery","variables","attributesQuery","useCustomAttributesQuery","data","React","Loader","queryResponse","label","i18n","t","DataElementGroupForm","attributes","_ref3","navigate","useNavigate","patchDirtyFields","usePatchModel","namePlural","validateOnBlur","onSubmit","async","values","form","jsonPatchOperations","createJsonPatchOperations","dirtyFields","getState","originalValue","errors","getSectionPath","validate","dataElementGroupSchema","initialValues","_ref4","handleSubmit","DefaultEditFormContents","DataElementGroupFormFields","DataElementsField","_meta$error","input","meta","useField","multiple","format","map","parse","ids","validateFields","newDataElementsLink","useHref","dataElementsHandle","useRef","refetch","console","error","rightHeader","className","classes","dataElementsPickedHeader","leftFooter","dataElementsOptionsFooter","ButtonStrip","Button","small","onClick","current","window","open","Field","dataTest","validationText","toString","DataElementsTransfer","ref","selected","value","onChange","StandardFormSection","StandardFormSectionTitle","StandardFormSectionDescription","DefaultIdentifiableFields","StandardFormField","DescriptionField","schemaSection","helpText","CustomAttributesSection","z","object","string","trim","description","array","partial"],"sourceRoot":""}