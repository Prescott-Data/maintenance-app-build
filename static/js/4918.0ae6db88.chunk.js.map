{"version":3,"file":"static/js/4918.0ae6db88.chunk.js","mappings":"yRAaO,SAASA,IACd,IAAIC,EACJ,MAAMC,EAAO,cACP,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAASH,EAAM,CACjBI,UAAU,EACVC,OAAQC,GAA6B,OAAfA,QAAsC,IAAfA,OAAwB,EAASA,EAAWC,KAAIC,GAAaA,EAAUC,KACpHC,MAAOC,GAAOA,EAAIJ,KAAIE,IAAE,CACtBA,SAEFG,eAAgB,KAEZC,GAAmBC,EAAAA,EAAAA,IAAQ,mBAC3BC,GAAkBC,EAAAA,EAAAA,QAAO,CAC7BC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAGhCC,EAA2BC,EAAAA,cAAoB,IAAK,CACxDC,UAAWC,EAAAA,QAAQC,qBAClBC,EAAAA,EAAKC,EAAE,qBACJC,EAA0BN,EAAAA,cAAoB,MAAO,CACzDC,UAAWC,EAAAA,QAAQK,sBACLP,EAAAA,cAAoBQ,EAAAA,EAAa,KAAmBR,EAAAA,cAAoBS,EAAAA,EAAQ,CAC9FC,OAAO,EACPC,QAAShB,EAAgBiB,QAAQf,SAChCO,EAAAA,EAAKC,EAAE,iBAA+BL,EAAAA,cAAoBS,EAAAA,EAAQ,CACnEC,OAAO,EACPC,QAASA,IAAME,OAAOC,KAAKrB,EAAkB,WAC5CW,EAAAA,EAAKC,EAAE,cACV,OAAoBL,EAAAA,cAAoBe,EAAAA,EAAO,CAC7CC,SAAU,wBACVC,QAASnC,EAAKmC,MACdC,eAA+C,QAA9BvC,EAAcG,EAAKmC,aAAmC,IAAhBtC,OAAyB,EAASA,EAAYwC,WACrGvC,KAAMA,GACQoB,EAAAA,cAAoBoB,EAAAA,GAAmB,CACrDC,IAAK1B,EACL2B,SAAUzC,EAAM0C,MAChBC,SAAUC,IACR,IAAI,SACFH,GACEG,EACJ,OAAO5C,EAAM2C,SAASF,EAAS,EAEjCvB,YAAaA,EACbO,WAAYA,IAEhB,C,8BC7DA,WAAgB,qBAAuB,6CAA6C,oBAAsB,4C","sources":["D2App/pages/dataElements/fields/LegendSetField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/LegendSetField.module.css?85e3"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { ButtonStrip, Button, Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { LegendSetTransfer } from '../../../components';\nimport classes from './LegendSetField.module.css';\n\n/**\n *\n * LegendSet\n *\n */\nexport function LegendSetField() {\n  var _meta$error;\n  const name = 'legendSets';\n  const {\n    input,\n    meta\n  } = useField(name, {\n    multiple: true,\n    format: legendSets => legendSets === null || legendSets === void 0 ? void 0 : legendSets.map(legendSet => legendSet.id),\n    parse: ids => ids.map(id => ({\n      id\n    })),\n    validateFields: []\n  });\n  const newLegendSetLink = useHref('/legendSets/new');\n  const legendSetHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  const rightHeader = /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.legendsPickedHeader\n  }, i18n.t('Selected legends'));\n  const leftFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendsOptionsFooter\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: legendSetHandle.current.refetch\n  }, i18n.t('Refresh list')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => window.open(newLegendSetLink, '_blank')\n  }, i18n.t('Add new'))));\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-legendsets\",\n    error: !!meta.error,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString(),\n    name: name\n  }, /*#__PURE__*/React.createElement(LegendSetTransfer, {\n    ref: legendSetHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    rightHeader: rightHeader,\n    leftFooter: leftFooter\n  }));\n}","// extracted by mini-css-extract-plugin\nexport default {\"legendsOptionsFooter\":\"LegendSetField_legendsOptionsFooter__sImkA\",\"legendsPickedHeader\":\"LegendSetField_legendsPickedHeader__gP48Q\"};"],"names":["LegendSetField","_meta$error","name","input","meta","useField","multiple","format","legendSets","map","legendSet","id","parse","ids","validateFields","newLegendSetLink","useHref","legendSetHandle","useRef","refetch","Error","rightHeader","React","className","classes","legendsPickedHeader","i18n","t","leftFooter","legendsOptionsFooter","ButtonStrip","Button","small","onClick","current","window","open","Field","dataTest","error","validationText","toString","LegendSetTransfer","ref","selected","value","onChange","_ref"],"sourceRoot":""}