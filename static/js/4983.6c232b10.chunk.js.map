{"version":3,"file":"static/js/4983.6c232b10.chunk.js","mappings":"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","sources":["D2App/pages/dataElements/New.js","D2App/pages/dataElements/New.spec.js","D2App/pages/dataElements/form/DataElementFormFields.js","D2App/pages/dataElements/form/dataElementSchema.js","D2App/pages/defaultFormTests.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/New.module.css?ccf2"],"sourcesContent":["import { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox } from '@dhis2/ui';\nimport { FORM_ERROR } from 'final-form';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { Form } from 'react-final-form';\nimport { Loader, StandardFormActions, StandardFormSection } from '../../components';\nimport { useCustomAttributesQuery } from '../../components/form';\nimport { DEFAULT_CATEGORY_COMBO, SCHEMA_SECTIONS, getSectionPath, useNavigateWithSearchState, useSchemas, validate } from '../../lib';\nimport { DataElementFormFields, dataElementSchema } from './form';\nimport classes from './New.module.css';\nconst listPath = `/${getSectionPath(SCHEMA_SECTIONS.dataElement)}`;\nfunction useInitialValues(customAttributes) {\n  const schemas = useSchemas();\n  const attributeValues = useMemo(() => customAttributes.map(attribute => ({\n    attribute,\n    value: ''\n  })), [customAttributes]);\n  return useMemo(() => {\n    var _schemas$dataElement$;\n    return {\n      name: '',\n      shortName: '',\n      code: '',\n      description: '',\n      url: '',\n      fieldMask: '',\n      domainType: 'AGGREGATE',\n      formName: '',\n      valueType: (_schemas$dataElement$ = schemas.dataElement.properties.valueType.constants) === null || _schemas$dataElement$ === void 0 ? void 0 : _schemas$dataElement$[0],\n      aggregationType: 'NONE',\n      style: {\n        icon: '',\n        color: ''\n      },\n      categoryCombo: DEFAULT_CATEGORY_COMBO,\n      optionSet: {\n        id: ''\n      },\n      commentOptionSet: {\n        id: ''\n      },\n      legendSets: [],\n      aggregationLevels: [],\n      attributeValues,\n      zeroIsSignificant: false\n    };\n  }, [attributeValues, schemas.dataElement.properties.valueType.constants]);\n}\nconst ADD_NEW_DATA_ELEMENT_MUTATION = {\n  resource: 'dataElements',\n  type: 'create',\n  data: de => de\n};\nfunction formatFormValues(_ref) {\n  var _values$style, _values$style2;\n  let {\n    values\n  } = _ref;\n  return {\n    aggregationLevels: values.aggregationLevels,\n    aggregationType: values.aggregationType,\n    attributeValues: values.attributeValues.filter(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return !!value;\n    }),\n    categoryCombo: values.categoryCombo.id ? values.categoryCombo : undefined,\n    code: values.code,\n    commentOptionSet: values.commentOptionSet.id ? values.commentOptionSet : undefined,\n    description: values.description,\n    domainType: values.domainType,\n    fieldMask: values.fieldMask,\n    formName: values.formName,\n    legendSets: values.legendSets,\n    name: values.name,\n    optionSet: values.optionSet.id ? values.optionSet : undefined,\n    shortName: values.shortName,\n    style: {\n      color: (_values$style = values.style) === null || _values$style === void 0 ? void 0 : _values$style.color,\n      icon: (_values$style2 = values.style) === null || _values$style2 === void 0 ? void 0 : _values$style2.icon\n    },\n    url: values.url,\n    valueType: values.valueType,\n    zeroIsSignificant: values.zeroIsSignificant\n  };\n}\nexport const Component = () => {\n  const dataEngine = useDataEngine();\n  const navigate = useNavigateWithSearchState();\n  const customAttributesQuery = useCustomAttributesQuery();\n  const initialValues = useInitialValues(customAttributesQuery.data);\n  async function onSubmit(values) {\n    const payload = formatFormValues({\n      values\n    });\n    try {\n      // We want the promise so we know when submitting is done. The promise\n      // returned by the mutation function of useDataMutation will never\n      // resolve\n      await dataEngine.mutate(ADD_NEW_DATA_ELEMENT_MUTATION, {\n        variables: payload\n      });\n    } catch (e) {\n      return {\n        [FORM_ERROR]: e.toString()\n      };\n    }\n    navigate(listPath);\n  }\n  return /*#__PURE__*/React.createElement(Loader, {\n    queryResponse: customAttributesQuery,\n    label: i18n.t('Custom attributes')\n  }, /*#__PURE__*/React.createElement(Form, {\n    validateOnBlur: true,\n    onSubmit: onSubmit,\n    validate: values => {\n      return validate(dataElementSchema, values);\n    },\n    initialValues: initialValues\n  }, _ref3 => {\n    let {\n      handleSubmit,\n      submitting,\n      submitError\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(FormContents, {\n      submitError: submitError,\n      submitting: submitting,\n      onCancelClick: () => navigate(listPath)\n    }));\n  }));\n};\nfunction FormContents(_ref4) {\n  let {\n    submitError,\n    onCancelClick,\n    submitting\n  } = _ref4;\n  const formErrorRef = useRef(null);\n  useEffect(() => {\n    if (submitError) {\n      var _formErrorRef$current;\n      (_formErrorRef$current = formErrorRef.current) === null || _formErrorRef$current === void 0 ? void 0 : _formErrorRef$current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [submitError]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form\n  }, /*#__PURE__*/React.createElement(DataElementFormFields, null), submitError && /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: formErrorRef\n  }, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong when submitting the form')\n  }, submitError))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormActions, {\n    cancelLabel: i18n.t('Exit without saving'),\n    submitLabel: i18n.t('Create data element'),\n    submitting: submitting,\n    onCancelClick: onCancelClick\n  }))));\n}","import { fireEvent, render } from '@testing-library/react';\nimport React from 'react';\nimport { RouterProvider, createMemoryRouter } from 'react-router-dom';\nimport dataElementSchemaMock from '../../__mocks__/schema/dataElementsSchema.json';\nimport { useSchemaStore } from '../../lib/schemas/schemaStore';\nimport { ComponentWithProvider } from '../../testUtils/TestComponentWithRouter';\nimport { generateDefaultAddFormTests } from '../defaultFormTests';\nimport attributes from './__mocks__/attributes.json';\nimport categoryCombosPage1 from './__mocks__/categoryCombosPage1.json';\nimport { Component as New } from './New';\njest.mock('../../lib/routeUtils/useSectionHandle', () => ({\n  useSchemaSectionHandleOrThrow: jest.fn(() => ({\n    name: 'dataElement',\n    namePlural: 'dataElements',\n    parentSectionKey: 'dataElement',\n    title: 'Data element',\n    titlePlural: 'Data elements'\n  }))\n}));\n\n// @TODO: For some reason string interpolation somewhere within the Transfer\n//        component does not get transpiled correctly for the cjs build when\n//        building the UI library. We'll have to address that at some point.\n//        See: https://dhis2.atlassian.net/browse/LIBS-537\njest.mock('@dhis2/ui', () => {\n  const ui = jest.requireActual('@dhis2/ui');\n  return {\n    __esModule: true,\n    ...ui,\n    Transfer: () => /*#__PURE__*/React.createElement(\"div\", null)\n  };\n});\nasync function changeSingleSelect(result, selectLabelText, text) {\n  var _selectLabel$parentNo;\n  const selectLabel = await result.findByText(selectLabelText);\n  const field = (_selectLabel$parentNo = selectLabel.parentNode) === null || _selectLabel$parentNo === void 0 ? void 0 : _selectLabel$parentNo.parentNode;\n  expect(field).toBeTruthy();\n  const trigger = field.querySelector('[data-test=\"dhis2-uicore-select-input\"].root');\n  expect(trigger).toBeTruthy();\n  fireEvent.click(trigger);\n  await result.findByTestId('dhis2-uicore-layer');\n  const optionElement = await result.findByText(text, {\n    selector: '[data-value]'\n  });\n  fireEvent.click(optionElement);\n}\ngenerateDefaultAddFormTests({\n  componentName: 'Data element group set'\n});\ndescribe('Data Elements / New', () => {\n  const consoleWarn = console.warn;\n  jest.spyOn(console, 'warn').mockImplementation(value => {\n    if (!value.match(/The query should be static/)) {\n      consoleWarn(value);\n    }\n  });\n  useSchemaStore.getState().setSchemas({\n    dataElement: dataElementSchemaMock\n  });\n  const customData = {\n    attributes: attributes,\n    categoryCombos: categoryCombosPage1\n  };\n  it('should return to the list view when cancelling', async () => {\n    const router = createMemoryRouter([{\n      path: '/dataElements/new',\n      element: /*#__PURE__*/React.createElement(New, null)\n    }, {\n      path: '/dataElements',\n      element: /*#__PURE__*/React.createElement(\"div\", null, \"List view\")\n    }], {\n      initialEntries: ['/dataElements/new']\n    });\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    const cancelButton = await result.findByText('Exit without saving', {\n      selector: 'button'\n    });\n    expect(result.queryByText('List view')).toBeNull();\n    fireEvent.click(cancelButton);\n    const listView = await result.findByText('List view');\n    expect(listView).toBeTruthy();\n  });\n  it('should not submit when required values are missing', async () => {\n    const router = createMemoryRouter([{\n      path: '/',\n      element: /*#__PURE__*/React.createElement(New, null)\n    }]);\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    const submitButton = await result.findByText('Create data element', {\n      selector: 'button'\n    });\n    fireEvent.click(submitButton);\n    const nameRequiredError = await result.findByText('Required', {\n      selector: '[data-test=\"formfields-name-validation\"]'\n    });\n    expect(nameRequiredError).toBeTruthy();\n    const shortNameRequiredError = await result.findByText('Required', {\n      selector: '[data-test=\"formfields-shortname-validation\"]'\n    });\n    expect(shortNameRequiredError).toBeTruthy();\n    expect(result.container.querySelectorAll('.error[data-test$=\"-validation\"]')).toHaveLength(2);\n  });\n  it('should submit the data and return to the list view on success', async () => {\n    const dataElementCustomData = () => Promise.resolve({\n      pager: {\n        total: 0\n      }\n    });\n    const router = createMemoryRouter([{\n      path: '/dataElements/new',\n      element: /*#__PURE__*/React.createElement(New, null)\n    }, {\n      path: '/dataElements',\n      element: /*#__PURE__*/React.createElement(\"div\", null, \"List view\")\n    }], {\n      initialIndex: 0,\n      initialEntries: ['/dataElements/new']\n    });\n    const result = render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dhis2-portal-root\"\n    }), /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: {\n        ...customData,\n        dataElements: dataElementCustomData\n      }\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    }))));\n    const submitButton = await result.findByText('Create data element', {\n      selector: 'button'\n    });\n    expect(submitButton).toBeTruthy();\n    const nameInput = result.getByRole('textbox', {\n      name: 'Name (required) *'\n    });\n    fireEvent.change(nameInput, {\n      target: {\n        value: 'Data element name'\n      }\n    });\n    fireEvent.blur(nameInput);\n    const shortNameInput = result.getByRole('textbox', {\n      name: 'Short name (required) *'\n    });\n    fireEvent.change(shortNameInput, {\n      target: {\n        value: 'Data element short name'\n      }\n    });\n    fireEvent.blur(shortNameInput);\n    await changeSingleSelect(result, 'Category combination (required)', 'None');\n    fireEvent.click(submitButton);\n    const listView = await result.findByText('List view');\n    expect(listView).toBeTruthy();\n  });\n  it('contain all needed field', () => {});\n  it('should show an error if name field is too long', () => {});\n  it('should show an error if short name field is too long', () => {});\n  it('should show an error if code field is too long', () => {});\n  it('should show an error if description field is too long', () => {});\n  it('should show an error if name field is a duplicate', () => {});\n  it('should show an error if short name field is a duplicate', () => {});\n  it('should show an error if code field is a duplicate', () => {});\n});","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, StandardFormField, CustomAttributesSection } from '../../../components';\nimport { CodeField, DescriptionField, NameField, ShortNameField } from '../../../components/form';\nimport { SCHEMA_SECTIONS } from '../../../lib';\nimport { AggregationLevelsField, AggregationTypeField, CategoryComboField, ColorAndIconField, DomainField, FieldMaskField, FormNameField, LegendSetField, OptionSetCommentField, OptionSetField, UrlField, ValueTypeField, ZeroIsSignificantField } from '../fields';\nexport function DataElementFormFields() {\n  const section = SCHEMA_SECTIONS.dataElement;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the information for this data element')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(NameField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ShortNameField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(FormNameField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CodeField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DescriptionField, {\n    helpText: i18n.t('Explain the purpose of this data element.'),\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(UrlField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ColorAndIconField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(FieldMaskField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ZeroIsSignificantField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(DomainField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ValueTypeField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(AggregationTypeField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Disaggregation and Option sets')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up disaggregation and predefined options.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CategoryComboField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(OptionSetField, null)), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(OptionSetCommentField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Legend set')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Visualize values for this data element in Analytics app. Multiple legendSet can be applied.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(LegendSetField, null))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Aggregation levels')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('By default, the aggregation will start at the lowest assigned organisation unit. If you for example select \"Chiefdom\", it means that \"Chiefdom\", \"District\" and \"National\" aggregates use \"Chiefdom\" (the highest aggregation level available) as the data source, and PHU data will not be included. PHU will still be available for the PHU level, but not included in the aggregations to the levels above.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(AggregationLevelsField, null))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n}","import { z } from 'zod';\nexport const dataElementSchema = z.object({\n  name: z.string().trim(),\n  shortName: z.string().trim(),\n  code: z.string().trim(),\n  description: z.string().trim(),\n  formName: z.string().trim(),\n  url: z.string().trim(),\n  fieldMask: z.string().trim(),\n  style: z.object({\n    color: z.string().optional(),\n    icon: z.string().optional()\n  }),\n  domainType: z.union([z.literal('AGGREGATE'), z.literal('TRACKER')]),\n  valueType: z.string(),\n  aggregationType: z.string(),\n  optionSet: z.object({\n    id: z.string()\n  }),\n  commentOptionSet: z.object({\n    id: z.string()\n  }),\n  legendSets: z.array(z.object({\n    id: z.string()\n  })),\n  aggregationLevels: z.array(z.number()),\n  attributeValues: z.array(z.object({\n    value: z.string().optional(),\n    attribute: z.object({\n      id: z.string()\n    })\n  }))\n}).partial();","export const generateDefaultAddFormTests = _ref => {\n  let {\n    componentName\n  } = _ref;\n  xdescribe(`${componentName} default add form tests`, () => {\n    it('should should return to the list view when cancelling', () => {});\n    it('should show a loader while the form is being submitted ', () => {});\n  });\n};\nexport const generateDefaultEditFormTests = _ref2 => {\n  let {\n    componentName\n  } = _ref2;\n  xdescribe(`${componentName} default add form tests`, () => {\n    it('should should return to the list view when cancelling', () => {});\n    it('should show a loader while the form is being submitted ', () => {});\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"New_form__hR0MF\"};"],"names":["listPath","getSectionPath","SCHEMA_SECTIONS","dataElement","ADD_NEW_DATA_ELEMENT_MUTATION","resource","type","data","de","Component","dataEngine","useDataEngine","navigate","useNavigateWithSearchState","customAttributesQuery","useCustomAttributesQuery","initialValues","customAttributes","schemas","useSchemas","attributeValues","useMemo","map","attribute","value","_schemas$dataElement$","name","shortName","code","description","url","fieldMask","domainType","formName","valueType","properties","constants","aggregationType","style","icon","color","categoryCombo","DEFAULT_CATEGORY_COMBO","optionSet","id","commentOptionSet","legendSets","aggregationLevels","zeroIsSignificant","useInitialValues","React","Loader","queryResponse","label","i18n","t","Form","validateOnBlur","onSubmit","async","values","payload","_ref","_values$style","_values$style2","filter","_ref2","undefined","formatFormValues","mutate","variables","e","FORM_ERROR","toString","validate","dataElementSchema","_ref3","handleSubmit","submitting","submitError","FormContents","onCancelClick","_ref4","formErrorRef","useRef","useEffect","_formErrorRef$current","current","scrollIntoView","behavior","className","classes","form","DataElementFormFields","StandardFormSection","ref","NoticeBox","error","title","StandardFormActions","cancelLabel","submitLabel","jest","mock","useSchemaSectionHandleOrThrow","fn","namePlural","parentSectionKey","titlePlural","__esModule","requireActual","Transfer","generateDefaultAddFormTests","componentName","describe","consoleWarn","console","warn","spyOn","mockImplementation","match","useSchemaStore","getState","setSchemas","dataElementSchemaMock","customData","attributes","categoryCombos","categoryCombosPage1","it","router","createMemoryRouter","path","element","New","initialEntries","result","render","ComponentWithProvider","dataForCustomProvider","RouterProvider","cancelButton","findByText","selector","expect","queryByText","toBeNull","fireEvent","click","listView","toBeTruthy","submitButton","nameRequiredError","shortNameRequiredError","container","querySelectorAll","toHaveLength","initialIndex","dataElements","dataElementCustomData","Promise","resolve","pager","total","nameInput","getByRole","change","target","blur","shortNameInput","selectLabelText","text","_selectLabel$parentNo","field","parentNode","trigger","querySelector","findByTestId","optionElement","changeSingleSelect","section","StandardFormSectionTitle","StandardFormSectionDescription","StandardFormField","NameField","schemaSection","ShortNameField","FormNameField","CodeField","DescriptionField","helpText","UrlField","ColorAndIconField","FieldMaskField","ZeroIsSignificantField","DomainField","ValueTypeField","AggregationTypeField","CategoryComboField","OptionSetField","OptionSetCommentField","LegendSetField","AggregationLevelsField","CustomAttributesSection","z","object","string","trim","optional","union","literal","array","number","partial","xdescribe","generateDefaultEditFormTests"],"sourceRoot":""}