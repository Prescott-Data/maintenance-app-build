{"version":3,"file":"static/js/1639.71aae82e.chunk.js","mappings":"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","sources":["D2App/pages/categoryCombos/Edit.js","D2App/pages/categoryCombos/form/CategoriesField.js","D2App/pages/categoryCombos/form/CategoryComboFormFields.js","D2App/pages/categoryCombos/form/categoryComboSchema.js","D2App/pages/categoryCombos/form/useIdenticalCategoryCombosQuery.js","webpack://@dhis2/app-shell/./src/D2App/pages/categoryCombos/form/CategoryCombo.module.css?4dbb"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { DefaultEditFormContents, FormBase } from '../../components';\nimport { DEFAULT_FIELD_FILTERS, SECTIONS_MAP, useOnSubmitEdit } from '../../lib';\nimport { useBoundResourceQueryFn } from '../../lib/query/useBoundQueryFn';\nimport { validate, CategoryComboFormFields } from './form';\nconst fieldFilters = [...DEFAULT_FIELD_FILTERS, 'name', 'code', 'categories[id,displayName,categoryOptions~size~rename(categoryOptionsSize)],', 'skipTotal', 'dataDimensionType'];\nconst section = SECTIONS_MAP.categoryCombo;\nexport const Component = () => {\n  const queryFn = useBoundResourceQueryFn();\n  const modelId = useParams().id;\n  const query = {\n    resource: 'categoryCombos',\n    id: modelId,\n    params: {\n      fields: fieldFilters.concat()\n    }\n  };\n  const categoryCombo = useQuery({\n    queryKey: [query],\n    queryFn: queryFn\n  });\n  return /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitEdit({\n      section,\n      modelId\n    }),\n    initialValues: categoryCombo.data,\n    validate: validate,\n    includeAttributes: false\n  }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(CategoryComboFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Field, NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nimport { useField } from 'react-final-form';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { ModelTransfer } from '../../../components';\nimport css from './CategoryCombo.module.css';\nimport { useIdenticalCategoryCombosQuery } from './useIdenticalCategoryCombosQuery';\nconst query = {\n  resource: 'categories',\n  params: {\n    fields: ['id', 'displayName', 'categoryOptions~size~rename(categoryOptionsSize)'],\n    order: 'displayName:asc',\n    filter: ['name:ne:default']\n  }\n};\nconst fieldName = 'categories';\nconst numberFormat = new Intl.NumberFormat();\nexport function CategoriesField() {\n  var _useParams, _input$value, _meta$error;\n  const catComboId = (_useParams = useParams()) === null || _useParams === void 0 ? void 0 : _useParams.id;\n  const {\n    input,\n    meta\n  } = useField(fieldName, {\n    multiple: true,\n    validateFields: []\n  });\n  const generatedCocsCount = ((_input$value = input.value) === null || _input$value === void 0 ? void 0 : _input$value.reduce((acc, cat) => acc * cat.categoryOptionsSize, 1)) || 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.categoriesFieldWrapper\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-modeltransfer\",\n    error: meta.invalid,\n    validationText: meta.touched && ((_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString()) || '',\n    name: fieldName\n  }, /*#__PURE__*/React.createElement(ModelTransfer, {\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      input.onChange(selected);\n      input.onBlur();\n    },\n    leftHeader: i18n.t('Available categories'),\n    rightHeader: i18n.t('Selected categories'),\n    filterPlaceholder: i18n.t('Filter available categories'),\n    filterPlaceholderPicked: i18n.t('Filter selected categories'),\n    query: query,\n    maxSelections: 200\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.categoriesNoticesWrapper\n  }, !catComboId && generatedCocsCount > 1 && /*#__PURE__*/React.createElement(NoticeBox, {\n    warning: generatedCocsCount > 250\n  }, i18n.t('{{count}} category option combinations will be generated.', {\n    count: numberFormat.format(generatedCocsCount)\n  })), /*#__PURE__*/React.createElement(CategoriesFieldWarnings, {\n    catComboId: catComboId,\n    selectedCategories: input.value\n  })));\n}\nconst CategoriesFieldWarnings = _ref2 => {\n  var _identicalCatCombosRe;\n  let {\n    selectedCategories,\n    catComboId\n  } = _ref2;\n  const isMoreThanRecommended = selectedCategories.length > 4;\n  const identicalCatCombosResult = useIdenticalCategoryCombosQuery({\n    categoryComboId: catComboId,\n    selectedCategories,\n    enabled: !isMoreThanRecommended\n  });\n  const isIdenticalCatCombos = identicalCatCombosResult.isSuccess && ((_identicalCatCombosRe = identicalCatCombosResult.data) === null || _identicalCatCombosRe === void 0 ? void 0 : _identicalCatCombosRe.pager.total) > 0;\n  if (!isMoreThanRecommended && !isIdenticalCatCombos) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isIdenticalCatCombos && /*#__PURE__*/React.createElement(IdenticalCategoryComboWarning, {\n    categoryCombos: identicalCatCombosResult.data.categoryCombos\n  }), isMoreThanRecommended && /*#__PURE__*/React.createElement(NoticeBox, {\n    warning: true,\n    title: i18n.t('More than 4 Categories')\n  }, i18n.t('A Category combination with more than 4 categories is not recommended.')));\n};\nconst IdenticalCategoryComboWarning = _ref3 => {\n  let {\n    categoryCombos\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(NoticeBox, {\n    warning: true,\n    title: i18n.t('Identical Category Combination')\n  }, i18n.t(`One or more Category combinations with the same categories already exist in the system. \n        It is strongly discouraged to have more than one Category combination with the same categories.`), /*#__PURE__*/React.createElement(\"br\", null), i18n.t('The following Category combinations have identical categories:'), /*#__PURE__*/React.createElement(\"ul\", {\n    className: css.identicalCategoriesList\n  }, categoryCombos.map(catCombo => /*#__PURE__*/React.createElement(\"li\", {\n    key: catCombo.id\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    target: \"_blank\",\n    to: `../${catCombo.id}`\n  }, catCombo.displayName)))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { CheckboxFieldFF, RadioFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport { useParams } from 'react-router-dom';\nimport { StandardFormField, StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, HorizontalFieldGroup, NameField, CodeField } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nimport { CategoriesField } from './CategoriesField';\nconst section = SECTIONS_MAP.categoryCombo;\nexport const CategoryComboFormFields = () => {\n  const isNewForm = useParams().id === undefined;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this category.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(NameField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CodeField, {\n    schemaSection: section\n  }))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Data configuration')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose how this category combo will be used to capture and analyze data.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(HorizontalFieldGroup, {\n    label: 'Data dimension type (required)'\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Disaggregation'),\n    type: \"radio\",\n    value: 'DISAGGREGATION',\n    disabled: !isNewForm\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Attribute'),\n    type: \"radio\",\n    value: 'ATTRIBUTE',\n    disabled: !isNewForm\n  }))), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    name: \"skipTotal\",\n    type: \"checkbox\",\n    component: CheckboxFieldFF,\n    label: i18n.t('Skip category total in reports')\n  }))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"categories\"\n  }, i18n.t('Categories'))), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose the categories to include in this category combo.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CategoriesField, null))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { z } from 'zod';\nimport { getDefaults, modelFormSchemas } from '../../../lib';\nimport { createFormValidate } from '../../../lib/form/validate';\nimport { CategoryCombo } from './../../../types/generated/models';\nconst {\n  identifiable,\n  withAttributeValues,\n  modelReference\n} = modelFormSchemas;\nconst GENERATED_COC_LIMIT = 50000;\nexport const categoryComboSchema = identifiable.merge(withAttributeValues).extend({\n  code: z.string().trim().optional(),\n  dataDimensionType: z.nativeEnum(CategoryCombo.dataDimensionType).default(CategoryCombo.dataDimensionType.DISAGGREGATION),\n  skipTotal: z.boolean().default(false),\n  categories: z.array(modelReference.extend({\n    displayName: z.string(),\n    categoryOptionsSize: z.number()\n  })).min(1, i18n.t('At least one category is required')).refine(categories => {\n    const generatedCocsCount = categories.reduce((acc, category) => acc * category.categoryOptionsSize, 1);\n    return generatedCocsCount < GENERATED_COC_LIMIT;\n  }, {\n    message: i18n.t('The number of generated category option combinations exceeds the limit of {{limit}}', {\n      limit: GENERATED_COC_LIMIT\n    })\n  }).default([])\n});\nexport const initialValues = getDefaults(categoryComboSchema);\nexport const validate = createFormValidate(categoryComboSchema);","import { useQuery } from 'react-query';\nimport { useBoundResourceQueryFn } from '../../../lib/query/useBoundQueryFn';\nexport const useIdenticalCategoryCombosQuery = _ref => {\n  let {\n    categoryComboId,\n    selectedCategories,\n    ...queryOptions\n  } = _ref;\n  const queryFn = useBoundResourceQueryFn();\n  const notSameCatComboFilter = `id:ne:${categoryComboId}`;\n  const idFilters = selectedCategories.map(category => `categories.id:eq:${category.id}`);\n  const lengthFilter = `categories:eq:${selectedCategories.length}`;\n  const filters = [lengthFilter, ...idFilters];\n  if (categoryComboId) {\n    filters.push(notSameCatComboFilter);\n  }\n  const useIdenticalCategoryCombosQuery = {\n    resource: 'categoryCombos',\n    params: {\n      fields: ['id', 'displayName'],\n      filter: filters\n    }\n  };\n  return useQuery({\n    staleTime: 60 * 1000,\n    ...queryOptions,\n    queryKey: [useIdenticalCategoryCombosQuery],\n    queryFn: queryFn\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"categoriesFieldWrapper\":\"CategoryCombo_categoriesFieldWrapper__00djY\",\"categoriesNoticesWrapper\":\"CategoryCombo_categoriesNoticesWrapper__R4Myf\",\"identicalCategoriesList\":\"CategoryCombo_identicalCategoriesList__chLzG\"};"],"names":["fieldFilters","DEFAULT_FIELD_FILTERS","section","SECTIONS_MAP","categoryCombo","Component","queryFn","useBoundResourceQueryFn","modelId","useParams","id","query","resource","params","fields","concat","useQuery","queryKey","React","FormBase","onSubmit","useOnSubmitEdit","initialValues","data","validate","includeAttributes","DefaultEditFormContents","CategoryComboFormFields","order","filter","fieldName","numberFormat","Intl","NumberFormat","CategoriesField","_useParams","_input$value","_meta$error","catComboId","input","meta","useField","multiple","validateFields","generatedCocsCount","value","reduce","acc","cat","categoryOptionsSize","className","css","categoriesFieldWrapper","Field","dataTest","error","invalid","validationText","touched","toString","name","ModelTransfer","selected","onChange","_ref","onBlur","leftHeader","i18n","t","rightHeader","filterPlaceholder","filterPlaceholderPicked","maxSelections","categoriesNoticesWrapper","NoticeBox","warning","count","format","CategoriesFieldWarnings","selectedCategories","_ref2","_identicalCatCombosRe","isMoreThanRecommended","length","identicalCatCombosResult","useIdenticalCategoryCombosQuery","categoryComboId","enabled","isIdenticalCatCombos","isSuccess","pager","total","IdenticalCategoryComboWarning","categoryCombos","title","_ref3","identicalCategoriesList","map","catCombo","key","NavLink","target","to","displayName","isNewForm","undefined","StandardFormSection","StandardFormSectionTitle","StandardFormSectionDescription","StandardFormField","NameField","schemaSection","CodeField","HorizontalFieldGroup","label","component","RadioFieldFF","type","disabled","CheckboxFieldFF","htmlFor","identifiable","withAttributeValues","modelReference","modelFormSchemas","categoryComboSchema","merge","extend","code","z","string","trim","optional","dataDimensionType","nativeEnum","CategoryCombo","default","DISAGGREGATION","skipTotal","boolean","categories","array","number","min","refine","category","message","limit","getDefaults","createFormValidate","queryOptions","notSameCatComboFilter","idFilters","filters","push","staleTime"],"sourceRoot":""}