{"version":3,"file":"static/js/7675.295f1fe7.chunk.js","mappings":"gSAMA,MAAM,aACJA,EAAY,oBACZC,EAAmB,oBACnBC,GACEC,EAAAA,GACSC,EAA4BJ,EAAaK,MAAMH,GAAqBI,OAAO,CACtFC,UAAWC,EAAAA,EAAEC,SAASC,OACtBC,KAAMH,EAAAA,EAAEC,SAASC,OAAOE,WACxBC,YAAaL,EAAAA,EAAEC,SAASC,OAAOE,WAC/BE,kBAAmBN,EAAAA,EAAEO,WAAWC,EAAAA,GAAoBF,mBAAmBG,QAAQD,EAAAA,GAAoBF,kBAAkBI,gBACrHC,gBAAiBlB,EAAoBmB,IAAI,EAAG,4CAA4CH,QAAQ,MAErFI,GAAgBC,EAAAA,EAAAA,IAAYlB,GAC5BmB,GAAWC,EAAAA,EAAAA,IAAmBpB,E","sources":["D2App/pages/categoryOptionGroups/form/categoryOptionGroupSchema.js"],"sourcesContent":["import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\nimport { CategoryOptionGroup } from '../../../types/generated';\n\n/*  Note that this describes what we send to the server, \n    and not what is stored in the form. */\nconst {\n  identifiable,\n  referenceCollection,\n  withAttributeValues\n} = modelFormSchemas;\nexport const categoryOptionGroupSchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  dataDimensionType: z.nativeEnum(CategoryOptionGroup.dataDimensionType).default(CategoryOptionGroup.dataDimensionType.DISAGGREGATION),\n  categoryOptions: referenceCollection.min(1, 'At least one category option is required').default([])\n});\nexport const initialValues = getDefaults(categoryOptionGroupSchema);\nexport const validate = createFormValidate(categoryOptionGroupSchema);"],"names":["identifiable","referenceCollection","withAttributeValues","modelFormSchemas","categoryOptionGroupSchema","merge","extend","shortName","z","string","trim","code","optional","description","dataDimensionType","nativeEnum","CategoryOptionGroup","default","DISAGGREGATION","categoryOptions","min","initialValues","getDefaults","validate","createFormValidate"],"sourceRoot":""}