{"version":3,"file":"static/js/618.55fb45e1.chunk.js","mappings":"iLAAO,MAAMA,EAA8BC,IACzC,IAAI,cACFC,GACED,EACJE,UAAU,GAAGD,4BAAwC,KACnDE,GAAG,yDAAyD,SAC5DA,GAAG,2DAA2D,QAAS,GACvE,EAESC,EAA+BC,IAC1C,IAAI,cACFJ,GACEI,EACJH,UAAU,GAAGD,4BAAwC,KACnDE,GAAG,yDAAyD,SAC5DA,GAAG,2DAA2D,QAAS,GACvE,C,gCCfJJ,E,SAAAA,GAA4B,CAC1BE,cAAe,sBAEjBK,SAAS,4CAA4C,KACnDH,GAAG,4BAA4B,SAC/BA,GAAG,sDAAsD,SACzDA,GAAG,iEAAiE,SACpEA,GAAG,kDAAkD,SACrDA,GAAG,mDAAmD,SACtDA,GAAG,kDAAkD,SACrDA,GAAG,qDAAqD,SACxDA,GAAG,yDAAyD,SAC5DA,GAAG,4DAA4D,SAC/DA,GAAG,qDAAqD,SACxDA,GAAG,0DAA0D,SAC7DA,GAAG,iDAAiD,SACpDA,GAAG,qDAAqD,SACxDA,GAAG,2DAA2D,SAC9DA,GAAG,qDAAqD,SACxDA,GAAG,kEAAkE,SACrEA,GAAG,kEAAkE,SACrEA,GAAG,4DAA4D,SAC/DA,GAAG,sEAAsE,SACzEA,GAAG,mDAAmD,SACtDA,GAAG,iDAAiD,SACpDA,GAAG,kDAAkD,SACrDA,GAAG,iDAAiD,SACpDA,GAAG,kDAAkD,SACrDA,GAAG,8CAA8C,QAAS,G","sources":["D2App/pages/defaultFormTests.js","D2App/pages/organisationUnits/New.spec.js"],"sourcesContent":["export const generateDefaultAddFormTests = _ref => {\n  let {\n    componentName\n  } = _ref;\n  xdescribe(`${componentName} default add form tests`, () => {\n    it('should should return to the list view when cancelling', () => {});\n    it('should show a loader while the form is being submitted ', () => {});\n  });\n};\nexport const generateDefaultEditFormTests = _ref2 => {\n  let {\n    componentName\n  } = _ref2;\n  xdescribe(`${componentName} default add form tests`, () => {\n    it('should should return to the list view when cancelling', () => {});\n    it('should show a loader while the form is being submitted ', () => {});\n  });\n};","import { generateDefaultAddFormTests } from '../defaultFormTests';\ngenerateDefaultAddFormTests({\n  componentName: 'Organisation unit'\n});\ndescribe('Indicator type add form additional tests', () => {\n  it('contain all needed field', () => {});\n  it('should not submit when required values are missing', () => {});\n  it('should submit the data and return to the list view on success', () => {});\n  it('should show an error if name field is too long', () => {});\n  it('should show an error if short field is too long', () => {});\n  it('should show an error if code field is too long', () => {});\n  it('should show an error if comment field is too long', () => {});\n  it('should show an error if description field is too long', () => {});\n  it('should show an error if contact person field is too long', () => {});\n  it('should show an error if address field is too long', () => {});\n  it('should show an error if phone number field is too long', () => {});\n  it('should show an error if url field is too long', () => {});\n  it('should show an error if name field is a duplicate', () => {});\n  it('should show an error if short name field is a duplicate', () => {});\n  it('should show an error if code field is a duplicate', () => {});\n  it('should show an error if opening date is not in required format', () => {});\n  it('should show an error if closing date is not in required format', () => {});\n  it('should show an error if image was not uploaded correctly', () => {});\n  it('should allow to create an org unit as a child of the root org unit', () => {});\n  it('should show an error if entering an invalid URL', () => {});\n  it('should show an error if longitude is above 90', () => {});\n  it('should show an error if longitude is below -90', () => {});\n  it('should show an error if latitude is above 180', () => {});\n  it('should show an error if latitude is below -180', () => {});\n  it('should show an error if email is not valid', () => {});\n});"],"names":["generateDefaultAddFormTests","_ref","componentName","xdescribe","it","generateDefaultEditFormTests","_ref2","describe"],"sourceRoot":""}