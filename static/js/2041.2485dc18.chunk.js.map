{"version":3,"file":"static/js/2041.2485dc18.chunk.js","mappings":"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","sources":["D2App/pages/dataSetsWip/New.js","D2App/pages/dataSetsWip/form/DataSetFormContents.js","D2App/pages/dataSetsWip/form/dataSetFormSchema.js","D2App/pages/dataSetsWip/form/formDescriptor.js"],"sourcesContent":["import React from 'react';\nimport { FormBase, SectionedFormLayout, DefaultSectionedFormFooter, DefaultSectionedFormSidebar, SectionedFormErrorNotice } from '../../components';\nimport { SectionedFormProvider, SECTIONS_MAP, useOnSubmitNew } from '../../lib';\nimport { DataSetFormContents } from './form/DataSetFormContents';\nimport { initialValues, validate } from './form/dataSetFormSchema';\nimport { DataSetFormDescriptor } from './form/formDescriptor';\nconst section = SECTIONS_MAP.dataSet;\nexport const Component = () => {\n  return /*#__PURE__*/React.createElement(SectionedFormProvider, {\n    formDescriptor: DataSetFormDescriptor\n  }, /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitNew({\n      section\n    }),\n    initialValues: initialValues,\n    validate: validate,\n    subscription: {}\n  }, _ref => {\n    let {\n      handleSubmit\n    } = _ref;\n    return /*#__PURE__*/React.createElement(SectionedFormLayout, {\n      sidebar: /*#__PURE__*/React.createElement(DefaultSectionedFormSidebar, null),\n      footer: /*#__PURE__*/React.createElement(DefaultSectionedFormFooter, null)\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(DataSetFormContents, null)), /*#__PURE__*/React.createElement(SectionedFormErrorNotice, null));\n  }));\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { DefaultIdentifiableFields, DescriptionField, ModelTransferField, StandardFormField, StandardFormSectionDescription, StandardFormSectionTitle } from '../../../components';\nimport { SectionedFormSection, SectionedFormSections } from '../../../components/sectionedForm';\nimport { SECTIONS_MAP, useSectionedFormContext, useSelectedSection, useSyncSelectedSectionWithScroll } from '../../../lib';\nconst section = SECTIONS_MAP.dataSet;\nexport const DataSetFormContents = () => {\n  const descriptor = useSectionedFormContext();\n  useSyncSelectedSectionWithScroll();\n  const [selectedSection] = useSelectedSection();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SectionedFormSections, null, /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('setup').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this data set.')), /*#__PURE__*/React.createElement(DefaultIdentifiableFields, null), /*#__PURE__*/React.createElement(DescriptionField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('data').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Configure data elements')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose what data is collected for this data set.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ModelTransferField, {\n    name: 'dataElements',\n    query: {\n      resource: 'dataElements'\n    }\n  }))), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('periods').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Configure data entry periods')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose for what time periods data can be entered for this data set'))), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('validation').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Validation and limitations')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Configure how data can and must be entered for this data')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ModelTransferField, {\n    name: 'dataElements',\n    query: {\n      resource: 'dataElements'\n    }\n  }))), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('organisationUnits').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Organisation units')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Configure which organisation units can collect data for this data set.')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 300\n    }\n  })), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('form').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Data entry form')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 300\n    }\n  })), /*#__PURE__*/React.createElement(SectionedFormSection, {\n    name: descriptor.getSection('advanced').name\n  }, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Advanced options')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('These options are used for advanced data set configurations.')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 900\n    }\n  }))));\n};","import { z } from 'zod';\nimport { getDefaults, modelFormSchemas } from '../../../lib';\nimport { createFormValidate } from '../../../lib/form/validate';\nconst {\n  withAttributeValues,\n  identifiable,\n  style,\n  referenceCollection\n} = modelFormSchemas;\nexport const dataSetFormSchema = identifiable.merge(withAttributeValues).extend({\n  id: z.string().optional(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  style,\n  dataElements: referenceCollection.default([])\n  // categoryCombo: z.object({ id: z.string() }),\n});\nexport const initialValues = getDefaults(dataSetFormSchema);\nexport const validate = createFormValidate(dataSetFormSchema);","import i18n from '@dhis2/d2-i18n';\nexport const DataSetFormDescriptor = {\n  name: 'DataSet',\n  label: 'Data Set',\n  sections: [{\n    name: 'setup',\n    label: i18n.t('Setup'),\n    fields: [{\n      name: 'name',\n      label: i18n.t('Name')\n    }, {\n      name: 'shortName',\n      label: i18n.t('Short name')\n    }, {\n      name: 'code',\n      label: i18n.t('Code')\n    }, {\n      name: 'description',\n      label: i18n.t('Description')\n    }, {\n      name: 'style',\n      label: i18n.t('Color and icon')\n    }]\n  }, {\n    name: 'data',\n    label: i18n.t('Data'),\n    fields: [{\n      name: 'dataElements',\n      label: i18n.t('Data Elements')\n    }, {\n      name: 'categoryCombo',\n      label: 'Category Combination'\n    }, {\n      name: 'indicators',\n      label: i18n.t('Indicators')\n    }]\n  }, {\n    name: 'periods',\n    label: i18n.t('Periods'),\n    fields: [{\n      name: 'periodType',\n      label: i18n.t('Period type')\n    }]\n  }, {\n    name: 'validation',\n    label: i18n.t('Validation'),\n    fields: []\n  }, {\n    name: 'organisationUnits',\n    label: i18n.t('Organisation Units'),\n    fields: []\n  }, {\n    name: 'form',\n    label: i18n.t('Form'),\n    fields: []\n  }, {\n    name: 'advanced',\n    label: i18n.t('Advanced'),\n    fields: []\n  }]\n};"],"names":["section","SECTIONS_MAP","dataSet","Component","React","SectionedFormProvider","formDescriptor","DataSetFormDescriptor","FormBase","onSubmit","useOnSubmitNew","initialValues","validate","subscription","_ref","handleSubmit","SectionedFormLayout","sidebar","DefaultSectionedFormSidebar","footer","DefaultSectionedFormFooter","DataSetFormContents","SectionedFormErrorNotice","descriptor","useSectionedFormContext","useSyncSelectedSectionWithScroll","selectedSection","useSelectedSection","SectionedFormSections","SectionedFormSection","name","getSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","DefaultIdentifiableFields","DescriptionField","schemaSection","StandardFormField","ModelTransferField","query","resource","style","height","withAttributeValues","identifiable","referenceCollection","modelFormSchemas","dataSetFormSchema","merge","extend","id","z","string","optional","code","trim","description","dataElements","default","getDefaults","createFormValidate","label","sections","fields"],"sourceRoot":""}