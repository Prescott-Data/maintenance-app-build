{"version":3,"file":"static/js/6364.01552fdd.chunk.js","mappings":"6QAaO,SAASA,IACd,MAAMC,GAA0BC,EAAAA,EAAAA,IAAQ,+BAClC,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAAS,oBAAqB,CAChCC,UAAU,EACVC,OAAQC,GAAUA,EAAOC,KAAIC,GAASA,EAAMC,aAC5CC,MAAOJ,GAAUA,EAAOC,KAAIC,GAASG,SAASH,EAAO,MACrDI,eAAgB,KAEZC,GAAyBC,EAAAA,EAAAA,QAAO,CACpCC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAGtC,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAsB,CAC5DC,SAAU,+BACVC,UAAWA,IAAMP,EAAuBQ,QAAQN,UAChDO,SAAUA,IAAMC,OAAOC,KAAKzB,EAAyB,WACvCkB,EAAAA,cAAoB,MAAO,CACzCQ,UAAWC,EAAAA,QAAQC,8BACLV,EAAAA,cAAoBW,EAAAA,EAAO,CACzCC,KAAM,oBACNC,MAAOC,EAAAA,EAAKC,EAAE,wBACdC,SAAUF,EAAAA,EAAKC,EAAE,iDACjBE,eAAgBhC,EAAKiC,QAAUjC,EAAKkC,WAAQC,EAC5CD,MAAOlC,EAAKiC,WAAajC,EAAKkC,MAC9BjB,SAAU,gCACIF,EAAAA,cAAoBqB,EAAAA,GAA6B,CAC/DC,IAAK1B,EACL2B,QAAStC,EAAKiC,WAAajC,EAAKkC,MAChCK,WAAY,QACZC,YAAa,GACbC,SAAU1C,EAAM2C,MAChBC,SAAUC,IACR,IAAI,SACFH,GACEG,EACJ,OAAO7C,EAAM4C,SAASF,EAAS,EAEjCI,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACfC,aAAcA,IAAMpC,EAAuBQ,QAAQN,cAEvD,C,+BCzDA,WAAgB,6BAA+B,6D","sources":["D2App/pages/dataElements/fields/AggregationLevelsField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/AggregationLevelsField.module.css?2462"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { AggregationLevelMultiSelect, EditableFieldWrapper } from '../../../components';\nimport classes from './AggregationLevelsField.module.css';\n\n/**\n *\n * AggregationLevels\n *\n */\nexport function AggregationLevelsField() {\n  const newAggregationLevelLink = useHref('/organisationUnitLevel/new');\n  const {\n    input,\n    meta\n  } = useField('aggregationLevels', {\n    multiple: true,\n    format: levels => levels.map(level => level.toString()),\n    parse: levels => levels.map(level => parseInt(level, 10)),\n    validateFields: []\n  });\n  const aggregationLevelHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-aggregationlevels\",\n    onRefresh: () => aggregationLevelHandle.current.refetch(),\n    onAddNew: () => window.open(newAggregationLevelLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.aggregationLevelsMultiSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"aggregationLevels\",\n    label: i18n.t('Aggregation level(s)'),\n    helpText: i18n.t('Choose how this data element is disaggregated'),\n    validationText: meta.touched ? meta.error : undefined,\n    error: meta.touched && !!meta.error,\n    dataTest: \"formfields-aggregationlevels\"\n  }, /*#__PURE__*/React.createElement(AggregationLevelMultiSelect, {\n    ref: aggregationLevelHandle,\n    invalid: meta.touched && !!meta.error,\n    inputWidth: \"400px\",\n    placeholder: \"\",\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus,\n    onRetryClick: () => aggregationLevelHandle.current.refetch()\n  }))));\n}","// extracted by mini-css-extract-plugin\nexport default {\"aggregationLevelsMultiSelect\":\"AggregationLevelsField_aggregationLevelsMultiSelect__a24R1\"};"],"names":["AggregationLevelsField","newAggregationLevelLink","useHref","input","meta","useField","multiple","format","levels","map","level","toString","parse","parseInt","validateFields","aggregationLevelHandle","useRef","refetch","Error","React","EditableFieldWrapper","dataTest","onRefresh","current","onAddNew","window","open","className","classes","aggregationLevelsMultiSelect","Field","name","label","i18n","t","helpText","validationText","touched","error","undefined","AggregationLevelMultiSelect","ref","invalid","inputWidth","placeholder","selected","value","onChange","_ref","onBlur","onFocus","onRetryClick"],"sourceRoot":""}