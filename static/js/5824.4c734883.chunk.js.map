{"version":3,"file":"static/js/5824.4c734883.chunk.js","mappings":"yRAQA,MAAMA,EAAWC,IACf,IAAKA,EAAMC,GACT,OAAOC,EAAAA,EAAKC,EAAE,WAChB,EAYK,SAASC,IACd,IAAIC,EACJ,MAAMC,GAA4BC,EAAAA,EAAAA,OAC5B,OACJC,IACEC,EAAAA,EAAAA,OACE,OACJC,IACEC,EAAAA,EAAAA,IAAa,CACfC,aAAc,CACZF,QAAQ,KAGNG,EAA4C,YAAtBH,EAAOI,WAC7BC,EAAWF,EACXG,EAAWD,OAAWE,EAAYlB,EAClCmB,GAAuBC,EAAAA,EAAAA,IAAQ,wBAC/B,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAAS,gBAAiB,CAC5BC,eAAgB,GAChBP,WACAQ,OAAQC,GAAiBA,EAAcxB,GACvCyB,MAAOzB,IAAE,CACPA,SAGE0B,GAAsBC,EAAAA,EAAAA,QAAO,CACjCC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAStC,OANAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAC6D,QAA5DA,EAAwB1B,EAA0B2B,YAA4C,IAA1BD,GAAoCA,EAAsB/B,IAAMY,GACvIL,EAAO,mBAAoBF,EAA0B2B,KAAKhC,GAC5D,GACC,CAACO,EAAsE,QAA7DH,EAAyBC,EAA0B2B,YAA6C,IAA3B5B,OAAoC,EAASA,EAAuBJ,GAAIY,IACtIqB,EAAAA,cAAoBC,EAAAA,GAAsB,CAC5DC,SAAU,2BACVC,UAAWA,IAAMV,EAAoBW,QAAQT,UAC7CU,SAAUA,IAAMC,OAAOC,KAAKvB,EAAsB,WACpCgB,EAAAA,cAAoB,MAAO,CACzCQ,UAAWC,EAAAA,QAAQC,qBACLV,EAAAA,cAAoBW,EAAAA,EAAO,CACzC9C,UAAU,EACV+C,KAAM,mBACNC,MAAO7C,EAAAA,EAAKC,EAAE,4BAA6B,CACzC6C,WAAY9C,EAAAA,EAAKC,EAAE,0BAErB8C,SAAU/C,EAAAA,EAAKC,EAAE,iDACjB+C,MAAO7B,EAAK8B,WAAa9B,EAAK6B,MAC9BE,eAAgB/B,EAAK8B,QAAU9B,EAAK6B,WAAQjC,EAC5CmB,SAAU,4BACIF,EAAAA,cAAoBmB,EAAAA,GAAqB,CACvDtD,UAAU,EACVuD,YAAa,GACbvC,SAAUA,EACVwC,QAASlC,EAAK8B,WAAa9B,EAAK6B,MAChCM,IAAK7B,EACL8B,SAAUrC,EAAMpB,MAChB0D,SAAUC,IACR,IAAI,SACFF,GACEE,EACJvC,EAAMsC,SAASD,GACfrC,EAAMwC,QAAQ,EAEhBA,OAAQxC,EAAMwC,OACdC,QAASzC,EAAMyC,YAEnB,C,sHC1FA,MAAMC,EAAiB,CAAC,CACtBC,YAAa,SACb9D,GAAI,eACH,CACD8D,YAAa,cACb9D,GAAI,eACH,CACD8D,YAAa,iBACb9D,GAAI,eACH,CACD8D,YAAa,SACb9D,GAAI,eACH,CACD8D,YAAa,UACb9D,GAAI,eACH,CACD8D,YAAa,iBACb9D,GAAI,eACH,CACD8D,YAAa,sBACb9D,GAAI,eACH,CACD8D,YAAa,uBACb9D,GAAI,eACH,CACD8D,YAAa,oCACb9D,GAAI,eACH,CACD8D,YAAa,yBACb9D,GAAI,eACH,CACD8D,YAAa,kBACb9D,GAAI,eACH,CACD8D,YAAa,gBACb9D,GAAI,eACH,CACD8D,YAAa,kBACb9D,GAAI,eACH,CACD8D,YAAa,sBACb9D,GAAI,eACH,CACD8D,YAAa,0BACb9D,GAAI,eACH,CACD8D,YAAa,UACb9D,GAAI,eACH,CACD8D,YAAa,kBACb9D,GAAI,eACH,CACD8D,YAAa,WACb9D,GAAI,eACH,CACD8D,YAAa,kBACb9D,GAAI,eACH,CACD8D,YAAa,mBACb9D,GAAI,eACH,CACD8D,YAAa,KACb9D,GAAI,eACH,CACD8D,YAAa,sBACb9D,GAAI,gBAEA+D,EAAyB,WAE7B,IADA,IAAIC,EACKC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAEzB,MAAO,CAAEC,GAASH,GACZ,GACJpE,GACEuE,EACJ,GAAc,OAAVA,QAA4B,IAAVA,GAA6D,QAAxCP,EAAmBO,EAAMC,iBAA4C,IAArBR,GAA+BA,EAAiBhE,GAAI,CAC7I,MAAMwB,EAAgBqC,EAAeY,MAAKC,GAAM1E,IAAO0E,EAAG1E,KAC1D,OAAO2E,QAAQC,QAAQpD,EACzB,CACA,OAAOmD,QAAQC,QAAQ,CACrBf,iBACAgB,MAAO,CACLC,KAAM,EACNC,MAAO,GACPC,SAAU,GACVC,UAAW,IAGjB,EAIaC,EAAgB,CAC3BrB,eAAgBE,GAElBoB,SAAS,2BAA2B,KAClCC,GAAG,yDAAyDC,UAC1D,MAAM5B,EAAW6B,KAAKC,KAChBC,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBT,GACTjD,EAAAA,cAAoBmB,EAAAA,EAAqB,CACvDK,SAAUA,MAENmC,EAAcJ,EAAOK,YAAY,6BACvCC,EAAAA,GAAUC,MAAMH,GAChB,IAAK,IAAII,EAAI,EAAGA,EAAInC,EAAeM,SAAU6B,EAAG,CAC9C,MAAMxE,EAAgBqC,EAAemC,GAC/BC,QAAsBT,EAAOU,WAAW1E,EAAcsC,YAAa,CACvEqC,SAAU,kDAEZC,OAAOH,GAAeI,YACxB,CACA,MAAMC,QAAmBd,EAAOU,WAAW,OAAQ,CACjDC,SAAU,kDAEZC,OAAOE,GAAYC,mBAAmB,IAExCnB,GAAG,kDAAkDC,UACnD,MAAM5B,EAAW6B,KAAKC,KAChBL,EAAgB,CACpBrB,eAAgBE,GAEZyB,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBT,GACTjD,EAAAA,cAAoBmB,EAAAA,EAAqB,CACvDK,SAAUA,MAENmC,EAAcJ,EAAOK,YAAY,6BACvCC,EAAAA,GAAUC,MAAMH,GAChB,MAAMY,QAAkBhB,EAAOU,WAAW,OAAQ,CAChDC,SAAU,kDAENM,QAAsBjB,EAAOU,WAAW,WAAY,CACxDC,SAAU,kDAEZC,OAAOI,GAAWD,oBAClBH,OAAOK,GAAeF,0BAGhBG,EAAAA,EAAAA,KAAQ,KACZ,MAAMC,EAAanB,EAAOoB,eAAe,mCACzCR,OAAOO,GAAYE,aAAahD,EAAeM,OAAS,EAAE,GAC1D,IAEJiB,GAAG,sDAAsDC,UACvD,MAAM5B,EAAW6B,KAAKC,KAChBL,EAAgB,CACpBrB,eAAgBE,GAEZyB,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBT,GACTjD,EAAAA,cAAoBmB,EAAAA,EAAqB,CACvDtD,UAAU,EACV2D,SAAUA,MAENmC,EAAcJ,EAAOK,YAAY,6BACvCC,EAAAA,GAAUC,MAAMH,SAIVc,EAAAA,EAAAA,KAAQ,KACZ,MAAMC,EAAanB,EAAOoB,eAAe,mCACzCR,OAAOO,GAAYE,aAAahD,EAAeM,OAAS,EAAE,GAC1D,IAEJiB,GAAG,6CAA6CC,UAC9C,MAAM5B,EAAW6B,KAAKC,KAChBL,EAAgB,CACpBrB,eAAgBE,GAEZyB,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBT,GACTjD,EAAAA,cAAoBmB,EAAAA,EAAqB,CACvDI,SAAU,cACVC,SAAUA,MAENmC,EAAcJ,EAAOK,YAAY,6BACvCC,EAAAA,GAAUC,MAAMH,GAChB,MAAMa,QAAsBjB,EAAOU,WAAW,SAAU,CACtDC,SAAU,UAEZC,OAAOK,GAAeJ,YAAY,IAEpCjB,GAAG,kEAAkEC,UACnE,MAAM5B,EAAW6B,KAAKC,KAChBL,EAAgB,CACpBrB,eAAgBE,GAEZyB,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBT,GACTjD,EAAAA,cAAoBmB,EAAAA,EAAqB,CACvDK,SAAUA,MAENmC,EAAcJ,EAAOK,YAAY,6BACvCC,EAAAA,GAAUC,MAAMH,GAChB,MAAMa,QAAsBjB,EAAOU,WAAW,SAAU,CACtDC,SAAU,kDAEZL,EAAAA,GAAUC,MAAMU,GAChBL,OAAO3C,GAAUqD,sBAAsB,GACvCV,OAAO3C,GAAUsD,qBAAqB,CACpCvD,SAAU,eACV,GACF,I,eCzMJ8B,KAAK0B,KAAK,oBAAoB,KAKrB,IAJK1B,KAAK2B,cAAc,oBAM7BzG,QALc8E,KAAKC,IAAG,MACtBhF,OAAQ+E,KAAKC,aAOjBJ,SAAS,0BAA0B,KACjCC,GAAG,sBAAsBC,UACvB,MAAM6B,EAAa,IACdhC,GAECiC,EAAW7B,KAAKC,KAChB6B,GAASC,EAAAA,EAAAA,IAAmB,CAAC,CACjCC,KAAM,IACNC,QAAsBtF,EAAAA,cAAoBuF,EAAAA,GAAM,CAC9CL,SAAUA,EACVM,cAAe,CACbjG,cAAe,CACbxB,GAAI,OAGP0D,IACD,IAAI,aACFgE,GACEhE,EACJ,OAAoBzB,EAAAA,cAAoB,OAAQ,CAC9CkF,SAAUO,GACIzF,EAAAA,cAAoB9B,EAAAA,mBAAoB,MAAoB8B,EAAAA,cAAoB,SAAU,CACxG0F,KAAM,UACL,UAAU,OAGXnC,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBuB,GACTjF,EAAAA,cAAoB2F,EAAAA,GAAgB,CAClDR,OAAQA,MAEJS,QAAqBrC,EAAOU,WAAW,SAAU,CACrDC,SAAU,WAEZL,EAAAA,GAAUC,MAAM8B,GAChBzB,OAAOZ,EAAOK,YAAY,wCAAwCQ,aAClED,OAAOe,GAAUL,sBAAsB,EAAE,IAE3C1B,GAAG,yDAAyD,KAC1D,MAAM8B,EAAa,IACdhC,GAECiC,EAAW7B,KAAKC,KAChB6B,GAASC,EAAAA,EAAAA,IAAmB,CAAC,CACjCC,KAAM,IACNC,QAAsBtF,EAAAA,cAAoBuF,EAAAA,GAAM,CAC9CL,SAAUA,EACVM,cAAe,CACb5G,WAAY,YACZW,cAAe,CACbxB,GAAI,OAGP8H,IACD,IAAI,aACFJ,GACEI,EACJ,OAAoB7F,EAAAA,cAAoB,OAAQ,CAC9CkF,SAAUO,GACIzF,EAAAA,cAAoB9B,EAAAA,mBAAoB,MAAM,OAG5DqF,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBuB,GACTjF,EAAAA,cAAoB2F,EAAAA,GAAgB,CAClDR,OAAQA,MAEVhB,OAAOZ,EAAOuC,UAAUC,cAAc,cAAcC,WAAW,IAEjE7C,GAAG,wDAAwDC,UACzD,MAAM6B,EAAa,IACdhC,GAECiC,EAAW7B,KAAKC,KAChB6B,GAASC,EAAAA,EAAAA,IAAmB,CAAC,CACjCC,KAAM,IACNC,QAAsBtF,EAAAA,cAAoBuF,EAAAA,GAAM,CAC9CL,SAAUA,EACVM,cAAe,CACb5G,WAAY,UACZW,cAAe,CACbxB,GAAI,OAGPkI,IACD,IAAI,aACFR,GACEQ,EACJ,OAAoBjG,EAAAA,cAAoB,OAAQ,CAC9CkF,SAAUO,GACIzF,EAAAA,cAAoB9B,EAAAA,mBAAoB,MAAM,OAG5DqF,GAASC,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC7EC,sBAAuBuB,GACTjF,EAAAA,cAAoB2F,EAAAA,GAAgB,CAClDR,OAAQA,MAEVhB,OAAOZ,EAAOuC,UAAUC,cAAc,cAAc3B,YAAY,IAElEjB,GAAG,2FAA2FC,UAC5F,MAAM9E,EAAS+E,KAAKC,KAGT/E,EAAAA,GACR2H,oBAAmB,MACpB5H,aAEF,MAAM2G,EAAa,IACdhC,EACHrB,eAAgB,WAEd,IADA,IAAIuE,EAAeC,EACVpE,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAEzB,MAAO,CAAEC,GAASH,EAClB,OAAuC,QAAlCgE,EAAgB7D,EAAM+D,cAAsC,IAAlBF,GAA8E,QAAjDC,EAAuBD,EAAcG,cAA6C,IAAzBF,GAAmCA,EAAqBG,SAAS,qBAC7L7D,QAAQC,QAAQ,CACrBf,eAAgB,CAAC,CACf7D,GAAI,kBAIHkF,EAAcrB,kBAAkBO,EACzC,GAEI+C,EAAW7B,KAAKC,KAChB6B,GAASC,EAAAA,EAAAA,IAAmB,CAAC,CACjCC,KAAM,IACNC,QAAsBtF,EAAAA,cAAoBuF,EAAAA,GAAM,CAC9CL,SAAUA,EACVM,cAAe,CACb5G,WAAY,UACZW,cAAe,CACbxB,GAAI,OAGPyI,IACD,IAAI,aACFf,GACEe,EACJ,OAAoBxG,EAAAA,cAAoB,OAAQ,CAC9CkF,SAAUO,GACIzF,EAAAA,cAAoB9B,EAAAA,mBAAoB,MAAM,QAGlEsF,EAAAA,EAAAA,IAAqBxD,EAAAA,cAAoByD,EAAAA,EAAuB,CAC9DC,sBAAuBuB,GACTjF,EAAAA,cAAoB2F,EAAAA,GAAgB,CAClDR,OAAQA,YAEJV,EAAAA,EAAAA,KAAQ,KACZN,OAAO7F,GAAQuG,sBAAsB,GACrCV,OAAO7F,GAAQwG,qBAAqB,mBAAoB,cAAc,GACtE,GACF,G,yICxKG,MAAMrB,EAAwBhC,IACnC,IAAI,sBACFiC,EAAqB,SACrB+C,GACEhF,EACJ,OAAoBzB,EAAAA,cAAoB0G,EAAAA,GAAU,CAChDC,OAAQ,CACNC,QAAS,qCACTC,WAAY,IAEdC,QAAQ,EACRC,gBAAiBA,KAAe,EAChCC,oBAAoB,GACNhH,EAAAA,cAAoBiH,EAAAA,GAAoB,CACtDlH,KAAM2D,EACNwD,QAAS,CACPC,YAAY,IAEbV,GAAU,EA0Bf,IAxBgCZ,IAC9B,IAAI,KACFR,EAAI,WACJJ,EAAU,aACVmC,EAAY,SACZX,GACEZ,EACJ,MAAMwB,EAAS,CAAC,CACdhC,OACAC,QAAsBtF,EAAAA,cAAoByD,EAAuB,CAC/DC,sBAAuBuB,GACTjF,EAAAA,cAAoBsH,EAAAA,mBAAoB,CACtDC,QAASC,EAAAA,GACRf,OACAW,IAECjC,GAASC,EAAAA,EAAAA,IAAmBiC,EAAQ,CACxCI,eAAgB,CAACpC,GACjBqC,aAAc,IAEhB,OAAoB1H,EAAAA,cAAoB2F,EAAAA,GAAgB,CACtDR,OAAQA,GACR,C,4CC9CJ,WAAgB,oBAAsB,gD","sources":["D2App/pages/dataElements/fields/CategoryComboField.js","D2App/components/metadataFormControls/CategoryComboSelect/CategoryComboSelect.test.js","D2App/pages/dataElements/fields/CategoryComboField.test.js","D2App/testUtils/TestComponentWithRouter.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/CategoryComboField.module.css?8aba"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useEffect, useRef } from 'react';\nimport { useField, useForm, useFormState } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { CategoryComboSelect, EditableFieldWrapper } from '../../../components';\nimport { useDefaultCategoryComboQuery } from '../../../lib';\nimport classes from './CategoryComboField.module.css';\nconst required = value => {\n  if (!value.id) {\n    return i18n.t('Required');\n  }\n};\n\n/*\n * @TODO: Verify that the api ignores the category combo when it's disabled.\n *        If it does not, file a jira issue and \"escalate\" this so it will be\n *        implemented\n *\n * Field rule: Disable when domainType is TRACKER\n * Field rule: Set categoryCombo.id to the default category combo when\n *             domainType is Tracker\n */\nexport function CategoryComboField() {\n  var _defaultCategoryCombo2;\n  const defaultCategoryComboQuery = useDefaultCategoryComboQuery();\n  const {\n    change\n  } = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const domainTypeIsTracker = values.domainType === 'TRACKER';\n  const disabled = domainTypeIsTracker;\n  const validate = disabled ? undefined : required;\n  const newCategoryComboLink = useHref('/categoryCombos/new');\n  const {\n    input,\n    meta\n  } = useField('categoryCombo', {\n    validateFields: [],\n    validate,\n    format: categoryCombo => categoryCombo.id,\n    parse: id => ({\n      id\n    })\n  });\n  const categoryComboHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  useEffect(() => {\n    var _defaultCategoryCombo;\n    if ((_defaultCategoryCombo = defaultCategoryComboQuery.data) !== null && _defaultCategoryCombo !== void 0 && _defaultCategoryCombo.id && domainTypeIsTracker) {\n      change('categoryCombo.id', defaultCategoryComboQuery.data.id);\n    }\n  }, [change, (_defaultCategoryCombo2 = defaultCategoryComboQuery.data) === null || _defaultCategoryCombo2 === void 0 ? void 0 : _defaultCategoryCombo2.id, domainTypeIsTracker]);\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-categorycombo\",\n    onRefresh: () => categoryComboHandle.current.refetch(),\n    onAddNew: () => window.open(newCategoryComboLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.categoryComboSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"categoryCombo.id\",\n    label: i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Category combination')\n    }),\n    helpText: i18n.t('Choose how this data element is disaggregated'),\n    error: meta.touched && !!meta.error,\n    validationText: meta.touched ? meta.error : undefined,\n    dataTest: \"formfields-categorycombo\"\n  }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n    required: true,\n    placeholder: \"\",\n    disabled: disabled,\n    invalid: meta.touched && !!meta.error,\n    ref: categoryComboHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      input.onChange(selected);\n      input.onBlur();\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { render, fireEvent, waitFor } from '@testing-library/react';\nimport React from 'react';\nimport { ComponentWithProvider } from '../../../testUtils/TestComponentWithRouter';\nimport { CategoryComboSelect } from './CategoryComboSelect';\nconst categoryCombos = [{\n  displayName: 'Births',\n  id: 'm2jTvAj5kkm'\n}, {\n  displayName: 'Commodities',\n  id: 'gbvX3pogf7p'\n}, {\n  displayName: 'Fixed/Outreach',\n  id: 'KYYSTxeVw28'\n}, {\n  displayName: 'Gender',\n  id: 'dPmavA0qloX'\n}, {\n  displayName: 'HIV age',\n  id: 'Wfan7UwK8CQ'\n}, {\n  displayName: 'HIV age+gender',\n  id: 'jCNGsC2NawV'\n}, {\n  displayName: 'HIV Paed age+gender',\n  id: 'v1K6CE6bmtw'\n}, {\n  displayName: 'Implementing Partner',\n  id: 'nM3u9s5a52V'\n}, {\n  displayName: 'Implementing Partner and Projects',\n  id: 'O4VaNks6tta'\n}, {\n  displayName: 'Location and age group',\n  id: 'dzjKKQq0cSO'\n}, {\n  displayName: 'Maternal deaths',\n  id: 'sgoeVsAbF4r'\n}, {\n  displayName: 'Morbidity Age',\n  id: 'pbvcDRasDav'\n}, {\n  displayName: 'Morbidity Cases',\n  id: 't3aNCvHsoSn'\n}, {\n  displayName: 'Morbidity Referrals',\n  id: 'ck7mRNwGDjP'\n}, {\n  displayName: 'Pregnancy complications',\n  id: 'Hz71pt7Eb3e'\n}, {\n  displayName: 'Project',\n  id: 'idcDPkDtepR'\n}, {\n  displayName: 'Rural and Urban',\n  id: 'DJXmyhnquyI'\n}, {\n  displayName: 'Staffing',\n  id: 'aN8uN5b15YG'\n}, {\n  displayName: 'Stock discarded',\n  id: 'WA3HunbaGt0'\n}, {\n  displayName: 'Target vs Result',\n  id: 'WBW7RjsApsv'\n}, {\n  displayName: 'TT',\n  id: 'arTwh07V6qz'\n}, {\n  displayName: 'Under 5/5 and above',\n  id: 'UnNIOt1uB0J'\n}];\nconst categoryCombosResolver = function () {\n  var _query$variables;\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const [, query] = args;\n  const {\n    id\n  } = query;\n  if (query !== null && query !== void 0 && (_query$variables = query.variables) !== null && _query$variables !== void 0 && _query$variables.id) {\n    const categoryCombo = categoryCombos.find(cc => id === cc.id);\n    return Promise.resolve(categoryCombo);\n  }\n  return Promise.resolve({\n    categoryCombos,\n    pager: {\n      page: 1,\n      total: 23,\n      pageSize: 50,\n      pageCount: 1\n    }\n  });\n};\n\n// Exporting this so other tests which render this component\n// don't have to mock this, too\nexport const dataResolvers = {\n  categoryCombos: categoryCombosResolver\n};\ndescribe('<CategoryComboSelect />', () => {\n  it('should render all options and None (default catCombo)', async () => {\n    const onChange = jest.fn();\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: dataResolvers\n    }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n      onChange: onChange\n    })));\n    const selectInput = result.getByTestId('dhis2-uicore-select-input');\n    fireEvent.click(selectInput);\n    for (let i = 0; i < categoryCombos.length; ++i) {\n      const categoryCombo = categoryCombos[i];\n      const selectOptions = await result.findByText(categoryCombo.displayName, {\n        selector: '[data-test=\"dhis2-uicore-singleselectoption\"]'\n      });\n      expect(selectOptions).toBeTruthy();\n    }\n    const noneOption = await result.findByText('None', {\n      selector: '[data-test=\"dhis2-uicore-singleselectoption\"]'\n    });\n    expect(noneOption).toBeInTheDocument();\n  });\n  it('should add an \"empty\" option when not required', async () => {\n    const onChange = jest.fn();\n    const dataResolvers = {\n      categoryCombos: categoryCombosResolver\n    };\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: dataResolvers\n    }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n      onChange: onChange\n    })));\n    const selectInput = result.getByTestId('dhis2-uicore-select-input');\n    fireEvent.click(selectInput);\n    const noneLabel = await result.findByText('None', {\n      selector: '[data-test=\"dhis2-uicore-singleselectoption\"]'\n    });\n    const selectedLabel = await result.findByText(/No value/, {\n      selector: '[data-test=\"dhis2-uicore-singleselectoption\"]'\n    });\n    expect(noneLabel).toBeInTheDocument();\n    expect(selectedLabel).toBeInTheDocument();\n    // We'd find a single option if we didn't wait for this. The test would\n    // subsequently fail as there'd be exactly one categoryCombo option\n    await waitFor(() => {\n      const allOptions = result.getAllByTestId('dhis2-uicore-singleselectoption');\n      expect(allOptions).toHaveLength(categoryCombos.length + 2);\n    });\n  });\n  it('should not add an \"empty\" option when not required', async () => {\n    const onChange = jest.fn();\n    const dataResolvers = {\n      categoryCombos: categoryCombosResolver\n    };\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: dataResolvers\n    }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n      required: true,\n      onChange: onChange\n    })));\n    const selectInput = result.getByTestId('dhis2-uicore-select-input');\n    fireEvent.click(selectInput);\n\n    // We'd find a single option if we didn't wait for this. The test would\n    // subsequently fail as there'd be exactly one categoryCombo option\n    await waitFor(() => {\n      const allOptions = result.getAllByTestId('dhis2-uicore-singleselectoption');\n      expect(allOptions).toHaveLength(categoryCombos.length + 1);\n    });\n  });\n  it('should load the initially selected option', async () => {\n    const onChange = jest.fn();\n    const dataResolvers = {\n      categoryCombos: categoryCombosResolver\n    };\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: dataResolvers\n    }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n      selected: \"m2jTvAj5kkm\",\n      onChange: onChange\n    })));\n    const selectInput = result.getByTestId('dhis2-uicore-select-input');\n    fireEvent.click(selectInput);\n    const selectedLabel = await result.findByText('Births', {\n      selector: '.root'\n    });\n    expect(selectedLabel).toBeTruthy();\n  });\n  it('should call the onChange handler with the newly selected value', async () => {\n    const onChange = jest.fn();\n    const dataResolvers = {\n      categoryCombos: categoryCombosResolver\n    };\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: dataResolvers\n    }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n      onChange: onChange\n    })));\n    const selectInput = result.getByTestId('dhis2-uicore-select-input');\n    fireEvent.click(selectInput);\n    const selectedLabel = await result.findByText('Births', {\n      selector: '[data-test=\"dhis2-uicore-singleselectoption\"]'\n    });\n    fireEvent.click(selectedLabel);\n    expect(onChange).toHaveBeenCalledTimes(1);\n    expect(onChange).toHaveBeenCalledWith({\n      selected: 'm2jTvAj5kkm'\n    });\n  });\n});","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { render, fireEvent, waitFor } from '@testing-library/react';\nimport React from 'react';\nimport { Form, useForm } from 'react-final-form';\nimport { RouterProvider, createMemoryRouter } from 'react-router-dom';\nimport { dataResolvers } from '../../../components/metadataFormControls/CategoryComboSelect/CategoryComboSelect.test';\nimport { ComponentWithProvider } from '../../../testUtils/TestComponentWithRouter';\nimport { CategoryComboField } from './CategoryComboField';\njest.mock('react-final-form', () => {\n  const RFF = jest.requireActual('react-final-form');\n  const useForm = jest.fn(() => ({\n    change: jest.fn()\n  }));\n  return {\n    ...RFF,\n    useForm\n  };\n});\ndescribe('<CategoryComboField />', () => {\n  it('should be required', async () => {\n    const customData = {\n      ...dataResolvers\n    };\n    const onSubmit = jest.fn();\n    const router = createMemoryRouter([{\n      path: '/',\n      element: /*#__PURE__*/React.createElement(Form, {\n        onSubmit: onSubmit,\n        initialValues: {\n          categoryCombo: {\n            id: ''\n          }\n        }\n      }, _ref => {\n        let {\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, /*#__PURE__*/React.createElement(CategoryComboField, null), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\"\n        }, \"Submit\"));\n      })\n    }]);\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    const submitButton = await result.findByText('Submit', {\n      selector: 'button'\n    });\n    fireEvent.click(submitButton);\n    expect(result.getByTestId('formfields-categorycombo-validation')).toBeTruthy();\n    expect(onSubmit).toHaveBeenCalledTimes(0);\n  });\n  it('should not be disabled when domainType is not tracker', () => {\n    const customData = {\n      ...dataResolvers\n    };\n    const onSubmit = jest.fn();\n    const router = createMemoryRouter([{\n      path: '/',\n      element: /*#__PURE__*/React.createElement(Form, {\n        onSubmit: onSubmit,\n        initialValues: {\n          domainType: 'AGGREGATE',\n          categoryCombo: {\n            id: ''\n          }\n        }\n      }, _ref2 => {\n        let {\n          handleSubmit\n        } = _ref2;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, /*#__PURE__*/React.createElement(CategoryComboField, null));\n      })\n    }]);\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    expect(result.container.querySelector('.disabled')).toBeFalsy();\n  });\n  it('should be disabled when domainType is set to tracker', async () => {\n    const customData = {\n      ...dataResolvers\n    };\n    const onSubmit = jest.fn();\n    const router = createMemoryRouter([{\n      path: '/',\n      element: /*#__PURE__*/React.createElement(Form, {\n        onSubmit: onSubmit,\n        initialValues: {\n          domainType: 'TRACKER',\n          categoryCombo: {\n            id: ''\n          }\n        }\n      }, _ref3 => {\n        let {\n          handleSubmit\n        } = _ref3;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, /*#__PURE__*/React.createElement(CategoryComboField, null));\n      })\n    }]);\n    const result = render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    expect(result.container.querySelector('.disabled')).toBeTruthy();\n  });\n  it('should change the value to the default category combo when domainType is set to tracker', async () => {\n    const change = jest.fn();\n\n    // Doing (useForm as jest.Mock).mockImplementation(...) causes some issues?\n    const uF = useForm;\n    uF.mockImplementation(() => ({\n      change\n    }));\n    const customData = {\n      ...dataResolvers,\n      categoryCombos: function () {\n        var _query$params, _query$params$filter;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const [, query] = args;\n        if ((_query$params = query.params) !== null && _query$params !== void 0 && (_query$params$filter = _query$params.filter) !== null && _query$params$filter !== void 0 && _query$params$filter.includes('isDefault:eq:true')) {\n          return Promise.resolve({\n            categoryCombos: [{\n              id: 'bjDvmb4bfuf'\n            }]\n          });\n        }\n        return dataResolvers.categoryCombos(...args);\n      }\n    };\n    const onSubmit = jest.fn();\n    const router = createMemoryRouter([{\n      path: '/',\n      element: /*#__PURE__*/React.createElement(Form, {\n        onSubmit: onSubmit,\n        initialValues: {\n          domainType: 'TRACKER',\n          categoryCombo: {\n            id: ''\n          }\n        }\n      }, _ref4 => {\n        let {\n          handleSubmit\n        } = _ref4;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, /*#__PURE__*/React.createElement(CategoryComboField, null));\n      })\n    }]);\n    render( /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(RouterProvider, {\n      router: router\n    })));\n    await waitFor(() => {\n      expect(change).toHaveBeenCalledTimes(1);\n      expect(change).toHaveBeenCalledWith('categoryCombo.id', 'bjDvmb4bfuf');\n    });\n  });\n});","import { CustomDataProvider, Provider } from '@dhis2/app-runtime';\nimport React from 'react';\nimport { RouterProvider, createMemoryRouter } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\nexport const ComponentWithProvider = _ref => {\n  let {\n    dataForCustomProvider,\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Provider, {\n    config: {\n      baseUrl: 'http://dhis2-imaginary-test-server',\n      apiVersion: 41\n    },\n    plugin: false,\n    parentAlertsAdd: () => undefined,\n    showAlertsInPlugin: true\n  }, /*#__PURE__*/React.createElement(CustomDataProvider, {\n    data: dataForCustomProvider,\n    options: {\n      failOnMiss: true\n    }\n  }, children));\n};\nconst TestComponentWithRouter = _ref2 => {\n  let {\n    path,\n    customData,\n    routeOptions,\n    children\n  } = _ref2;\n  const routes = [{\n    path,\n    element: /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(QueryParamProvider, {\n      adapter: ReactRouter6Adapter\n    }, children)),\n    ...routeOptions\n  }];\n  const router = createMemoryRouter(routes, {\n    initialEntries: [path],\n    initialIndex: 0\n  });\n  return /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router\n  });\n};\nexport default TestComponentWithRouter;","// extracted by mini-css-extract-plugin\nexport default {\"categoryComboSelect\":\"CategoryComboField_categoryComboSelect__X790g\"};"],"names":["required","value","id","i18n","t","CategoryComboField","_defaultCategoryCombo2","defaultCategoryComboQuery","useDefaultCategoryComboQuery","change","useForm","values","useFormState","subscription","domainTypeIsTracker","domainType","disabled","validate","undefined","newCategoryComboLink","useHref","input","meta","useField","validateFields","format","categoryCombo","parse","categoryComboHandle","useRef","refetch","Error","useEffect","_defaultCategoryCombo","data","React","EditableFieldWrapper","dataTest","onRefresh","current","onAddNew","window","open","className","classes","categoryComboSelect","Field","name","label","fieldLabel","helpText","error","touched","validationText","CategoryComboSelect","placeholder","invalid","ref","selected","onChange","_ref","onBlur","onFocus","categoryCombos","displayName","categoryCombosResolver","_query$variables","_len","arguments","length","args","Array","_key","query","variables","find","cc","Promise","resolve","pager","page","total","pageSize","pageCount","dataResolvers","describe","it","async","jest","fn","result","render","ComponentWithProvider","dataForCustomProvider","selectInput","getByTestId","fireEvent","click","i","selectOptions","findByText","selector","expect","toBeTruthy","noneOption","toBeInTheDocument","noneLabel","selectedLabel","waitFor","allOptions","getAllByTestId","toHaveLength","toHaveBeenCalledTimes","toHaveBeenCalledWith","mock","requireActual","customData","onSubmit","router","createMemoryRouter","path","element","Form","initialValues","handleSubmit","type","RouterProvider","submitButton","_ref2","container","querySelector","toBeFalsy","_ref3","mockImplementation","_query$params","_query$params$filter","params","filter","includes","_ref4","children","Provider","config","baseUrl","apiVersion","plugin","parentAlertsAdd","showAlertsInPlugin","CustomDataProvider","options","failOnMiss","routeOptions","routes","QueryParamProvider","adapter","ReactRouter6Adapter","initialEntries","initialIndex"],"sourceRoot":""}