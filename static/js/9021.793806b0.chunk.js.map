{"version":3,"file":"static/js/9021.793806b0.chunk.js","mappings":"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","sources":["D2App/pages/organisationUnits/Edit.js","D2App/pages/organisationUnits/form/organisationUnitSchema.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { DefaultEditFormContents, FormBase } from '../../components';\nimport { ATTRIBUTE_VALUES_FIELD_FILTERS, DEFAULT_FIELD_FILTERS, SECTIONS_MAP, useOnSubmitEdit } from '../../lib';\nimport { useBoundResourceQueryFn } from '../../lib/query/useBoundQueryFn';\nimport { OrganisationUnitFormField, validate } from './form';\nconst fieldFilters = [...DEFAULT_FIELD_FILTERS, ...ATTRIBUTE_VALUES_FIELD_FILTERS, 'name', 'code', 'shortName', 'openingDate', 'closedDate', 'comment', 'image[id,name]', 'description', 'contactPerson', 'address', 'email', 'phoneNumber', 'url', 'geometry', 'dataSets', 'programs', 'level', 'path', 'parent[id,path, displayName]'];\nconst section = SECTIONS_MAP.organisationUnit;\nexport const Component = () => {\n  const queryFn = useBoundResourceQueryFn();\n  const modelId = useParams().id;\n  const query = {\n    resource: 'organisationUnits',\n    id: modelId,\n    params: {\n      fields: fieldFilters.concat()\n    }\n  };\n  const orgUnit = useQuery({\n    queryKey: [query],\n    queryFn: queryFn\n  });\n  return /*#__PURE__*/React.createElement(FormBase, {\n    onSubmit: useOnSubmitEdit({\n      section,\n      modelId\n    }),\n    section: section,\n    initialValues: orgUnit.data,\n    validate: validate\n  }, /*#__PURE__*/React.createElement(DefaultEditFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(OrganisationUnitFormField, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { z } from 'zod';\nimport { createFormValidate, getDefaults, modelFormSchemas } from '../../../lib';\nconst {\n  withAttributeValues,\n  identifiable,\n  referenceCollection\n} = modelFormSchemas;\nexport const organisationUnitSchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim().default(''),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  image: z.object({\n    id: z.string()\n  }).optional(),\n  phoneNumber: z.string().min(0, {\n    message: i18n.t('Must be a valid mobile number')\n  }).max(150, {\n    message: i18n.t('Must be a valid mobile number')\n  }).optional(),\n  contactPerson: z.string().max(255, {\n    message: i18n.t('Should not exceed {{maxLength}} characters', {\n      maxLength: 255\n    })\n  }).optional(),\n  openingDate: z.coerce.date(),\n  email: z.string().email().optional(),\n  address: z.string().max(230, {\n    message: i18n.t('Should not exceed {{maxLength}} characters', {\n      maxLength: 255\n    })\n  }).optional(),\n  url: z.string().url({\n    message: i18n.t('Must be a valid url')\n  }).optional(),\n  closedDate: z.coerce.date().optional(),\n  comment: z.string().max(2000, {\n    message: i18n.t('Should not exceed {{maxLength}} characters', {\n      maxLength: 2000\n    })\n  }).optional(),\n  parent: z.object({\n    id: z.string(),\n    path: z.string()\n  }).optional(),\n  geometry: z.object({\n    type: z.literal('Point'),\n    coordinates: z.array(z.number()).length(2).refine(coord => coord[0] >= -90 && coord[0] <= 90 && coord[1] >= -180 && coord[1] <= 180, {\n      message: i18n.t('Longitude should be between -90 and 90. Latitude should be between -180 and 180')\n    })\n  }).or(z.object({\n    type: z.union([z.literal('Multipoint'), z.literal('Linestring'), z.literal('Multilinestring'), z.literal('Polygon'), z.literal('Multipolygon'), z.literal('Geometrycollection')])\n  })).optional(),\n  programs: referenceCollection.optional().default([]),\n  dataSets: referenceCollection.optional().default([])\n}).refine(orgUnit => {\n  var _orgUnit$parent;\n  if (!orgUnit.id) {\n    return true;\n  }\n  const isDescendantOfSelf = (_orgUnit$parent = orgUnit.parent) === null || _orgUnit$parent === void 0 ? void 0 : _orgUnit$parent.path.includes(orgUnit.id);\n  return !isDescendantOfSelf;\n}, {\n  message: i18n.t('Parent organisation unit cannot be itself or a descendant of itself.'),\n  path: ['parent']\n});\nexport const initialValues = getDefaults(organisationUnitSchema);\nexport const validate = createFormValidate(organisationUnitSchema);"],"names":["fieldFilters","DEFAULT_FIELD_FILTERS","ATTRIBUTE_VALUES_FIELD_FILTERS","section","SECTIONS_MAP","organisationUnit","Component","queryFn","useBoundResourceQueryFn","modelId","useParams","id","query","resource","params","fields","concat","orgUnit","useQuery","queryKey","React","FormBase","onSubmit","useOnSubmitEdit","initialValues","data","validate","DefaultEditFormContents","OrganisationUnitFormField","withAttributeValues","identifiable","referenceCollection","modelFormSchemas","organisationUnitSchema","merge","extend","shortName","z","string","trim","default","code","optional","description","image","object","phoneNumber","min","message","i18n","t","max","contactPerson","maxLength","openingDate","coerce","date","email","address","url","closedDate","comment","parent","path","geometry","type","literal","coordinates","array","number","length","refine","coord","or","union","programs","dataSets","_orgUnit$parent","includes","getDefaults","createFormValidate"],"sourceRoot":""}