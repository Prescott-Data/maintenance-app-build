{"version":3,"file":"static/js/7572.421380a2.chunk.js","mappings":"mSAaO,SAASA,IACd,IAAIC,EACJ,MAAMC,EAAO,qBACP,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAASH,EAAM,CACjBI,UAAU,EACVC,OAAQC,GAA2C,OAAtBA,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBC,KAAID,GAAqBA,EAAkBE,KAChKC,MAAOC,GAAOA,EAAIH,KAAIC,IAAE,CACtBA,SAEFG,eAAgB,KAEZC,GAA2BC,EAAAA,EAAAA,IAAQ,0BACnCC,GAA0BC,EAAAA,EAAAA,QAAO,CACrCC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAGhCC,EAA2BC,EAAAA,cAAoB,IAAK,CACxDC,UAAWC,EAAAA,QAAQC,+BAClBC,EAAAA,EAAKC,EAAE,iCACJC,EAA0BN,EAAAA,cAAoB,MAAO,CACzDC,UAAWC,EAAAA,QAAQK,gCACLP,EAAAA,cAAoBQ,EAAAA,EAAa,KAAmBR,EAAAA,cAAoBS,EAAAA,EAAQ,CAC9FC,OAAO,EACPC,QAAShB,EAAwBiB,QAAQf,SACxCO,EAAAA,EAAKC,EAAE,iBAA+BL,EAAAA,cAAoBS,EAAAA,EAAQ,CACnEC,OAAO,EACPC,QAASA,IAAME,OAAOC,KAAKrB,EAA0B,WACpDW,EAAAA,EAAKC,EAAE,cACV,OAAoBL,EAAAA,cAAoBe,EAAAA,EAAO,CAC7CC,SAAU,8CACVC,QAASlC,EAAKkC,MACdC,eAA+C,QAA9BtC,EAAcG,EAAKkC,aAAmC,IAAhBrC,OAAyB,EAASA,EAAYuC,WACrGtC,KAAMA,GACQmB,EAAAA,cAAoBoB,EAAAA,GAA2B,CAC7DC,IAAK1B,EACL2B,SAAUxC,EAAMyC,MAChBC,SAAUC,IACR,IAAI,SACFH,GACEG,EACJ,OAAO3C,EAAM0C,SAASF,EAAS,EAEjCvB,YAAaA,EACbO,WAAYA,IAEhB,C,+BC7DA,WAAgB,0BAA4B,0DAA0D,yBAA2B,yD","sources":["D2App/pages/dataElementGroupSets/fields/DataElementGroupsField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElementGroupSets/fields/DataElementGroupsField.module.css?f983"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { ButtonStrip, Button, Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { DataElementGroupsTransfer } from '../../../components';\nimport classes from './DataElementGroupsField.module.css';\n\n/**\n *\n * DataElementGroups\n *\n */\nexport function DataElementGroupsField() {\n  var _meta$error;\n  const name = 'dataElementGroups';\n  const {\n    input,\n    meta\n  } = useField(name, {\n    multiple: true,\n    format: dataElementGroups => dataElementGroups === null || dataElementGroups === void 0 ? void 0 : dataElementGroups.map(dataElementGroups => dataElementGroups.id),\n    parse: ids => ids.map(id => ({\n      id\n    })),\n    validateFields: []\n  });\n  const newDataElementGroupsLink = useHref('/dataElementGroups/new');\n  const dataElementGroupsHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  const rightHeader = /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.dataElementGroupsPickedHeader\n  }, i18n.t('Selected data element groups'));\n  const leftFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dataElementGroupsOptionsFooter\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: dataElementGroupsHandle.current.refetch\n  }, i18n.t('Refresh list')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => window.open(newDataElementGroupsLink, '_blank')\n  }, i18n.t('Add new'))));\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"dataelementsformfields-dataElementGroupsets\",\n    error: !!meta.error,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString(),\n    name: name\n  }, /*#__PURE__*/React.createElement(DataElementGroupsTransfer, {\n    ref: dataElementGroupsHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    rightHeader: rightHeader,\n    leftFooter: leftFooter\n  }));\n}","// extracted by mini-css-extract-plugin\nexport default {\"dataElementsOptionsFooter\":\"DataElementGroupsField_dataElementsOptionsFooter__l9fmA\",\"dataElementsPickedHeader\":\"DataElementGroupsField_dataElementsPickedHeader__uWdRL\"};"],"names":["DataElementGroupsField","_meta$error","name","input","meta","useField","multiple","format","dataElementGroups","map","id","parse","ids","validateFields","newDataElementGroupsLink","useHref","dataElementGroupsHandle","useRef","refetch","Error","rightHeader","React","className","classes","dataElementGroupsPickedHeader","i18n","t","leftFooter","dataElementGroupsOptionsFooter","ButtonStrip","Button","small","onClick","current","window","open","Field","dataTest","error","validationText","toString","DataElementGroupsTransfer","ref","selected","value","onChange","_ref"],"sourceRoot":""}