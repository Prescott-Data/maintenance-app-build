{"version":3,"file":"static/js/127.bc763798.chunk.js","mappings":"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","sources":["D2App/pages/categoryOptionGroupSets/New.js","D2App/pages/categoryOptionGroupSets/form/CategoryOptionGroupSetFormFields.js","D2App/pages/categoryOptionGroupSets/form/categoryOptionGroupSetSchema.js"],"sourcesContent":["import React from 'react';\nimport { FormBase } from '../../components';\nimport { DefaultNewFormContents } from '../../components/form/DefaultFormContents';\nimport { SECTIONS_MAP, useOnSubmitNew } from '../../lib';\nimport CategoryOptionGroupSetFormFields from './form/CategoryOptionGroupSetFormFields';\nimport { initialValues, validate } from './form/categoryOptionGroupSetSchema';\nconst section = SECTIONS_MAP.categoryOptionGroupSet;\nexport const Component = () => {\n  return /*#__PURE__*/React.createElement(FormBase, {\n    section: section,\n    onSubmit: useOnSubmitNew({\n      section\n    }),\n    initialValues: initialValues,\n    validate: validate\n  }, /*#__PURE__*/React.createElement(DefaultNewFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(CategoryOptionGroupSetFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { RadioFieldFF, CheckboxFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport { CustomAttributesSection, DefaultIdentifiableFields, DescriptionField, HorizontalFieldGroup, ModelTransferField, StandardFormField, StandardFormSection, StandardFormSectionDescription, StandardFormSectionTitle } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nfunction CategoryOptionGroupSetFormFields() {\n  const section = SECTIONS_MAP.categoryOptionGroupSet;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this category option group set.')), /*#__PURE__*/React.createElement(DefaultIdentifiableFields, null), /*#__PURE__*/React.createElement(DescriptionField, {\n    schemaSection: section,\n    helpText: i18n.t('Explain the purpose of this category option group set.')\n  })), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Data configuration')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose how this category option group set will be used to capture and analyze')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(HorizontalFieldGroup, {\n    label: 'Data dimension type (required)'\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Disaggregation'),\n    type: \"radio\",\n    value: 'DISAGGREGATION'\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimensionType\",\n    component: RadioFieldFF,\n    label: i18n.t('Attribute'),\n    type: \"radio\",\n    value: 'ATTRIBUTE'\n  }))), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    name: \"dataDimension\",\n    type: \"checkbox\",\n    component: CheckboxFieldFF,\n    label: i18n.t('Use as data dimension'),\n    helpText: i18n.t('Category option group set will be available to the analytics as another dimension')\n  }))), /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'categoryOptionGroups'\n  }, i18n.t('Category option Groups'))), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Choose the category option groups to include in this category option group set.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(ModelTransferField, {\n    name: \"categoryOptionGroups\",\n    query: {\n      resource: 'categoryOptionGroups'\n    },\n    leftHeader: i18n.t('Available category option groups'),\n    rightHeader: i18n.t('Selected category option groups'),\n    filterPlaceholder: i18n.t('Filter available category option groups'),\n    filterPlaceholderPicked: i18n.t('Filter selected category option groups')\n  })))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n}\nexport default CategoryOptionGroupSetFormFields;","import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\nimport { CategoryOptionGroupSet } from '../../../types/generated';\nconst {\n  identifiable,\n  referenceCollection,\n  withAttributeValues\n} = modelFormSchemas;\nexport const categoryOptionGroupSetSchema = identifiable.merge(withAttributeValues).extend({\n  shortName: z.string().trim(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  dataDimensionType: z.nativeEnum(CategoryOptionGroupSet.dataDimensionType).default(CategoryOptionGroupSet.dataDimensionType.DISAGGREGATION),\n  dataDimension: z.boolean().default(true),\n  categoryOptionGroups: referenceCollection.min(1, 'At least one category option group is required').default([])\n});\nexport const initialValues = getDefaults(categoryOptionGroupSetSchema);\nexport const validate = createFormValidate(categoryOptionGroupSetSchema);"],"names":["section","SECTIONS_MAP","categoryOptionGroupSet","Component","React","FormBase","onSubmit","useOnSubmitNew","initialValues","validate","DefaultNewFormContents","CategoryOptionGroupSetFormFields","StandardFormSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","DefaultIdentifiableFields","DescriptionField","schemaSection","helpText","StandardFormField","HorizontalFieldGroup","label","Field","name","component","RadioFieldFF","type","value","CheckboxFieldFF","htmlFor","ModelTransferField","query","resource","leftHeader","rightHeader","filterPlaceholder","filterPlaceholderPicked","CustomAttributesSection","identifiable","referenceCollection","withAttributeValues","modelFormSchemas","categoryOptionGroupSetSchema","merge","extend","shortName","z","string","trim","code","optional","description","dataDimensionType","nativeEnum","CategoryOptionGroupSet","default","DISAGGREGATION","dataDimension","boolean","categoryOptionGroups","min","getDefaults","createFormValidate"],"sourceRoot":""}