{"version":3,"file":"static/js/8287.1706ac55.chunk.js","mappings":"4QAaO,SAASA,IACd,MAAMC,GAAmBC,EAAAA,EAAAA,IAAQ,oBAG3B,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IAAS,mBAAoB,CAC/BC,eAAgB,GAChBC,OAAQC,GAAaA,EAAUC,GAC/BC,MAAOD,IAAE,CACPA,SAGEE,GAAkBC,EAAAA,EAAAA,QAAO,CAC7BC,QAASA,KACP,MAAM,IAAIC,MAAM,kBAAkB,IAGtC,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAsB,CAC5DC,SAAU,8BACVC,UAAWA,IAAMP,EAAgBQ,QAAQN,UACzCO,SAAUA,IAAMC,OAAOC,KAAKrB,EAAkB,WAChCc,EAAAA,cAAoB,MAAO,CACzCQ,UAAWC,EAAAA,QAAQC,wBACLV,EAAAA,cAAoBW,EAAAA,EAAO,CACzCC,KAAM,sBACNC,MAAOC,EAAAA,EAAKC,EAAE,sBACdC,SAAUF,EAAAA,EAAKC,EAAE,qDACjBE,eAAgB5B,EAAK6B,QAAU7B,EAAK8B,WAAQC,EAC5CD,MAAO9B,EAAK6B,WAAa7B,EAAK8B,MAC9BjB,SAAU,+BACIF,EAAAA,cAAoBqB,EAAAA,GAAiB,CACnDC,eAAe,EACfC,IAAK3B,EACL4B,QAASnC,EAAK6B,WAAa7B,EAAK8B,MAChCM,YAAa,GACbC,SAAUtC,EAAMuC,MAChBC,SAAUC,IACR,IAAI,SACFH,GACEG,EACJ,OAAOzC,EAAMwC,SAASF,EAAS,EAEjCI,OAAQ1C,EAAM0C,OACdC,QAAS3C,EAAM2C,YAEnB,C,+BC3DA,WAAgB,uBAAyB,sD","sources":["D2App/pages/dataElements/fields/OptionSetCommentField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/OptionSetCommentField.module.css?6ee8"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { EditableFieldWrapper, OptionSetSelect } from '../../../components';\nimport classes from './OptionSetCommentField.module.css';\n\n/**\n *\n * OptionSetComment\n *\n */\nexport function OptionSetCommentField() {\n  const newOptionSetLink = useHref('/optionSets/new');\n  // Not using a dot path because setting the value to an empty string\n  // removes the option set from the form state entirely\n  const {\n    input,\n    meta\n  } = useField('commentOptionSet', {\n    validateFields: [],\n    format: optionSet => optionSet.id,\n    parse: id => ({\n      id\n    })\n  });\n  const optionSetHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-commentoptionset\",\n    onRefresh: () => optionSetHandle.current.refetch(),\n    onAddNew: () => window.open(newOptionSetLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.optionSetCommentSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"commentOptionSet.id\",\n    label: i18n.t('Option set comment'),\n    helpText: i18n.t('Choose a set of predefined comment for data entry'),\n    validationText: meta.touched ? meta.error : undefined,\n    error: meta.touched && !!meta.error,\n    dataTest: \"formfields-commentoptionset\"\n  }, /*#__PURE__*/React.createElement(OptionSetSelect, {\n    showAllOption: true,\n    ref: optionSetHandle,\n    invalid: meta.touched && !!meta.error,\n    placeholder: \"\",\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","// extracted by mini-css-extract-plugin\nexport default {\"optionSetCommentSelect\":\"OptionSetCommentField_optionSetCommentSelect__87vCm\"};"],"names":["OptionSetCommentField","newOptionSetLink","useHref","input","meta","useField","validateFields","format","optionSet","id","parse","optionSetHandle","useRef","refetch","Error","React","EditableFieldWrapper","dataTest","onRefresh","current","onAddNew","window","open","className","classes","optionSetCommentSelect","Field","name","label","i18n","t","helpText","validationText","touched","error","undefined","OptionSetSelect","showAllOption","ref","invalid","placeholder","selected","value","onChange","_ref","onBlur","onFocus"],"sourceRoot":""}