{"version":3,"file":"static/js/8588.885b5ad9.chunk.js","mappings":"8QAOA,MAAMA,EAAUC,EAAAA,GAAaC,cAChBC,EAAYA,IACHC,EAAAA,cAAoBC,EAAAA,EAAU,CAChDC,cAAeA,EAAAA,cACfC,UAAUC,EAAAA,EAAAA,IAAe,CACvBR,YAEFS,SAAUA,EAAAA,SACVC,mBAAmB,GACLN,EAAAA,cAAoBO,EAAAA,EAAwB,CAC1DX,QAASA,GACKI,EAAAA,cAAoBQ,EAAAA,yBAA0B,O,+ICZzD,MAAMC,EAAcA,KACzB,MACMC,GAAgBC,EAAAA,EAAAA,MAChBN,GAAWO,EAAAA,EAAAA,IAAa,CAC5BF,gBACAG,SAAU,YAEN,MACJC,EAAK,KACLC,IACEC,EAAAA,EAAAA,IATc,SASM,CACtBX,WACAY,KAAM,SACNC,OAAQC,GAAmB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMC,aAEvE,OAAoBpB,EAAAA,cAAoBqB,EAAAA,EAAc,CACpDP,MAAOA,EACPC,KAAMA,EACNO,WAAY,QACZC,MAAOC,EAAAA,EAAKC,EAAE,UACdC,UAAU,GACV,C,iJCtBG,MAAMlB,EAA2BA,KACtC,MAAMZ,EAAUC,EAAAA,GAAaC,cACvBY,GAAgBC,EAAAA,EAAAA,MACtB,OAAoBX,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB2B,EAAAA,GAAqB,KAAmB3B,EAAAA,cAAoB4B,EAAAA,GAA0B,KAAMJ,EAAAA,EAAKC,EAAE,sBAAoCzB,EAAAA,cAAoB6B,EAAAA,GAAgC,KAAML,EAAAA,EAAKC,EAAE,0DAAwEzB,EAAAA,cAAoB8B,EAAAA,GAAmB,KAAmB9B,EAAAA,cAAoB+B,EAAAA,GAAW,CACtcrB,cAAeA,KACCV,EAAAA,cAAoB8B,EAAAA,GAAmB,KAAmB9B,EAAAA,cAAoBS,EAAAA,YAAa,QAAsBT,EAAAA,cAAoBgC,EAAAA,GAAyB,CAC9KtB,cAAed,IACd,C,wKCVL,MAAM,aACJqC,GACEC,EAAAA,GACSC,EAAkBF,EAAaG,OAAO,CACjDC,OAAQC,EAAAA,EAAEC,OAAOC,OAAO,CACtBC,mBAAoB,0BACnBC,QAEQxC,GAAgByC,EAAAA,EAAAA,IAAYR,GAC5B9B,GAAWuC,EAAAA,EAAAA,IAAmBT,E","sources":["D2App/pages/indicatorTypes/New.js","D2App/pages/indicatorTypes/form/FactorField.js","D2App/pages/indicatorTypes/form/IndicatorTypesFormFields.js","D2App/pages/indicatorTypes/form/IndicatorTypesSchema.js"],"sourcesContent":["import React from 'react';\nimport { DefaultNewFormContents } from '../../components/form/DefaultFormContents';\nimport { FormBase } from '../../components/form/FormBase';\nimport { SECTIONS_MAP, useOnSubmitNew } from '../../lib';\nimport { validate } from './form';\nimport { IndicatorTypesFormFields } from './form/IndicatorTypesFormFields';\nimport { initialValues } from './form/IndicatorTypesSchema';\nconst section = SECTIONS_MAP.indicatorType;\nexport const Component = () => {\n  return /*#__PURE__*/React.createElement(FormBase, {\n    initialValues: initialValues,\n    onSubmit: useOnSubmitNew({\n      section\n    }),\n    validate: validate,\n    includeAttributes: false\n  }, /*#__PURE__*/React.createElement(DefaultNewFormContents, {\n    section: section\n  }, /*#__PURE__*/React.createElement(IndicatorTypesFormFields, null)));\n};","import i18n from '@dhis2/d2-i18n';\nimport { InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { useField } from 'react-final-form';\nimport { useSchemaSectionHandleOrThrow } from '../../../lib';\nimport { useValidator } from '../../../lib/models/useFieldValidators';\nexport const FactorField = () => {\n  const fieldName = 'factor';\n  const schemaSection = useSchemaSectionHandleOrThrow();\n  const validate = useValidator({\n    schemaSection,\n    property: 'factor'\n  });\n  const {\n    input,\n    meta\n  } = useField(fieldName, {\n    validate,\n    type: 'number',\n    format: value => value === null || value === void 0 ? void 0 : value.toString()\n  });\n  return /*#__PURE__*/React.createElement(InputFieldFF, {\n    input: input,\n    meta: meta,\n    inputWidth: \"400px\",\n    label: i18n.t('Factor'),\n    required: true\n  });\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { CustomAttributesSection, StandardFormField, StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, NameField } from '../../../components';\nimport { SECTIONS_MAP, useSchemaSectionHandleOrThrow } from '../../../lib';\nimport { FactorField } from './FactorField';\nexport const IndicatorTypesFormFields = () => {\n  const section = SECTIONS_MAP.indicatorType;\n  const schemaSection = useSchemaSectionHandleOrThrow();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this Indicator Type.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(NameField, {\n    schemaSection: schemaSection\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(FactorField, null))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n};","import { z } from 'zod';\nimport { getDefaults, createFormValidate, modelFormSchemas } from '../../../lib';\nconst {\n  identifiable\n} = modelFormSchemas;\nexport const IndicatorSchema = identifiable.extend({\n  factor: z.coerce.number({\n    invalid_type_error: 'Please enter a number'\n  }).int()\n});\nexport const initialValues = getDefaults(IndicatorSchema);\nexport const validate = createFormValidate(IndicatorSchema);"],"names":["section","SECTIONS_MAP","indicatorType","Component","React","FormBase","initialValues","onSubmit","useOnSubmitNew","validate","includeAttributes","DefaultNewFormContents","IndicatorTypesFormFields","FactorField","schemaSection","useSchemaSectionHandleOrThrow","useValidator","property","input","meta","useField","type","format","value","toString","InputFieldFF","inputWidth","label","i18n","t","required","StandardFormSection","StandardFormSectionTitle","StandardFormSectionDescription","StandardFormField","NameField","CustomAttributesSection","identifiable","modelFormSchemas","IndicatorSchema","extend","factor","z","coerce","number","invalid_type_error","int","getDefaults","createFormValidate"],"sourceRoot":""}