{"version":3,"file":"static/js/8707.74545f18.chunk.js","mappings":"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AAMC,GAAuB,CAElC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvD,KAAM,CA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","sources":["../../../node_modules/@dhis2/multi-calendar-dates/build/es/locales/index.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/useResolvedDirection.js","../../../node_modules/@js-temporal/polyfill/tsc-out/intrinsicclass.js","../../../node_modules/@js-temporal/polyfill/tsc-out/slots.js","../../../node_modules/@js-temporal/polyfill/tsc-out/regex.js","../../../node_modules/@js-temporal/polyfill/tsc-out/ecmascript.js","../../../node_modules/@js-temporal/polyfill/tsc-out/intl.js","../../../node_modules/@js-temporal/polyfill/tsc-out/instant.js","../../../node_modules/@js-temporal/polyfill/tsc-out/calendar.js","../../../node_modules/@js-temporal/polyfill/tsc-out/plaindate.js","../../../node_modules/@js-temporal/polyfill/tsc-out/plaindatetime.js","../../../node_modules/@js-temporal/polyfill/tsc-out/duration.js","../../../node_modules/@js-temporal/polyfill/tsc-out/plainmonthday.js","../../../node_modules/@js-temporal/polyfill/tsc-out/now.js","../../../node_modules/@js-temporal/polyfill/tsc-out/plaintime.js","../../../node_modules/@js-temporal/polyfill/tsc-out/timezone.js","../../../node_modules/@js-temporal/polyfill/tsc-out/plainyearmonth.js","../../../node_modules/@js-temporal/polyfill/tsc-out/zoneddatetime.js","../../../node_modules/@js-temporal/polyfill/tsc-out/index.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/constants/dhis2CalendarsMap.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/custom-calendars/calendarLocalisations.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/custom-calendars/nepaliCalendarData.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/custom-calendars/nepaliCalendar.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/custom-calendars/index.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/date-string-regexp.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/extract-date-parts-from-date-string.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/getNowInCalendar.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/validate-date-string.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/helpers.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/constants/numberingSystems.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/localisationHelpers.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/internal/useCalendarWeekDays.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/getValidLocale.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/internal/useResolvedLocaleOptions.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/internal/useWeekDayLabels.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/useDatePicker.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/hooks/internal/useNavigation.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/utils/convert-date.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/period-types.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/period-type-groups.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/daily-periods/build-daily-fixed-period.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/month-numbers.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/yearly-periods/yearly-month-value-keys.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/period-id/utils.js","../../../node_modules/@dhis2/multi-calendar-dates/build/es/period-calculation/get-adjacent-fixed-periods/get-adjacent-fixed-periods.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar/calendar-table-cell.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar/calendar-table-days-header.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar/calendar-table.js","../../../node_modules/@dhis2-ui/calendar/build/es/locales/index.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar/navigation-container.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar/calendar-container.js","../../../node_modules/@dhis2-ui/calendar/build/es/calendar-input/calendar-input.js","../../../node_modules/jsbi/tsc-out/jsbi.mjs"],"sourcesContent":["//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport csTranslations from './cs/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport loTranslations from './lo/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport siTranslations from './si/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_UZ_CyrlTranslations from './uz_UZ_Cyrl/translations.json';\nimport uz_UZ_LatnTranslations from './uz_UZ_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('si', namespace, siTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_UZ_Cyrl', namespace, uz_UZ_CyrlTranslations);\ni18n.addResources('uz_UZ_Latn', namespace, uz_UZ_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","// https://lingohub.com/academy/best-practices/rtl-language-list\nconst rtlLocales = new Set(['ar',\n// Arabic\n'arc',\n// Aramaic\n'dv',\n// Divehi\n'fa',\n// Persian\n'ha',\n// Hausa\n'he',\n// Hebrew\n'khw',\n// Khowar\n'ks',\n// Kashmiri\n'ku',\n// Kurdish\n'ps',\n// Pashto\n'ur',\n// Urdu\n'yi' // Yiddish\n]);\n\n/**\n * A hook to return the direction (left-to-right or right-to-left) based on the language\n *\n * if a \"dir\" is passed to the hook, then that will be used as a direction\n * otherwise it will check if the language (localeIdentifier) is a right-to-left language and return rtl\n * otherwise it defaults to \"ltr\"\n * @param dir\n * @param localeIdentifier\n * @returns\n */\nexport const useResolvedDirection = (dir, localeIdentifier) => {\n  if (dir && ['ltr', 'rtl'].includes(dir)) {\n    return dir;\n  }\n  if (!localeIdentifier) {\n    return 'ltr';\n  }\n  const isRtlLocale = rtlLocales.has(localeIdentifier.split('-')[0]);\n  return isRtlLocale ? 'rtl' : 'ltr';\n};","import { DEBUG } from './debug';\nconst INTRINSICS = {};\nconst customUtilInspectFormatters = {\n    ['Temporal.Duration'](depth, options) {\n        const descr = options.stylize(`${this[Symbol.toStringTag]} <${this}>`, 'special');\n        if (depth < 1)\n            return descr;\n        const entries = [];\n        for (const prop of [\n            'years',\n            'months',\n            'weeks',\n            'days',\n            'hours',\n            'minutes',\n            'seconds',\n            'milliseconds',\n            'microseconds',\n            'nanoseconds'\n        ]) {\n            if (this[prop] !== 0)\n                entries.push(`  ${prop}: ${options.stylize(this[prop], 'number')}`);\n        }\n        return descr + ' {\\n' + entries.join(',\\n') + '\\n}';\n    }\n};\nfunction defaultUtilInspectFormatter(depth, options) {\n    return options.stylize(`${this[Symbol.toStringTag]} <${this}>`, 'special');\n}\nexport function MakeIntrinsicClass(Class, name) {\n    Object.defineProperty(Class.prototype, Symbol.toStringTag, {\n        value: name,\n        writable: false,\n        enumerable: false,\n        configurable: true\n    });\n    if (DEBUG) {\n        Object.defineProperty(Class.prototype, Symbol.for('nodejs.util.inspect.custom'), {\n            value: customUtilInspectFormatters[name] || defaultUtilInspectFormatter,\n            writable: false,\n            enumerable: false,\n            configurable: true\n        });\n    }\n    for (const prop of Object.getOwnPropertyNames(Class)) {\n        // we know that `prop` is present, so the descriptor is never undefined\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const desc = Object.getOwnPropertyDescriptor(Class, prop);\n        if (!desc.configurable || !desc.enumerable)\n            continue;\n        desc.enumerable = false;\n        Object.defineProperty(Class, prop, desc);\n    }\n    for (const prop of Object.getOwnPropertyNames(Class.prototype)) {\n        // we know that `prop` is present, so the descriptor is never undefined\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const desc = Object.getOwnPropertyDescriptor(Class.prototype, prop);\n        if (!desc.configurable || !desc.enumerable)\n            continue;\n        desc.enumerable = false;\n        Object.defineProperty(Class.prototype, prop, desc);\n    }\n    DefineIntrinsic(name, Class);\n    DefineIntrinsic(`${name}.prototype`, Class.prototype);\n}\nexport function DefineIntrinsic(name, value) {\n    const key = `%${name}%`;\n    if (INTRINSICS[key] !== undefined)\n        throw new Error(`intrinsic ${name} already exists`);\n    INTRINSICS[key] = value;\n}\nexport function GetIntrinsic(intrinsic) {\n    return INTRINSICS[intrinsic];\n}\n//# sourceMappingURL=intrinsicclass.js.map","// Instant\nexport const EPOCHNANOSECONDS = 'slot-epochNanoSeconds';\n// TimeZone\nexport const TIMEZONE_ID = 'slot-timezone-identifier';\n// DateTime, Date, Time, YearMonth, MonthDay\nexport const ISO_YEAR = 'slot-year';\nexport const ISO_MONTH = 'slot-month';\nexport const ISO_DAY = 'slot-day';\nexport const ISO_HOUR = 'slot-hour';\nexport const ISO_MINUTE = 'slot-minute';\nexport const ISO_SECOND = 'slot-second';\nexport const ISO_MILLISECOND = 'slot-millisecond';\nexport const ISO_MICROSECOND = 'slot-microsecond';\nexport const ISO_NANOSECOND = 'slot-nanosecond';\nexport const CALENDAR = 'slot-calendar';\n// Date, YearMonth, and MonthDay all have the same slots, disambiguation needed:\nexport const DATE_BRAND = 'slot-date-brand';\nexport const YEAR_MONTH_BRAND = 'slot-year-month-brand';\nexport const MONTH_DAY_BRAND = 'slot-month-day-brand';\n// ZonedDateTime\nexport const INSTANT = 'slot-cached-instant';\nexport const TIME_ZONE = 'slot-time-zone';\n// Duration\nexport const YEARS = 'slot-years';\nexport const MONTHS = 'slot-months';\nexport const WEEKS = 'slot-weeks';\nexport const DAYS = 'slot-days';\nexport const HOURS = 'slot-hours';\nexport const MINUTES = 'slot-minutes';\nexport const SECONDS = 'slot-seconds';\nexport const MILLISECONDS = 'slot-milliseconds';\nexport const MICROSECONDS = 'slot-microseconds';\nexport const NANOSECONDS = 'slot-nanoseconds';\n// Calendar\nexport const CALENDAR_ID = 'slot-calendar-identifier';\nconst slots = new WeakMap();\nexport function CreateSlots(container) {\n    slots.set(container, Object.create(null));\n}\nfunction GetSlots(container) {\n    return slots.get(container);\n}\nexport function HasSlot(container, ...ids) {\n    if (!container || 'object' !== typeof container)\n        return false;\n    const myslots = GetSlots(container);\n    return !!myslots && ids.reduce((all, id) => all && id in myslots, true);\n}\nexport function GetSlot(container, id) {\n    const value = GetSlots(container)[id];\n    if (value === undefined)\n        throw new TypeError(`Missing internal slot ${id}`);\n    return value;\n}\nexport function SetSlot(container, id, value) {\n    GetSlots(container)[id] = value;\n}\n//# sourceMappingURL=slots.js.map","const tzComponent = /\\.[-A-Za-z_]|\\.\\.[-A-Za-z._]{1,12}|\\.[-A-Za-z_][-A-Za-z._]{0,12}|[A-Za-z_][-A-Za-z._]{0,13}/;\nconst offsetNoCapture = /(?:[+\\u2212-][0-2][0-9](?::?[0-5][0-9](?::?[0-5][0-9](?:[.,]\\d{1,9})?)?)?)/;\nconst timeZoneID = new RegExp(`(?:(?:${tzComponent.source})(?:\\\\/(?:${tzComponent.source}))*|Etc/GMT[-+]\\\\d{1,2}|${offsetNoCapture.source})`);\nconst calComponent = /[A-Za-z0-9]{3,8}/;\nconst calendarID = new RegExp(`(?:${calComponent.source}(?:-${calComponent.source})*)`);\nconst yearpart = /(?:[+\\u2212-]\\d{6}|\\d{4})/;\nconst monthpart = /(?:0[1-9]|1[0-2])/;\nconst daypart = /(?:0[1-9]|[12]\\d|3[01])/;\nconst datesplit = new RegExp(`(${yearpart.source})(?:-(${monthpart.source})-(${daypart.source})|(${monthpart.source})(${daypart.source}))`);\nconst timesplit = /(\\d{2})(?::(\\d{2})(?::(\\d{2})(?:[.,](\\d{1,9}))?)?|(\\d{2})(?:(\\d{2})(?:[.,](\\d{1,9}))?)?)?/;\nexport const offset = /([+\\u2212-])([01][0-9]|2[0-3])(?::?([0-5][0-9])(?::?([0-5][0-9])(?:[.,](\\d{1,9}))?)?)?/;\nconst zonesplit = new RegExp(`(?:([zZ])|(?:${offset.source})?)(?:\\\\[(${timeZoneID.source})\\\\])?`);\nconst calendar = new RegExp(`\\\\[u-ca=(${calendarID.source})\\\\]`);\nexport const zoneddatetime = new RegExp(`^${datesplit.source}(?:(?:T|\\\\s+)${timesplit.source})?${zonesplit.source}(?:${calendar.source})?$`, 'i');\nexport const time = new RegExp(`^T?${timesplit.source}(?:${zonesplit.source})?(?:${calendar.source})?$`, 'i');\n// The short forms of YearMonth and MonthDay are only for the ISO calendar.\n// Non-ISO calendar YearMonth and MonthDay have to parse as a Temporal.PlainDate,\n// with the reference fields.\n// YYYYMM forbidden by ISO 8601 because ambiguous with YYMMDD, but allowed by\n// RFC 3339 and we don't allow 2-digit years, so we allow it.\n// Not ambiguous with HHMMSS because that requires a 'T' prefix\nexport const yearmonth = new RegExp(`^(${yearpart.source})-?(${monthpart.source})$`);\nexport const monthday = new RegExp(`^(?:--)?(${monthpart.source})-?(${daypart.source})$`);\nconst fraction = /(\\d+)(?:[.,](\\d{1,9}))?/;\nconst durationDate = /(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?/;\nconst durationTime = new RegExp(`(?:${fraction.source}H)?(?:${fraction.source}M)?(?:${fraction.source}S)?`);\nexport const duration = new RegExp(`^([+\\u2212-])?P${durationDate.source}(?:T(?!$)${durationTime.source})?$`, 'i');\n//# sourceMappingURL=regex.js.map","const ArrayIncludes = Array.prototype.includes;\nconst ArrayPrototypePush = Array.prototype.push;\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst MathMin = Math.min;\nconst MathMax = Math.max;\nconst MathAbs = Math.abs;\nconst MathFloor = Math.floor;\nconst MathSign = Math.sign;\nconst MathTrunc = Math.trunc;\nconst NumberIsNaN = Number.isNaN;\nconst NumberIsFinite = Number.isFinite;\nconst NumberCtor = Number;\nconst StringCtor = String;\nconst NumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nconst ObjectAssign = Object.assign;\nconst ObjectCreate = Object.create;\nconst ObjectDefineProperty = Object.defineProperty;\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nconst ObjectIs = Object.is;\nconst ReflectApply = Reflect.apply;\nimport { DEBUG } from './debug';\nimport JSBI from 'jsbi';\nimport { GetIntrinsic } from './intrinsicclass';\nimport { CreateSlots, GetSlot, HasSlot, SetSlot, EPOCHNANOSECONDS, TIMEZONE_ID, CALENDAR_ID, INSTANT, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, DATE_BRAND, YEAR_MONTH_BRAND, MONTH_DAY_BRAND, TIME_ZONE, CALENDAR, YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS } from './slots';\nexport const ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst SIXTY = JSBI.BigInt(60);\nexport const THOUSAND = JSBI.BigInt(1e3);\nexport const MILLION = JSBI.BigInt(1e6);\nexport const BILLION = JSBI.BigInt(1e9);\nconst NEGATIVE_ONE = JSBI.BigInt(-1);\nconst DAY_SECONDS = 86400;\nconst DAY_NANOS = JSBI.multiply(JSBI.BigInt(DAY_SECONDS), BILLION);\nconst NS_MIN = JSBI.multiply(JSBI.BigInt(-86400), JSBI.BigInt(1e17));\nconst NS_MAX = JSBI.multiply(JSBI.BigInt(86400), JSBI.BigInt(1e17));\nconst YEAR_MIN = -271821;\nconst YEAR_MAX = 275760;\nconst BEFORE_FIRST_OFFSET_TRANSITION = JSBI.multiply(JSBI.BigInt(-388152), JSBI.BigInt(1e13)); // 1847-01-01T00:00:00Z\nconst ABOUT_TEN_YEARS_NANOS = JSBI.multiply(DAY_NANOS, JSBI.BigInt(366 * 10));\nconst ABOUT_ONE_YEAR_NANOS = JSBI.multiply(DAY_NANOS, JSBI.BigInt(366 * 1));\nconst TWO_WEEKS_NANOS = JSBI.multiply(DAY_NANOS, JSBI.BigInt(2 * 7));\nconst BUILTIN_CALENDAR_IDS = [\n    'iso8601',\n    'hebrew',\n    'islamic',\n    'islamic-umalqura',\n    'islamic-tbla',\n    'islamic-civil',\n    'islamic-rgsa',\n    'islamicc',\n    'persian',\n    'ethiopic',\n    'ethioaa',\n    'coptic',\n    'chinese',\n    'dangi',\n    'roc',\n    'indian',\n    'buddhist',\n    'japanese',\n    'gregory'\n];\nfunction IsInteger(value) {\n    if (typeof value !== 'number' || !NumberIsFinite(value))\n        return false;\n    const abs = MathAbs(value);\n    return MathFloor(abs) === abs;\n}\nexport function IsObject(value) {\n    return (typeof value === 'object' && value !== null) || typeof value === 'function';\n}\nexport function ToNumber(value) {\n    if (typeof value === 'bigint')\n        throw new TypeError('Cannot convert BigInt to number');\n    return NumberCtor(value);\n}\nfunction ToInteger(value) {\n    const num = ToNumber(value);\n    if (NumberIsNaN(num))\n        return 0;\n    const integer = MathTrunc(num);\n    if (num === 0)\n        return 0;\n    return integer;\n}\nexport function ToString(value) {\n    if (typeof value === 'symbol') {\n        throw new TypeError('Cannot convert a Symbol value to a String');\n    }\n    return StringCtor(value);\n}\nexport function ToIntegerThrowOnInfinity(value) {\n    const integer = ToInteger(value);\n    if (!NumberIsFinite(integer)) {\n        throw new RangeError('infinity is out of range');\n    }\n    return integer;\n}\nfunction ToPositiveInteger(valueParam, property) {\n    const value = ToInteger(valueParam);\n    if (!NumberIsFinite(value)) {\n        throw new RangeError('infinity is out of range');\n    }\n    if (value < 1) {\n        if (property !== undefined) {\n            throw new RangeError(`property '${property}' cannot be a a number less than one`);\n        }\n        throw new RangeError('Cannot convert a number less than one to a positive integer');\n    }\n    return value;\n}\nexport function ToIntegerWithoutRounding(valueParam) {\n    const value = ToNumber(valueParam);\n    if (NumberIsNaN(value))\n        return 0;\n    if (!NumberIsFinite(value)) {\n        throw new RangeError('infinity is out of range');\n    }\n    if (!IsInteger(value)) {\n        throw new RangeError(`unsupported fractional value ${value}`);\n    }\n    return ToInteger(value); // ℝ(value) in spec text; converts -0 to 0\n}\nfunction divmod(x, y) {\n    const quotient = JSBI.divide(x, y);\n    const remainder = JSBI.remainder(x, y);\n    return { quotient, remainder };\n}\nfunction abs(x) {\n    if (JSBI.lessThan(x, ZERO))\n        return JSBI.multiply(x, NEGATIVE_ONE);\n    return x;\n}\nexport function ArrayPush(arr, ...newItem) {\n    ArrayPrototypePush.apply(arr, newItem);\n    return arr;\n}\nconst BUILTIN_CASTS = new Map([\n    ['year', ToIntegerThrowOnInfinity],\n    ['month', ToPositiveInteger],\n    ['monthCode', ToString],\n    ['day', ToPositiveInteger],\n    ['hour', ToIntegerThrowOnInfinity],\n    ['minute', ToIntegerThrowOnInfinity],\n    ['second', ToIntegerThrowOnInfinity],\n    ['millisecond', ToIntegerThrowOnInfinity],\n    ['microsecond', ToIntegerThrowOnInfinity],\n    ['nanosecond', ToIntegerThrowOnInfinity],\n    ['years', ToIntegerWithoutRounding],\n    ['months', ToIntegerWithoutRounding],\n    ['weeks', ToIntegerWithoutRounding],\n    ['days', ToIntegerWithoutRounding],\n    ['hours', ToIntegerWithoutRounding],\n    ['minutes', ToIntegerWithoutRounding],\n    ['seconds', ToIntegerWithoutRounding],\n    ['milliseconds', ToIntegerWithoutRounding],\n    ['microseconds', ToIntegerWithoutRounding],\n    ['nanoseconds', ToIntegerWithoutRounding],\n    ['era', ToString],\n    ['eraYear', ToInteger],\n    ['offset', ToString]\n]);\nconst BUILTIN_DEFAULTS = new Map([\n    ['hour', 0],\n    ['minute', 0],\n    ['second', 0],\n    ['millisecond', 0],\n    ['microsecond', 0],\n    ['nanosecond', 0]\n]);\n// each item is [plural, singular, category]\nconst SINGULAR_PLURAL_UNITS = [\n    ['years', 'year', 'date'],\n    ['months', 'month', 'date'],\n    ['weeks', 'week', 'date'],\n    ['days', 'day', 'date'],\n    ['hours', 'hour', 'time'],\n    ['minutes', 'minute', 'time'],\n    ['seconds', 'second', 'time'],\n    ['milliseconds', 'millisecond', 'time'],\n    ['microseconds', 'microsecond', 'time'],\n    ['nanoseconds', 'nanosecond', 'time']\n];\nconst SINGULAR_FOR = new Map(SINGULAR_PLURAL_UNITS.map((e) => [e[0], e[1]]));\nconst PLURAL_FOR = new Map(SINGULAR_PLURAL_UNITS.map(([p, s]) => [s, p]));\nconst UNITS_DESCENDING = SINGULAR_PLURAL_UNITS.map(([, s]) => s);\nconst DURATION_FIELDS = Array.from(SINGULAR_FOR.keys()).sort();\nimport * as PARSE from './regex';\nconst IntlDateTimeFormatEnUsCache = new Map();\nfunction getIntlDateTimeFormatEnUsForTimeZone(timeZoneIdentifier) {\n    let instance = IntlDateTimeFormatEnUsCache.get(timeZoneIdentifier);\n    if (instance === undefined) {\n        instance = new IntlDateTimeFormat('en-us', {\n            timeZone: StringCtor(timeZoneIdentifier),\n            hour12: false,\n            era: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n        IntlDateTimeFormatEnUsCache.set(timeZoneIdentifier, instance);\n    }\n    return instance;\n}\nexport function IsTemporalInstant(item) {\n    return HasSlot(item, EPOCHNANOSECONDS) && !HasSlot(item, TIME_ZONE, CALENDAR);\n}\nexport function IsTemporalTimeZone(item) {\n    return HasSlot(item, TIMEZONE_ID);\n}\nexport function IsTemporalCalendar(item) {\n    return HasSlot(item, CALENDAR_ID);\n}\nexport function IsTemporalDuration(item) {\n    return HasSlot(item, YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS);\n}\nexport function IsTemporalDate(item) {\n    return HasSlot(item, DATE_BRAND);\n}\nexport function IsTemporalTime(item) {\n    return (HasSlot(item, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND) &&\n        !HasSlot(item, ISO_YEAR, ISO_MONTH, ISO_DAY));\n}\nexport function IsTemporalDateTime(item) {\n    return HasSlot(item, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND);\n}\nexport function IsTemporalYearMonth(item) {\n    return HasSlot(item, YEAR_MONTH_BRAND);\n}\nexport function IsTemporalMonthDay(item) {\n    return HasSlot(item, MONTH_DAY_BRAND);\n}\nexport function IsTemporalZonedDateTime(item) {\n    return HasSlot(item, EPOCHNANOSECONDS, TIME_ZONE, CALENDAR);\n}\nexport function RejectObjectWithCalendarOrTimeZone(item) {\n    if (HasSlot(item, CALENDAR) || HasSlot(item, TIME_ZONE)) {\n        throw new TypeError('with() does not support a calendar or timeZone property');\n    }\n    if (item.calendar !== undefined) {\n        throw new TypeError('with() does not support a calendar property');\n    }\n    if (item.timeZone !== undefined) {\n        throw new TypeError('with() does not support a timeZone property');\n    }\n}\nfunction ParseTemporalTimeZone(stringIdent) {\n    let { ianaName, offset, z } = ParseTemporalTimeZoneString(stringIdent);\n    if (ianaName)\n        return ianaName;\n    if (z)\n        return 'UTC';\n    return offset; // if !ianaName && !z then offset must be present\n}\nfunction FormatCalendarAnnotation(id, showCalendar) {\n    if (showCalendar === 'never')\n        return '';\n    if (showCalendar === 'auto' && id === 'iso8601')\n        return '';\n    return `[u-ca=${id}]`;\n}\nfunction ParseISODateTime(isoString) {\n    // ZDT is the superset of fields for every other Temporal type\n    const match = PARSE.zoneddatetime.exec(isoString);\n    if (!match)\n        throw new RangeError(`invalid ISO 8601 string: ${isoString}`);\n    let yearString = match[1];\n    if (yearString[0] === '\\u2212')\n        yearString = `-${yearString.slice(1)}`;\n    if (yearString === '-000000')\n        throw new RangeError(`invalid ISO 8601 string: ${isoString}`);\n    const year = ToInteger(yearString);\n    const month = ToInteger(match[2] || match[4]);\n    const day = ToInteger(match[3] || match[5]);\n    const hour = ToInteger(match[6]);\n    const hasTime = match[6] !== undefined;\n    const minute = ToInteger(match[7] || match[10]);\n    let second = ToInteger(match[8] || match[11]);\n    if (second === 60)\n        second = 59;\n    const fraction = (match[9] || match[12]) + '000000000';\n    const millisecond = ToInteger(fraction.slice(0, 3));\n    const microsecond = ToInteger(fraction.slice(3, 6));\n    const nanosecond = ToInteger(fraction.slice(6, 9));\n    let offset;\n    let z = false;\n    if (match[13]) {\n        offset = undefined;\n        z = true;\n    }\n    else if (match[14] && match[15]) {\n        const offsetSign = match[14] === '-' || match[14] === '\\u2212' ? '-' : '+';\n        const offsetHours = match[15] || '00';\n        const offsetMinutes = match[16] || '00';\n        const offsetSeconds = match[17] || '00';\n        let offsetFraction = match[18] || '0';\n        offset = `${offsetSign}${offsetHours}:${offsetMinutes}`;\n        if (+offsetFraction) {\n            while (offsetFraction.endsWith('0'))\n                offsetFraction = offsetFraction.slice(0, -1);\n            offset += `:${offsetSeconds}.${offsetFraction}`;\n        }\n        else if (+offsetSeconds) {\n            offset += `:${offsetSeconds}`;\n        }\n        if (offset === '-00:00')\n            offset = '+00:00';\n    }\n    let ianaName = match[19];\n    if (ianaName) {\n        try {\n            // Canonicalize name if it is an IANA link name or is capitalized wrong\n            ianaName = GetCanonicalTimeZoneIdentifier(ianaName).toString();\n        }\n        catch {\n            // Not an IANA name, may be a custom ID, pass through unchanged\n        }\n    }\n    const calendar = match[20];\n    RejectDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    return {\n        year,\n        month,\n        day,\n        hasTime,\n        hour,\n        minute,\n        second,\n        millisecond,\n        microsecond,\n        nanosecond,\n        ianaName,\n        offset,\n        z,\n        calendar\n    };\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalInstantString(isoString) {\n    const result = ParseISODateTime(isoString);\n    if (!result.z && !result.offset)\n        throw new RangeError('Temporal.Instant requires a time zone offset');\n    return result;\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalZonedDateTimeString(isoString) {\n    const result = ParseISODateTime(isoString);\n    if (!result.ianaName)\n        throw new RangeError('Temporal.ZonedDateTime requires a time zone ID in brackets');\n    return result;\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalDateTimeString(isoString) {\n    return ParseISODateTime(isoString);\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalDateString(isoString) {\n    return ParseISODateTime(isoString);\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalTimeString(isoString) {\n    const match = PARSE.time.exec(isoString);\n    let hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (match) {\n        hour = ToInteger(match[1]);\n        minute = ToInteger(match[2] || match[5]);\n        second = ToInteger(match[3] || match[6]);\n        if (second === 60)\n            second = 59;\n        const fraction = (match[4] || match[7]) + '000000000';\n        millisecond = ToInteger(fraction.slice(0, 3));\n        microsecond = ToInteger(fraction.slice(3, 6));\n        nanosecond = ToInteger(fraction.slice(6, 9));\n        calendar = match[15];\n    }\n    else {\n        let z, hasTime;\n        ({ hasTime, hour, minute, second, millisecond, microsecond, nanosecond, calendar, z } =\n            ParseISODateTime(isoString));\n        if (!hasTime)\n            throw new RangeError(`time is missing in string: ${isoString}`);\n        if (z)\n            throw new RangeError('Z designator not supported for PlainTime');\n    }\n    // if it's a date-time string, OK\n    if (/[tT ][0-9][0-9]/.test(isoString)) {\n        return { hour, minute, second, millisecond, microsecond, nanosecond, calendar };\n    }\n    // slow but non-grammar-dependent way to ensure that time-only strings that\n    // are also valid PlainMonthDay and PlainYearMonth throw. corresponds to\n    // assertion in spec text\n    try {\n        const { month, day } = ParseTemporalMonthDayString(isoString);\n        RejectISODate(1972, month, day);\n    }\n    catch {\n        try {\n            const { year, month } = ParseTemporalYearMonthString(isoString);\n            RejectISODate(year, month, 1);\n        }\n        catch {\n            return { hour, minute, second, millisecond, microsecond, nanosecond, calendar };\n        }\n    }\n    throw new RangeError(`invalid ISO 8601 time-only string ${isoString}; may need a T prefix`);\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalYearMonthString(isoString) {\n    const match = PARSE.yearmonth.exec(isoString);\n    let year, month, calendar, referenceISODay;\n    if (match) {\n        let yearString = match[1];\n        if (yearString[0] === '\\u2212')\n            yearString = `-${yearString.slice(1)}`;\n        if (yearString === '-000000')\n            throw new RangeError(`invalid ISO 8601 string: ${isoString}`);\n        year = ToInteger(yearString);\n        month = ToInteger(match[2]);\n        calendar = match[3];\n    }\n    else {\n        let z;\n        ({ year, month, calendar, day: referenceISODay, z } = ParseISODateTime(isoString));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainYearMonth');\n    }\n    return { year, month, calendar, referenceISODay };\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalMonthDayString(isoString) {\n    const match = PARSE.monthday.exec(isoString);\n    let month, day, calendar, referenceISOYear;\n    if (match) {\n        month = ToInteger(match[1]);\n        day = ToInteger(match[2]);\n    }\n    else {\n        let z;\n        ({ month, day, calendar, year: referenceISOYear, z } = ParseISODateTime(isoString));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainMonthDay');\n    }\n    return { month, day, calendar, referenceISOYear };\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalTimeZoneString(stringIdent) {\n    try {\n        let canonicalIdent = GetCanonicalTimeZoneIdentifier(stringIdent);\n        if (canonicalIdent)\n            return { ianaName: canonicalIdent.toString() };\n    }\n    catch {\n        // fall through\n    }\n    try {\n        // Try parsing ISO string instead\n        const result = ParseISODateTime(stringIdent);\n        if (result.z || result.offset || result.ianaName) {\n            return result;\n        }\n    }\n    catch {\n        // fall through\n    }\n    throw new RangeError(`Invalid time zone: ${stringIdent}`);\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalDurationString(isoString) {\n    const match = PARSE.duration.exec(isoString);\n    if (!match)\n        throw new RangeError(`invalid duration: ${isoString}`);\n    if (match.slice(2).every((element) => element === undefined)) {\n        throw new RangeError(`invalid duration: ${isoString}`);\n    }\n    const sign = match[1] === '-' || match[1] === '\\u2212' ? -1 : 1;\n    const years = ToInteger(match[2]) * sign;\n    const months = ToInteger(match[3]) * sign;\n    const weeks = ToInteger(match[4]) * sign;\n    const days = ToInteger(match[5]) * sign;\n    const hours = ToInteger(match[6]) * sign;\n    let fHours = match[7];\n    let minutes = ToInteger(match[8]) * sign;\n    let fMinutes = match[9];\n    let seconds = ToInteger(match[10]) * sign;\n    const fSeconds = match[11] + '000000000';\n    let milliseconds = ToInteger(fSeconds.slice(0, 3)) * sign;\n    let microseconds = ToInteger(fSeconds.slice(3, 6)) * sign;\n    let nanoseconds = ToInteger(fSeconds.slice(6, 9)) * sign;\n    fHours = fHours ? (sign * ToInteger(fHours)) / 10 ** fHours.length : 0;\n    fMinutes = fMinutes ? (sign * ToInteger(fMinutes)) / 10 ** fMinutes.length : 0;\n    ({ minutes, seconds, milliseconds, microseconds, nanoseconds } = DurationHandleFractions(fHours, minutes, fMinutes, seconds, milliseconds, microseconds, nanoseconds));\n    RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\n// ts-prune-ignore-next TODO: remove if test/validStrings is converted to TS.\nexport function ParseTemporalInstant(isoString) {\n    let { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offset, z } = ParseTemporalInstantString(isoString);\n    if (!z && !offset)\n        throw new RangeError('Temporal.Instant requires a time zone offset');\n    // At least one of z or offset is defined, but TS doesn't seem to understand\n    // that we only use offset if z is not defined (and thus offset must be defined).\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const offsetNs = z ? 0 : ParseTimeZoneOffsetString(offset);\n    ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond - offsetNs));\n    const epochNs = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (epochNs === null)\n        throw new RangeError('DateTime outside of supported range');\n    return epochNs;\n}\nexport function RegulateISODate(yearParam, monthParam, dayParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    switch (overflow) {\n        case 'reject':\n            RejectISODate(year, month, day);\n            break;\n        case 'constrain':\n            ({ year, month, day } = ConstrainISODate(year, month, day));\n            break;\n    }\n    return { year, month, day };\n}\nexport function RegulateTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, overflow) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    switch (overflow) {\n        case 'reject':\n            RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n            break;\n        case 'constrain':\n            ({ hour, minute, second, millisecond, microsecond, nanosecond } = ConstrainTime(hour, minute, second, millisecond, microsecond, nanosecond));\n            break;\n    }\n    return { hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RegulateISOYearMonth(yearParam, monthParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    const referenceISODay = 1;\n    switch (overflow) {\n        case 'reject':\n            RejectISODate(year, month, referenceISODay);\n            break;\n        case 'constrain':\n            ({ year, month } = ConstrainISODate(year, month));\n            break;\n    }\n    return { year, month };\n}\nfunction DurationHandleFractions(fHoursParam, minutesParam, fMinutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam) {\n    let fHours = fHoursParam;\n    let minutes = minutesParam;\n    let fMinutes = fMinutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = nanosecondsParam;\n    if (fHours !== 0) {\n        [minutes, fMinutes, seconds, milliseconds, microseconds, nanoseconds].forEach((val) => {\n            if (val !== 0)\n                throw new RangeError('only the smallest unit can be fractional');\n        });\n        const mins = fHours * 60;\n        minutes = MathTrunc(mins);\n        fMinutes = mins % 1;\n    }\n    if (fMinutes !== 0) {\n        [seconds, milliseconds, microseconds, nanoseconds].forEach((val) => {\n            if (val !== 0)\n                throw new RangeError('only the smallest unit can be fractional');\n        });\n        const secs = fMinutes * 60;\n        seconds = MathTrunc(secs);\n        const fSeconds = secs % 1;\n        if (fSeconds !== 0) {\n            const mils = fSeconds * 1000;\n            milliseconds = MathTrunc(mils);\n            const fMilliseconds = mils % 1;\n            if (fMilliseconds !== 0) {\n                const mics = fMilliseconds * 1000;\n                microseconds = MathTrunc(mics);\n                const fMicroseconds = mics % 1;\n                if (fMicroseconds !== 0) {\n                    const nans = fMicroseconds * 1000;\n                    nanoseconds = MathTrunc(nans);\n                }\n            }\n        }\n    }\n    return { minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction ToTemporalDurationRecord(item) {\n    if (!IsObject(item)) {\n        return ParseTemporalDurationString(ToString(item));\n    }\n    if (IsTemporalDuration(item)) {\n        return {\n            years: GetSlot(item, YEARS),\n            months: GetSlot(item, MONTHS),\n            weeks: GetSlot(item, WEEKS),\n            days: GetSlot(item, DAYS),\n            hours: GetSlot(item, HOURS),\n            minutes: GetSlot(item, MINUTES),\n            seconds: GetSlot(item, SECONDS),\n            milliseconds: GetSlot(item, MILLISECONDS),\n            microseconds: GetSlot(item, MICROSECONDS),\n            nanoseconds: GetSlot(item, NANOSECONDS)\n        };\n    }\n    const result = {\n        years: 0,\n        months: 0,\n        weeks: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        milliseconds: 0,\n        microseconds: 0,\n        nanoseconds: 0\n    };\n    let partial = ToTemporalPartialDurationRecord(item);\n    for (const property of DURATION_FIELDS) {\n        const value = partial[property];\n        if (value !== undefined) {\n            result[property] = value;\n        }\n    }\n    let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = result;\n    RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction ToTemporalPartialDurationRecord(temporalDurationLike) {\n    if (!IsObject(temporalDurationLike)) {\n        throw new TypeError('invalid duration-like');\n    }\n    const result = {\n        years: undefined,\n        months: undefined,\n        weeks: undefined,\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined,\n        milliseconds: undefined,\n        microseconds: undefined,\n        nanoseconds: undefined\n    };\n    let any = false;\n    for (const property of DURATION_FIELDS) {\n        const value = temporalDurationLike[property];\n        if (value !== undefined) {\n            any = true;\n            result[property] = ToIntegerWithoutRounding(value);\n        }\n    }\n    if (!any) {\n        throw new TypeError('invalid duration-like');\n    }\n    return result;\n}\nfunction ToLimitedTemporalDuration(item, disallowedProperties) {\n    let record = ToTemporalDurationRecord(item);\n    for (const property of disallowedProperties) {\n        if (record[property] !== 0) {\n            throw new RangeError(`Duration field ${property} not supported by Temporal.Instant. Try Temporal.ZonedDateTime instead.`);\n        }\n    }\n    return record;\n}\nexport function ToTemporalOverflow(options) {\n    if (options === undefined)\n        return 'constrain';\n    return GetOption(options, 'overflow', ['constrain', 'reject'], 'constrain');\n}\nexport function ToTemporalDisambiguation(options) {\n    if (options === undefined)\n        return 'compatible';\n    return GetOption(options, 'disambiguation', ['compatible', 'earlier', 'later', 'reject'], 'compatible');\n}\nexport function ToTemporalRoundingMode(options, fallback) {\n    return GetOption(options, 'roundingMode', ['ceil', 'floor', 'trunc', 'halfExpand'], fallback);\n}\nfunction NegateTemporalRoundingMode(roundingMode) {\n    switch (roundingMode) {\n        case 'ceil':\n            return 'floor';\n        case 'floor':\n            return 'ceil';\n        default:\n            return roundingMode;\n    }\n}\nexport function ToTemporalOffset(options, fallback) {\n    if (options === undefined)\n        return fallback;\n    return GetOption(options, 'offset', ['prefer', 'use', 'ignore', 'reject'], fallback);\n}\nexport function ToShowCalendarOption(options) {\n    return GetOption(options, 'calendarName', ['auto', 'always', 'never'], 'auto');\n}\nexport function ToShowTimeZoneNameOption(options) {\n    return GetOption(options, 'timeZoneName', ['auto', 'never'], 'auto');\n}\nexport function ToShowOffsetOption(options) {\n    return GetOption(options, 'offset', ['auto', 'never'], 'auto');\n}\nexport function ToTemporalRoundingIncrement(options, dividend, inclusive) {\n    let maximum = Infinity;\n    if (dividend !== undefined)\n        maximum = dividend;\n    if (!inclusive && dividend !== undefined)\n        maximum = dividend > 1 ? dividend - 1 : 1;\n    const increment = GetNumberOption(options, 'roundingIncrement', 1, maximum, 1);\n    if (dividend !== undefined && dividend % increment !== 0) {\n        throw new RangeError(`Rounding increment must divide evenly into ${dividend}`);\n    }\n    return increment;\n}\nexport function ToTemporalDateTimeRoundingIncrement(options, smallestUnit) {\n    const maximumIncrements = {\n        year: undefined,\n        month: undefined,\n        week: undefined,\n        day: undefined,\n        hour: 24,\n        minute: 60,\n        second: 60,\n        millisecond: 1000,\n        microsecond: 1000,\n        nanosecond: 1000\n    };\n    return ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n}\nexport function ToSecondsStringPrecision(options) {\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'time', undefined);\n    if (smallestUnit === 'hour') {\n        const ALLOWED_UNITS = SINGULAR_PLURAL_UNITS.reduce((allowed, [p, s, c]) => {\n            // Weirdly, local type inference seems to understand the types of s and p, but tsc still complains.\n            // Maybe this is fixed in later TS versions?\n            if (c === 'time' && s !== 'hour') {\n                allowed.push(s, p);\n            }\n            return allowed;\n        }, []);\n        throw new RangeError(`smallestUnit must be one of ${ALLOWED_UNITS.join(', ')}, not ${smallestUnit}`);\n    }\n    switch (smallestUnit) {\n        case 'minute':\n            return { precision: 'minute', unit: 'minute', increment: 1 };\n        case 'second':\n            return { precision: 0, unit: 'second', increment: 1 };\n        case 'millisecond':\n            return { precision: 3, unit: 'millisecond', increment: 1 };\n        case 'microsecond':\n            return { precision: 6, unit: 'microsecond', increment: 1 };\n        case 'nanosecond':\n            return { precision: 9, unit: 'nanosecond', increment: 1 };\n        default: // fall through if option not given\n    }\n    let digits = options.fractionalSecondDigits;\n    if (digits === undefined)\n        digits = 'auto';\n    if (typeof digits !== 'number') {\n        const stringDigits = ToString(digits);\n        if (stringDigits === 'auto')\n            return { precision: 'auto', unit: 'nanosecond', increment: 1 };\n        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${stringDigits}`);\n    }\n    if (NumberIsNaN(digits) || digits < 0 || digits > 9) {\n        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${digits}`);\n    }\n    const precision = MathFloor(digits);\n    switch (precision) {\n        case 0:\n            return { precision, unit: 'second', increment: 1 };\n        case 1:\n        case 2:\n        case 3:\n            return { precision, unit: 'millisecond', increment: 10 ** (3 - precision) };\n        case 4:\n        case 5:\n        case 6:\n            return { precision, unit: 'microsecond', increment: 10 ** (6 - precision) };\n        case 7:\n        case 8:\n        case 9:\n            return { precision, unit: 'nanosecond', increment: 10 ** (9 - precision) };\n        default:\n            throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${digits}`);\n    }\n}\nexport const REQUIRED = Symbol('~required~');\n// This signature of the function is NOT used in type-checking, so restricting\n// the default value via generic binding like the other overloads isn't\n// necessary.\nexport function GetTemporalUnit(options, key, unitGroup, requiredOrDefault, extraValues = []) {\n    const allowedSingular = [];\n    for (const [, singular, category] of SINGULAR_PLURAL_UNITS) {\n        if (unitGroup === 'datetime' || unitGroup === category) {\n            allowedSingular.push(singular);\n        }\n    }\n    allowedSingular.push(...extraValues);\n    let defaultVal = requiredOrDefault;\n    if (defaultVal === REQUIRED) {\n        defaultVal = undefined;\n    }\n    else if (defaultVal !== undefined) {\n        allowedSingular.push(defaultVal);\n    }\n    const allowedValues = [\n        ...allowedSingular\n    ];\n    for (const singular of allowedSingular) {\n        const plural = PLURAL_FOR.get(singular);\n        if (plural !== undefined)\n            allowedValues.push(plural);\n    }\n    let retval = GetOption(options, key, allowedValues, defaultVal);\n    if (retval === undefined && requiredOrDefault === REQUIRED) {\n        throw new RangeError(`${key} is required`);\n    }\n    // Coerce any plural units into their singular form\n    if (SINGULAR_FOR.has(retval)) {\n        // We just has-checked this, but tsc doesn't understand that.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return SINGULAR_FOR.get(retval);\n    }\n    return retval;\n}\nexport function ToRelativeTemporalObject(options) {\n    const relativeTo = options.relativeTo;\n    if (relativeTo === undefined)\n        return relativeTo;\n    let offsetBehaviour = 'option';\n    let matchMinutes = false;\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, timeZone, offset;\n    if (IsObject(relativeTo)) {\n        if (IsTemporalZonedDateTime(relativeTo) || IsTemporalDate(relativeTo))\n            return relativeTo;\n        if (IsTemporalDateTime(relativeTo))\n            return TemporalDateTimeToDate(relativeTo);\n        calendar = GetTemporalCalendarWithISODefault(relativeTo);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fields = PrepareTemporalFields(relativeTo, fieldNames, []);\n        const dateOptions = ObjectCreate(null);\n        dateOptions.overflow = 'constrain';\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, dateOptions));\n        // The `offset` and `timeZone` properties only exist on ZonedDateTime (or\n        // ZonedDateTimeLike-property bags). The assertions below are used to avoid\n        // TS errors while not diverging runtime code from proposal-temporal.\n        offset = relativeTo.offset;\n        if (offset === undefined)\n            offsetBehaviour = 'wall';\n        timeZone = relativeTo.timeZone;\n    }\n    else {\n        let ianaName, z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, ianaName, offset, z } =\n            ParseISODateTime(ToString(relativeTo)));\n        if (ianaName)\n            timeZone = ianaName;\n        if (z) {\n            offsetBehaviour = 'exact';\n        }\n        else if (!offset) {\n            offsetBehaviour = 'wall';\n        }\n        if (!calendar)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n        matchMinutes = true;\n    }\n    if (timeZone !== undefined) {\n        timeZone = ToTemporalTimeZone(timeZone);\n        let offsetNs = 0;\n        if (offsetBehaviour === 'option')\n            offsetNs = ParseTimeZoneOffsetString(ToString(offset));\n        const epochNanoseconds = InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, 'compatible', 'reject', matchMinutes);\n        return CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n    }\n    return CreateTemporalDate(year, month, day, calendar);\n}\nexport function DefaultTemporalLargestUnit(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds) {\n    for (const [prop, v] of [\n        ['years', years],\n        ['months', months],\n        ['weeks', weeks],\n        ['days', days],\n        ['hours', hours],\n        ['minutes', minutes],\n        ['seconds', seconds],\n        ['milliseconds', milliseconds],\n        ['microseconds', microseconds],\n        ['nanoseconds', nanoseconds]\n    ]) {\n        if (v !== 0) {\n            // All the above keys are definitely in SINGULAR_FOR\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return SINGULAR_FOR.get(prop);\n        }\n    }\n    return 'nanosecond';\n}\nexport function LargerOfTwoTemporalUnits(unit1, unit2) {\n    if (UNITS_DESCENDING.indexOf(unit1) > UNITS_DESCENDING.indexOf(unit2))\n        return unit2;\n    return unit1;\n}\nfunction MergeLargestUnitOption(optionsParam, largestUnit) {\n    let options = optionsParam;\n    if (options === undefined)\n        options = ObjectCreate(null);\n    return ObjectAssign(ObjectCreate(null), options, { largestUnit });\n}\nexport function PrepareTemporalFields(bag, fields, requiredFields, { emptySourceErrorMessage } = { emptySourceErrorMessage: 'no supported properties found' }) {\n    const result = ObjectCreate(null);\n    let any = false;\n    for (const property of fields) {\n        let value = bag[property];\n        if (value !== undefined) {\n            any = true;\n            if (BUILTIN_CASTS.has(property)) {\n                // We just has-checked this map access, so there will definitely be a\n                // value.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                value = BUILTIN_CASTS.get(property)(value);\n            }\n            result[property] = value;\n        }\n        else if (requiredFields !== 'partial') {\n            // TODO: using .call in this way is not correctly type-checked by tsc.\n            // We might need a type-safe Call wrapper?\n            if (ArrayIncludes.call(requiredFields, property)) {\n                throw new TypeError(`required property '${property}' missing or undefined`);\n            }\n            value = BUILTIN_DEFAULTS.get(property);\n            result[property] = value;\n        }\n    }\n    if (requiredFields === 'partial' && !any) {\n        throw new TypeError(emptySourceErrorMessage);\n    }\n    if ((result.era === undefined) !== (result.eraYear === undefined)) {\n        throw new RangeError(\"properties 'era' and 'eraYear' must be provided together\");\n    }\n    return result;\n}\nexport function ToTemporalTimeRecord(bag, completeness = 'complete') {\n    // NOTE: Field order here is important.\n    const fields = ['hour', 'microsecond', 'millisecond', 'minute', 'nanosecond', 'second'];\n    const partial = PrepareTemporalFields(bag, fields, 'partial', { emptySourceErrorMessage: 'invalid time-like' });\n    const result = {};\n    for (const field of fields) {\n        const valueDesc = ObjectGetOwnPropertyDescriptor(partial, field);\n        if (valueDesc !== undefined) {\n            result[field] = valueDesc.value;\n        }\n        else if (completeness === 'complete') {\n            result[field] = 0;\n        }\n    }\n    return result;\n}\nexport function ToTemporalDate(itemParam, options) {\n    let item = itemParam;\n    if (IsObject(item)) {\n        if (IsTemporalDate(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            ToTemporalOverflow(options); // validate and ignore\n            item = BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDateTime(item)) {\n            ToTemporalOverflow(options); // validate and ignore\n            return CreateTemporalDate(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR));\n        }\n        const calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const fields = PrepareTemporalFields(item, fieldNames, []);\n        return CalendarDateFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    const { year, month, day, calendar, z } = ParseTemporalDateString(ToString(item));\n    if (z)\n        throw new RangeError('Z designator not supported for PlainDate');\n    const TemporalPlainDate = GetIntrinsic('%Temporal.PlainDate%');\n    return new TemporalPlainDate(year, month, day, calendar); // include validation\n}\nexport function InterpretTemporalDateTimeFields(calendar, fields, options) {\n    let { hour, minute, second, millisecond, microsecond, nanosecond } = ToTemporalTimeRecord(fields);\n    const overflow = ToTemporalOverflow(options);\n    const date = CalendarDateFromFields(calendar, fields, options);\n    const year = GetSlot(date, ISO_YEAR);\n    const month = GetSlot(date, ISO_MONTH);\n    const day = GetSlot(date, ISO_DAY);\n    ({ hour, minute, second, millisecond, microsecond, nanosecond } = RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function ToTemporalDateTime(item, options) {\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (IsObject(item)) {\n        if (IsTemporalDateTime(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            ToTemporalOverflow(options); // validate and ignore\n            return BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDate(item)) {\n            ToTemporalOverflow(options); // validate and ignore\n            return CreateTemporalDateTime(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), 0, 0, 0, 0, 0, 0, GetSlot(item, CALENDAR));\n        }\n        calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fields = PrepareTemporalFields(item, fieldNames, []);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, options));\n    }\n    else {\n        ToTemporalOverflow(options); // validate and ignore\n        let z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, z } =\n            ParseTemporalDateTimeString(ToString(item)));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainDateTime');\n        RejectDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n        if (calendar === undefined)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n    }\n    return CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n}\nexport function ToTemporalDuration(item) {\n    if (IsTemporalDuration(item))\n        return item;\n    let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToTemporalDurationRecord(item);\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    return new TemporalDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n}\nexport function ToTemporalInstant(item) {\n    if (IsTemporalInstant(item))\n        return item;\n    if (IsTemporalZonedDateTime(item)) {\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        return new TemporalInstant(GetSlot(item, EPOCHNANOSECONDS));\n    }\n    const ns = ParseTemporalInstant(ToString(item));\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    return new TemporalInstant(ns);\n}\nexport function ToTemporalMonthDay(itemParam, options) {\n    let item = itemParam;\n    if (IsObject(item)) {\n        if (IsTemporalMonthDay(item))\n            return item;\n        let calendar, calendarAbsent;\n        if (HasSlot(item, CALENDAR)) {\n            calendar = GetSlot(item, CALENDAR);\n            calendarAbsent = false;\n        }\n        else {\n            let maybeStringCalendar = item.calendar;\n            calendarAbsent = maybeStringCalendar === undefined;\n            if (maybeStringCalendar === undefined)\n                maybeStringCalendar = GetISO8601Calendar();\n            calendar = ToTemporalCalendar(maybeStringCalendar);\n        }\n        // HasSlot above adjusts the type of 'item' to include\n        // TypesWithCalendarUnits, which causes type-inference failures below.\n        // This is probably indicative of problems with HasSlot's typing.\n        item = item;\n        const fieldNames = CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const fields = PrepareTemporalFields(item, fieldNames, []);\n        // Callers who omit the calendar are not writing calendar-independent\n        // code. In that case, `monthCode`/`year` can be omitted; `month` and\n        // `day` are sufficient. Add a `year` to satisfy calendar validation.\n        if (calendarAbsent && fields.month !== undefined && fields.monthCode === undefined && fields.year === undefined) {\n            fields.year = 1972;\n        }\n        return CalendarMonthDayFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    let { month, day, referenceISOYear, calendar: maybeStringCalendar } = ParseTemporalMonthDayString(ToString(item));\n    let calendar = maybeStringCalendar;\n    if (calendar === undefined)\n        calendar = GetISO8601Calendar();\n    calendar = ToTemporalCalendar(calendar);\n    if (referenceISOYear === undefined) {\n        RejectISODate(1972, month, day);\n        return CreateTemporalMonthDay(month, day, calendar);\n    }\n    const result = CreateTemporalMonthDay(month, day, calendar, referenceISOYear);\n    return CalendarMonthDayFromFields(calendar, result);\n}\nexport function ToTemporalTime(itemParam, overflow = 'constrain') {\n    let item = itemParam;\n    let hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (IsObject(item)) {\n        if (IsTemporalTime(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            item = BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDateTime(item)) {\n            const TemporalPlainTime = GetIntrinsic('%Temporal.PlainTime%');\n            return new TemporalPlainTime(GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND));\n        }\n        calendar = GetTemporalCalendarWithISODefault(item);\n        if (ToString(calendar) !== 'iso8601') {\n            throw new RangeError('PlainTime can only have iso8601 calendar');\n        }\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ToTemporalTimeRecord(item));\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n    }\n    else {\n        ({ hour, minute, second, millisecond, microsecond, nanosecond, calendar } = ParseTemporalTimeString(ToString(item)));\n        RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n        if (calendar !== undefined && calendar !== 'iso8601') {\n            throw new RangeError('PlainTime can only have iso8601 calendar');\n        }\n    }\n    const TemporalPlainTime = GetIntrinsic('%Temporal.PlainTime%');\n    return new TemporalPlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n}\nexport function ToTemporalYearMonth(item, options) {\n    if (IsObject(item)) {\n        if (IsTemporalYearMonth(item))\n            return item;\n        const calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, ['month', 'monthCode', 'year']);\n        const fields = PrepareTemporalFields(item, fieldNames, []);\n        return CalendarYearMonthFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    let { year, month, referenceISODay, calendar: maybeStringCalendar } = ParseTemporalYearMonthString(ToString(item));\n    // TODO: replace with ternary?\n    let calendar = maybeStringCalendar;\n    if (calendar === undefined)\n        calendar = GetISO8601Calendar();\n    calendar = ToTemporalCalendar(calendar);\n    if (referenceISODay === undefined) {\n        RejectISODate(year, month, 1);\n        return CreateTemporalYearMonth(year, month, calendar);\n    }\n    const result = CreateTemporalYearMonth(year, month, calendar, referenceISODay);\n    return CalendarYearMonthFromFields(calendar, result);\n}\nexport function InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, disambiguation, offsetOpt, matchMinute) {\n    const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    const dt = new DateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (offsetBehaviour === 'wall' || offsetOpt === 'ignore') {\n        // Simple case: ISO string without a TZ offset (or caller wants to ignore\n        // the offset), so just convert DateTime to Instant in the given time zone\n        const instant = BuiltinTimeZoneGetInstantFor(timeZone, dt, disambiguation);\n        return GetSlot(instant, EPOCHNANOSECONDS);\n    }\n    // The caller wants the offset to always win ('use') OR the caller is OK\n    // with the offset winning ('prefer' or 'reject') as long as it's valid\n    // for this timezone and date/time.\n    if (offsetBehaviour === 'exact' || offsetOpt === 'use') {\n        // Calculate the instant for the input's date/time and offset\n        const epochNs = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n        if (epochNs === null)\n            throw new RangeError('ZonedDateTime outside of supported range');\n        return JSBI.subtract(epochNs, JSBI.BigInt(offsetNs));\n    }\n    // \"prefer\" or \"reject\"\n    const possibleInstants = GetPossibleInstantsFor(timeZone, dt);\n    for (const candidate of possibleInstants) {\n        const candidateOffset = GetOffsetNanosecondsFor(timeZone, candidate);\n        const roundedCandidateOffset = JSBI.toNumber(RoundNumberToIncrement(JSBI.BigInt(candidateOffset), 60e9, 'halfExpand'));\n        if (candidateOffset === offsetNs || (matchMinute && roundedCandidateOffset === offsetNs)) {\n            return GetSlot(candidate, EPOCHNANOSECONDS);\n        }\n    }\n    // the user-provided offset doesn't match any instants for this time\n    // zone and date/time.\n    if (offsetOpt === 'reject') {\n        const offsetStr = FormatTimeZoneOffsetString(offsetNs);\n        const timeZoneString = IsTemporalTimeZone(timeZone) ? GetSlot(timeZone, TIMEZONE_ID) : 'time zone';\n        // The tsc emit for this line rewrites to invoke the PlainDateTime's valueOf method, NOT\n        // toString (which is invoked by Node when using template literals directly).\n        // See https://github.com/microsoft/TypeScript/issues/39744 for the proposed fix in tsc emit\n        throw new RangeError(`Offset ${offsetStr} is invalid for ${dt.toString()} in ${timeZoneString}`);\n    }\n    // fall through: offsetOpt === 'prefer', but the offset doesn't match\n    // so fall back to use the time zone instead.\n    const instant = DisambiguatePossibleInstants(possibleInstants, timeZone, dt, disambiguation);\n    return GetSlot(instant, EPOCHNANOSECONDS);\n}\nexport function ToTemporalZonedDateTime(item, options) {\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, timeZone, offset, calendar;\n    let matchMinute = false;\n    let offsetBehaviour = 'option';\n    if (IsObject(item)) {\n        if (IsTemporalZonedDateTime(item))\n            return item;\n        calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fieldNamesWithTzAndOffset = ArrayPush(fieldNames, 'timeZone', 'offset');\n        const fields = PrepareTemporalFields(item, fieldNamesWithTzAndOffset, ['timeZone']);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, options));\n        timeZone = ToTemporalTimeZone(fields.timeZone);\n        offset = fields.offset;\n        if (offset === undefined) {\n            offsetBehaviour = 'wall';\n        }\n        else {\n            offset = ToString(offset);\n        }\n    }\n    else {\n        ToTemporalOverflow(options); // validate and ignore\n        let ianaName, z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, ianaName, offset, z, calendar } =\n            ParseTemporalZonedDateTimeString(ToString(item)));\n        if (!ianaName)\n            throw new RangeError('time zone ID required in brackets');\n        if (z) {\n            offsetBehaviour = 'exact';\n        }\n        else if (!offset) {\n            offsetBehaviour = 'wall';\n        }\n        const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n        timeZone = new TemporalTimeZone(ianaName);\n        if (!calendar)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n        matchMinute = true; // ISO strings may specify offset with less precision\n    }\n    let offsetNs = 0;\n    // The code above guarantees that if offsetBehaviour === 'option', then\n    // `offset` is not undefined.\n    if (offsetBehaviour === 'option')\n        offsetNs = ParseTimeZoneOffsetString(offset);\n    const disambiguation = ToTemporalDisambiguation(options);\n    const offsetOpt = ToTemporalOffset(options, 'reject');\n    const epochNanoseconds = InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, disambiguation, offsetOpt, matchMinute);\n    return CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n}\nexport function CreateTemporalDateSlots(result, isoYear, isoMonth, isoDay, calendar) {\n    RejectISODate(isoYear, isoMonth, isoDay);\n    RejectDateRange(isoYear, isoMonth, isoDay);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, DATE_BRAND, true);\n    if (DEBUG) {\n        ObjectDefineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalDateToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalDate(isoYear, isoMonth, isoDay, calendar = GetISO8601Calendar()) {\n    const TemporalPlainDate = GetIntrinsic('%Temporal.PlainDate%');\n    const result = ObjectCreate(TemporalPlainDate.prototype);\n    CreateTemporalDateSlots(result, isoYear, isoMonth, isoDay, calendar);\n    return result;\n}\nexport function CreateTemporalDateTimeSlots(result, isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar) {\n    RejectDateTime(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns);\n    RejectDateTimeRange(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, ISO_HOUR, h);\n    SetSlot(result, ISO_MINUTE, min);\n    SetSlot(result, ISO_SECOND, s);\n    SetSlot(result, ISO_MILLISECOND, ms);\n    SetSlot(result, ISO_MICROSECOND, µs);\n    SetSlot(result, ISO_NANOSECOND, ns);\n    SetSlot(result, CALENDAR, calendar);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalDateTimeToString(result, 'auto')}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalDateTime(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar = GetISO8601Calendar()) {\n    const TemporalPlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    const result = ObjectCreate(TemporalPlainDateTime.prototype);\n    CreateTemporalDateTimeSlots(result, isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar);\n    return result;\n}\nexport function CreateTemporalMonthDaySlots(result, isoMonth, isoDay, calendar, referenceISOYear) {\n    RejectISODate(referenceISOYear, isoMonth, isoDay);\n    RejectDateRange(referenceISOYear, isoMonth, isoDay);\n    CreateSlots(result);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, ISO_YEAR, referenceISOYear);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, MONTH_DAY_BRAND, true);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalMonthDayToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalMonthDay(isoMonth, isoDay, calendar = GetISO8601Calendar(), referenceISOYear = 1972) {\n    const TemporalPlainMonthDay = GetIntrinsic('%Temporal.PlainMonthDay%');\n    const result = ObjectCreate(TemporalPlainMonthDay.prototype);\n    CreateTemporalMonthDaySlots(result, isoMonth, isoDay, calendar, referenceISOYear);\n    return result;\n}\nexport function CreateTemporalYearMonthSlots(result, isoYear, isoMonth, calendar, referenceISODay) {\n    RejectISODate(isoYear, isoMonth, referenceISODay);\n    RejectYearMonthRange(isoYear, isoMonth);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, referenceISODay);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, YEAR_MONTH_BRAND, true);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalYearMonthToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalYearMonth(isoYear, isoMonth, calendar = GetISO8601Calendar(), referenceISODay = 1) {\n    const TemporalPlainYearMonth = GetIntrinsic('%Temporal.PlainYearMonth%');\n    const result = ObjectCreate(TemporalPlainYearMonth.prototype);\n    CreateTemporalYearMonthSlots(result, isoYear, isoMonth, calendar, referenceISODay);\n    return result;\n}\nexport function CreateTemporalZonedDateTimeSlots(result, epochNanoseconds, timeZone, calendar) {\n    ValidateEpochNanoseconds(epochNanoseconds);\n    CreateSlots(result);\n    SetSlot(result, EPOCHNANOSECONDS, epochNanoseconds);\n    SetSlot(result, TIME_ZONE, timeZone);\n    SetSlot(result, CALENDAR, calendar);\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const instant = new TemporalInstant(GetSlot(result, EPOCHNANOSECONDS));\n    SetSlot(result, INSTANT, instant);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalZonedDateTimeToString(result, 'auto')}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar = GetISO8601Calendar()) {\n    const TemporalZonedDateTime = GetIntrinsic('%Temporal.ZonedDateTime%');\n    const result = ObjectCreate(TemporalZonedDateTime.prototype);\n    CreateTemporalZonedDateTimeSlots(result, epochNanoseconds, timeZone, calendar);\n    return result;\n}\nexport function GetISO8601Calendar() {\n    const TemporalCalendar = GetIntrinsic('%Temporal.Calendar%');\n    return new TemporalCalendar('iso8601');\n}\n// TODO: should (can?) we make this generic so the field names are checked\n// against the type that the calendar is a property of?\nexport function CalendarFields(calendar, fieldNamesParam) {\n    let fieldNames = fieldNamesParam;\n    if (calendar.fields) {\n        fieldNames = calendar.fields(fieldNames);\n    }\n    const result = [];\n    for (const name of fieldNames) {\n        if (typeof name !== 'string')\n            throw new TypeError('bad return from calendar.fields()');\n        ArrayPrototypePush.call(result, name);\n    }\n    return result;\n}\nexport function CalendarMergeFields(calendar, fields, additionalFields) {\n    const calMergeFields = calendar.mergeFields;\n    if (!calMergeFields) {\n        return { ...fields, ...additionalFields };\n    }\n    const result = Reflect.apply(calMergeFields, calendar, [fields, additionalFields]);\n    if (!IsObject(result))\n        throw new TypeError('bad return from calendar.mergeFields()');\n    return result;\n}\nexport function CalendarDateAdd(calendar, date, duration, options, dateAddParam) {\n    let dateAdd = dateAddParam;\n    if (dateAdd === undefined) {\n        dateAdd = calendar.dateAdd;\n    }\n    const result = ReflectApply(dateAdd, calendar, [date, duration, options]);\n    if (!IsTemporalDate(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nfunction CalendarDateUntil(calendar, date, otherDate, options, dateUntilParam) {\n    let dateUntil = dateUntilParam;\n    if (dateUntil === undefined) {\n        dateUntil = calendar.dateUntil;\n    }\n    const result = ReflectApply(dateUntil, calendar, [date, otherDate, options]);\n    if (!IsTemporalDuration(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function CalendarYear(calendar, dateLike) {\n    const result = calendar.year(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar year result must be an integer');\n    }\n    return ToIntegerThrowOnInfinity(result);\n}\nexport function CalendarMonth(calendar, dateLike) {\n    const result = calendar.month(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar month result must be a positive integer');\n    }\n    return ToPositiveInteger(result);\n}\nexport function CalendarMonthCode(calendar, dateLike) {\n    const result = calendar.monthCode(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar monthCode result must be a string');\n    }\n    return ToString(result);\n}\nexport function CalendarDay(calendar, dateLike) {\n    const result = calendar.day(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar day result must be a positive integer');\n    }\n    return ToPositiveInteger(result);\n}\nexport function CalendarEra(calendar, dateLike) {\n    let result = calendar.era(dateLike);\n    if (result !== undefined) {\n        result = ToString(result);\n    }\n    return result;\n}\nexport function CalendarEraYear(calendar, dateLike) {\n    let result = calendar.eraYear(dateLike);\n    if (result !== undefined) {\n        result = ToIntegerThrowOnInfinity(result);\n    }\n    return result;\n}\nexport function CalendarDayOfWeek(calendar, dateLike) {\n    return calendar.dayOfWeek(dateLike);\n}\nexport function CalendarDayOfYear(calendar, dateLike) {\n    return calendar.dayOfYear(dateLike);\n}\nexport function CalendarWeekOfYear(calendar, dateLike) {\n    return calendar.weekOfYear(dateLike);\n}\nexport function CalendarDaysInWeek(calendar, dateLike) {\n    return calendar.daysInWeek(dateLike);\n}\nexport function CalendarDaysInMonth(calendar, dateLike) {\n    return calendar.daysInMonth(dateLike);\n}\nexport function CalendarDaysInYear(calendar, dateLike) {\n    return calendar.daysInYear(dateLike);\n}\nexport function CalendarMonthsInYear(calendar, dateLike) {\n    return calendar.monthsInYear(dateLike);\n}\nexport function CalendarInLeapYear(calendar, dateLike) {\n    return calendar.inLeapYear(dateLike);\n}\nexport function ToTemporalCalendar(calendarLikeParam) {\n    let calendarLike = calendarLikeParam;\n    if (IsObject(calendarLike)) {\n        if (HasSlot(calendarLike, CALENDAR))\n            return GetSlot(calendarLike, CALENDAR);\n        if (!('calendar' in calendarLike))\n            return calendarLike;\n        calendarLike = calendarLike.calendar;\n        if (IsObject(calendarLike) && !('calendar' in calendarLike))\n            return calendarLike;\n    }\n    const identifier = ToString(calendarLike);\n    const TemporalCalendar = GetIntrinsic('%Temporal.Calendar%');\n    if (IsBuiltinCalendar(identifier))\n        return new TemporalCalendar(identifier);\n    let calendar;\n    try {\n        ({ calendar } = ParseISODateTime(identifier));\n    }\n    catch {\n        throw new RangeError(`Invalid calendar: ${identifier}`);\n    }\n    if (!calendar)\n        calendar = 'iso8601';\n    return new TemporalCalendar(calendar);\n}\nfunction GetTemporalCalendarWithISODefault(item) {\n    if (HasSlot(item, CALENDAR))\n        return GetSlot(item, CALENDAR);\n    const { calendar } = item;\n    if (calendar === undefined)\n        return GetISO8601Calendar();\n    return ToTemporalCalendar(calendar);\n}\nexport function CalendarEquals(one, two) {\n    if (one === two)\n        return true;\n    const cal1 = ToString(one);\n    const cal2 = ToString(two);\n    return cal1 === cal2;\n}\nexport function ConsolidateCalendars(one, two) {\n    if (one === two)\n        return two;\n    const sOne = ToString(one);\n    const sTwo = ToString(two);\n    if (sOne === sTwo || sOne === 'iso8601') {\n        return two;\n    }\n    else if (sTwo === 'iso8601') {\n        return one;\n    }\n    else {\n        throw new RangeError('irreconcilable calendars');\n    }\n}\nexport function CalendarDateFromFields(calendar, fields, options) {\n    const result = calendar.dateFromFields(fields, options);\n    if (!IsTemporalDate(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function CalendarYearMonthFromFields(calendar, fields, options) {\n    const result = calendar.yearMonthFromFields(fields, options);\n    if (!IsTemporalYearMonth(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function CalendarMonthDayFromFields(calendar, fields, options) {\n    const result = calendar.monthDayFromFields(fields, options);\n    if (!IsTemporalMonthDay(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function ToTemporalTimeZone(temporalTimeZoneLikeParam) {\n    let temporalTimeZoneLike = temporalTimeZoneLikeParam;\n    if (IsObject(temporalTimeZoneLike)) {\n        if (IsTemporalZonedDateTime(temporalTimeZoneLike))\n            return GetSlot(temporalTimeZoneLike, TIME_ZONE);\n        if (!('timeZone' in temporalTimeZoneLike))\n            return temporalTimeZoneLike;\n        temporalTimeZoneLike = temporalTimeZoneLike.timeZone;\n        if (IsObject(temporalTimeZoneLike) && !('timeZone' in temporalTimeZoneLike)) {\n            return temporalTimeZoneLike;\n        }\n    }\n    const identifier = ToString(temporalTimeZoneLike);\n    const timeZone = ParseTemporalTimeZone(identifier);\n    const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n    return new TemporalTimeZone(timeZone);\n}\nexport function TimeZoneEquals(one, two) {\n    if (one === two)\n        return true;\n    const tz1 = ToString(one);\n    const tz2 = ToString(two);\n    return tz1 === tz2;\n}\nexport function TemporalDateTimeToDate(dateTime) {\n    return CreateTemporalDate(GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, CALENDAR));\n}\nexport function TemporalDateTimeToTime(dateTime) {\n    const Time = GetIntrinsic('%Temporal.PlainTime%');\n    return new Time(GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n}\nexport function GetOffsetNanosecondsFor(timeZone, instant) {\n    let getOffsetNanosecondsFor = timeZone.getOffsetNanosecondsFor;\n    if (typeof getOffsetNanosecondsFor !== 'function') {\n        throw new TypeError('getOffsetNanosecondsFor not callable');\n    }\n    const offsetNs = Reflect.apply(getOffsetNanosecondsFor, timeZone, [instant]);\n    if (typeof offsetNs !== 'number') {\n        throw new TypeError('bad return from getOffsetNanosecondsFor');\n    }\n    if (!IsInteger(offsetNs) || MathAbs(offsetNs) > 86400e9) {\n        throw new RangeError('out-of-range return from getOffsetNanosecondsFor');\n    }\n    return offsetNs;\n}\nexport function BuiltinTimeZoneGetOffsetStringFor(timeZone, instant) {\n    const offsetNs = GetOffsetNanosecondsFor(timeZone, instant);\n    return FormatTimeZoneOffsetString(offsetNs);\n}\nexport function BuiltinTimeZoneGetPlainDateTimeFor(timeZone, instant, calendar) {\n    const ns = GetSlot(instant, EPOCHNANOSECONDS);\n    const offsetNs = GetOffsetNanosecondsFor(timeZone, instant);\n    let { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = GetISOPartsFromEpoch(ns);\n    ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond + offsetNs));\n    return CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n}\nexport function BuiltinTimeZoneGetInstantFor(timeZone, dateTime, disambiguation) {\n    const possibleInstants = GetPossibleInstantsFor(timeZone, dateTime);\n    return DisambiguatePossibleInstants(possibleInstants, timeZone, dateTime, disambiguation);\n}\nfunction DisambiguatePossibleInstants(possibleInstants, timeZone, dateTime, disambiguation) {\n    const Instant = GetIntrinsic('%Temporal.Instant%');\n    const numInstants = possibleInstants.length;\n    if (numInstants === 1)\n        return possibleInstants[0];\n    if (numInstants) {\n        switch (disambiguation) {\n            case 'compatible':\n            // fall through because 'compatible' means 'earlier' for \"fall back\" transitions\n            case 'earlier':\n                return possibleInstants[0];\n            case 'later':\n                return possibleInstants[numInstants - 1];\n            case 'reject': {\n                throw new RangeError('multiple instants found');\n            }\n        }\n    }\n    const year = GetSlot(dateTime, ISO_YEAR);\n    const month = GetSlot(dateTime, ISO_MONTH);\n    const day = GetSlot(dateTime, ISO_DAY);\n    const hour = GetSlot(dateTime, ISO_HOUR);\n    const minute = GetSlot(dateTime, ISO_MINUTE);\n    const second = GetSlot(dateTime, ISO_SECOND);\n    const millisecond = GetSlot(dateTime, ISO_MILLISECOND);\n    const microsecond = GetSlot(dateTime, ISO_MICROSECOND);\n    const nanosecond = GetSlot(dateTime, ISO_NANOSECOND);\n    const utcns = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (utcns === null)\n        throw new RangeError('DateTime outside of supported range');\n    const dayBefore = new Instant(JSBI.subtract(utcns, DAY_NANOS));\n    const dayAfter = new Instant(JSBI.add(utcns, DAY_NANOS));\n    const offsetBefore = GetOffsetNanosecondsFor(timeZone, dayBefore);\n    const offsetAfter = GetOffsetNanosecondsFor(timeZone, dayAfter);\n    const nanoseconds = offsetAfter - offsetBefore;\n    switch (disambiguation) {\n        case 'earlier': {\n            const calendar = GetSlot(dateTime, CALENDAR);\n            const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n            const earlier = AddDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, 0, 0, 0, 0, 0, 0, 0, 0, 0, -nanoseconds, undefined);\n            const earlierPlainDateTime = new PlainDateTime(earlier.year, earlier.month, earlier.day, earlier.hour, earlier.minute, earlier.second, earlier.millisecond, earlier.microsecond, earlier.nanosecond, calendar);\n            return GetPossibleInstantsFor(timeZone, earlierPlainDateTime)[0];\n        }\n        case 'compatible':\n        // fall through because 'compatible' means 'later' for \"spring forward\" transitions\n        case 'later': {\n            const calendar = GetSlot(dateTime, CALENDAR);\n            const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n            const later = AddDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, 0, 0, 0, 0, 0, 0, 0, 0, 0, nanoseconds, undefined);\n            const laterPlainDateTime = new PlainDateTime(later.year, later.month, later.day, later.hour, later.minute, later.second, later.millisecond, later.microsecond, later.nanosecond, calendar);\n            const possible = GetPossibleInstantsFor(timeZone, laterPlainDateTime);\n            return possible[possible.length - 1];\n        }\n        case 'reject': {\n            throw new RangeError('no such instant found');\n        }\n    }\n}\nfunction GetPossibleInstantsFor(timeZone, dateTime) {\n    const possibleInstants = timeZone.getPossibleInstantsFor(dateTime);\n    const result = [];\n    for (const instant of possibleInstants) {\n        if (!IsTemporalInstant(instant)) {\n            throw new TypeError('bad return from getPossibleInstantsFor');\n        }\n        ArrayPrototypePush.call(result, instant);\n    }\n    return result;\n}\nexport function ISOYearString(year) {\n    let yearString;\n    if (year < 0 || year > 9999) {\n        const sign = year < 0 ? '-' : '+';\n        const yearNumber = MathAbs(year);\n        yearString = sign + `000000${yearNumber}`.slice(-6);\n    }\n    else {\n        yearString = `0000${year}`.slice(-4);\n    }\n    return yearString;\n}\nexport function ISODateTimePartString(part) {\n    return `00${part}`.slice(-2);\n}\nexport function FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision) {\n    if (precision === 'minute')\n        return '';\n    const secs = `:${ISODateTimePartString(second)}`;\n    let fractionNumber = millisecond * 1e6 + microsecond * 1e3 + nanosecond;\n    let fraction;\n    if (precision === 'auto') {\n        if (fractionNumber === 0)\n            return secs;\n        fraction = `${fractionNumber}`.padStart(9, '0');\n        while (fraction[fraction.length - 1] === '0')\n            fraction = fraction.slice(0, -1);\n    }\n    else {\n        if (precision === 0)\n            return secs;\n        fraction = `${fractionNumber}`.padStart(9, '0').slice(0, precision);\n    }\n    return `${secs}.${fraction}`;\n}\nexport function TemporalInstantToString(instant, timeZone, precision) {\n    let outputTimeZone = timeZone;\n    if (outputTimeZone === undefined) {\n        const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n        outputTimeZone = new TemporalTimeZone('UTC');\n    }\n    const iso = GetISO8601Calendar();\n    const dateTime = BuiltinTimeZoneGetPlainDateTimeFor(outputTimeZone, instant, iso);\n    const year = ISOYearString(GetSlot(dateTime, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(dateTime, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(dateTime, ISO_DAY));\n    const hour = ISODateTimePartString(GetSlot(dateTime, ISO_HOUR));\n    const minute = ISODateTimePartString(GetSlot(dateTime, ISO_MINUTE));\n    const seconds = FormatSecondsStringPart(GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND), precision);\n    let timeZoneString = 'Z';\n    if (timeZone !== undefined) {\n        const offsetNs = GetOffsetNanosecondsFor(outputTimeZone, instant);\n        timeZoneString = FormatISOTimeZoneOffsetString(offsetNs);\n    }\n    return `${year}-${month}-${day}T${hour}:${minute}${seconds}${timeZoneString}`;\n}\nexport function TemporalDurationToString(duration, precision = 'auto', options = undefined) {\n    function formatNumber(num) {\n        if (num <= NumberMaxSafeInteger)\n            return num.toString(10);\n        return JSBI.BigInt(num).toString(10);\n    }\n    const years = GetSlot(duration, YEARS);\n    const months = GetSlot(duration, MONTHS);\n    const weeks = GetSlot(duration, WEEKS);\n    const days = GetSlot(duration, DAYS);\n    const hours = GetSlot(duration, HOURS);\n    const minutes = GetSlot(duration, MINUTES);\n    let seconds = GetSlot(duration, SECONDS);\n    let ms = GetSlot(duration, MILLISECONDS);\n    let µs = GetSlot(duration, MICROSECONDS);\n    let ns = GetSlot(duration, NANOSECONDS);\n    const sign = DurationSign(years, months, weeks, days, hours, minutes, seconds, ms, µs, ns);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({\n            seconds,\n            milliseconds: ms,\n            microseconds: µs,\n            nanoseconds: ns\n        } = RoundDuration(0, 0, 0, 0, 0, 0, seconds, ms, µs, ns, increment, unit, roundingMode));\n    }\n    const dateParts = [];\n    if (years)\n        dateParts.push(`${formatNumber(MathAbs(years))}Y`);\n    if (months)\n        dateParts.push(`${formatNumber(MathAbs(months))}M`);\n    if (weeks)\n        dateParts.push(`${formatNumber(MathAbs(weeks))}W`);\n    if (days)\n        dateParts.push(`${formatNumber(MathAbs(days))}D`);\n    const timeParts = [];\n    if (hours)\n        timeParts.push(`${formatNumber(MathAbs(hours))}H`);\n    if (minutes)\n        timeParts.push(`${formatNumber(MathAbs(minutes))}M`);\n    const secondParts = [];\n    let total = TotalDurationNanoseconds(0, 0, 0, seconds, ms, µs, ns, 0);\n    let nsBigInt, µsBigInt, msBigInt, secondsBigInt;\n    ({ quotient: total, remainder: nsBigInt } = divmod(total, THOUSAND));\n    ({ quotient: total, remainder: µsBigInt } = divmod(total, THOUSAND));\n    ({ quotient: secondsBigInt, remainder: msBigInt } = divmod(total, THOUSAND));\n    const fraction = MathAbs(JSBI.toNumber(msBigInt)) * 1e6 + MathAbs(JSBI.toNumber(µsBigInt)) * 1e3 + MathAbs(JSBI.toNumber(nsBigInt));\n    let decimalPart;\n    if (precision === 'auto') {\n        if (fraction !== 0) {\n            decimalPart = `${fraction}`.padStart(9, '0');\n            while (decimalPart[decimalPart.length - 1] === '0') {\n                decimalPart = decimalPart.slice(0, -1);\n            }\n        }\n    }\n    else if (precision !== 0) {\n        decimalPart = `${fraction}`.padStart(9, '0').slice(0, precision);\n    }\n    if (decimalPart)\n        secondParts.unshift('.', decimalPart);\n    if (!JSBI.equal(secondsBigInt, ZERO) || secondParts.length || precision !== 'auto') {\n        secondParts.unshift(abs(secondsBigInt).toString());\n    }\n    if (secondParts.length)\n        timeParts.push(`${secondParts.join('')}S`);\n    if (timeParts.length)\n        timeParts.unshift('T');\n    if (!dateParts.length && !timeParts.length)\n        return 'PT0S';\n    return `${sign < 0 ? '-' : ''}P${dateParts.join('')}${timeParts.join('')}`;\n}\nexport function TemporalDateToString(date, showCalendar = 'auto') {\n    const year = ISOYearString(GetSlot(date, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(date, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(date, ISO_DAY));\n    const calendarID = ToString(GetSlot(date, CALENDAR));\n    const calendar = FormatCalendarAnnotation(calendarID, showCalendar);\n    return `${year}-${month}-${day}${calendar}`;\n}\nexport function TemporalDateTimeToString(dateTime, precision, showCalendar = 'auto', options = undefined) {\n    let year = GetSlot(dateTime, ISO_YEAR);\n    let month = GetSlot(dateTime, ISO_MONTH);\n    let day = GetSlot(dateTime, ISO_DAY);\n    let hour = GetSlot(dateTime, ISO_HOUR);\n    let minute = GetSlot(dateTime, ISO_MINUTE);\n    let second = GetSlot(dateTime, ISO_SECOND);\n    let millisecond = GetSlot(dateTime, ISO_MILLISECOND);\n    let microsecond = GetSlot(dateTime, ISO_MICROSECOND);\n    let nanosecond = GetSlot(dateTime, ISO_NANOSECOND);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode));\n    }\n    const yearString = ISOYearString(year);\n    const monthString = ISODateTimePartString(month);\n    const dayString = ISODateTimePartString(day);\n    const hourString = ISODateTimePartString(hour);\n    const minuteString = ISODateTimePartString(minute);\n    const secondsString = FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision);\n    const calendarID = ToString(GetSlot(dateTime, CALENDAR));\n    const calendar = FormatCalendarAnnotation(calendarID, showCalendar);\n    return `${yearString}-${monthString}-${dayString}T${hourString}:${minuteString}${secondsString}${calendar}`;\n}\nexport function TemporalMonthDayToString(monthDay, showCalendar = 'auto') {\n    const month = ISODateTimePartString(GetSlot(monthDay, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(monthDay, ISO_DAY));\n    let resultString = `${month}-${day}`;\n    const calendar = GetSlot(monthDay, CALENDAR);\n    const calendarID = ToString(calendar);\n    if (showCalendar === 'always' || calendarID !== 'iso8601') {\n        const year = ISOYearString(GetSlot(monthDay, ISO_YEAR));\n        resultString = `${year}-${resultString}`;\n    }\n    const calendarString = FormatCalendarAnnotation(calendarID, showCalendar);\n    if (calendarString)\n        resultString += calendarString;\n    return resultString;\n}\nexport function TemporalYearMonthToString(yearMonth, showCalendar = 'auto') {\n    const year = ISOYearString(GetSlot(yearMonth, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(yearMonth, ISO_MONTH));\n    let resultString = `${year}-${month}`;\n    const calendar = GetSlot(yearMonth, CALENDAR);\n    const calendarID = ToString(calendar);\n    if (showCalendar === 'always' || calendarID !== 'iso8601') {\n        const day = ISODateTimePartString(GetSlot(yearMonth, ISO_DAY));\n        resultString += `-${day}`;\n    }\n    const calendarString = FormatCalendarAnnotation(calendarID, showCalendar);\n    if (calendarString)\n        resultString += calendarString;\n    return resultString;\n}\nexport function TemporalZonedDateTimeToString(zdt, precision, showCalendar = 'auto', showTimeZone = 'auto', showOffset = 'auto', options = undefined) {\n    let instant = GetSlot(zdt, INSTANT);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        const ns = RoundInstant(GetSlot(zdt, EPOCHNANOSECONDS), increment, unit, roundingMode);\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        instant = new TemporalInstant(ns);\n    }\n    const tz = GetSlot(zdt, TIME_ZONE);\n    const iso = GetISO8601Calendar();\n    const dateTime = BuiltinTimeZoneGetPlainDateTimeFor(tz, instant, iso);\n    const year = ISOYearString(GetSlot(dateTime, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(dateTime, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(dateTime, ISO_DAY));\n    const hour = ISODateTimePartString(GetSlot(dateTime, ISO_HOUR));\n    const minute = ISODateTimePartString(GetSlot(dateTime, ISO_MINUTE));\n    const seconds = FormatSecondsStringPart(GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND), precision);\n    let result = `${year}-${month}-${day}T${hour}:${minute}${seconds}`;\n    if (showOffset !== 'never') {\n        const offsetNs = GetOffsetNanosecondsFor(tz, instant);\n        result += FormatISOTimeZoneOffsetString(offsetNs);\n    }\n    if (showTimeZone !== 'never')\n        result += `[${tz}]`;\n    const calendarID = ToString(GetSlot(zdt, CALENDAR));\n    result += FormatCalendarAnnotation(calendarID, showCalendar);\n    return result;\n}\nexport function TestTimeZoneOffsetString(string) {\n    return OFFSET.test(StringCtor(string));\n}\nexport function ParseTimeZoneOffsetString(string) {\n    const match = OFFSET.exec(StringCtor(string));\n    if (!match) {\n        throw new RangeError(`invalid time zone offset: ${string}`);\n    }\n    const sign = match[1] === '-' || match[1] === '\\u2212' ? -1 : +1;\n    const hours = +match[2];\n    const minutes = +(match[3] || 0);\n    const seconds = +(match[4] || 0);\n    const nanoseconds = +((match[5] || 0) + '000000000').slice(0, 9);\n    return sign * (((hours * 60 + minutes) * 60 + seconds) * 1e9 + nanoseconds);\n}\nexport function GetCanonicalTimeZoneIdentifier(timeZoneIdentifier) {\n    if (TestTimeZoneOffsetString(timeZoneIdentifier)) {\n        const offsetNs = ParseTimeZoneOffsetString(timeZoneIdentifier);\n        return FormatTimeZoneOffsetString(offsetNs);\n    }\n    const formatter = getIntlDateTimeFormatEnUsForTimeZone(StringCtor(timeZoneIdentifier));\n    return formatter.resolvedOptions().timeZone;\n}\nexport function GetIANATimeZoneOffsetNanoseconds(epochNanoseconds, id) {\n    const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = GetIANATimeZoneDateTimeParts(epochNanoseconds, id);\n    const utc = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (utc === null)\n        throw new RangeError('Date outside of supported range');\n    return JSBI.toNumber(JSBI.subtract(utc, epochNanoseconds));\n}\nfunction FormatTimeZoneOffsetString(offsetNanosecondsParam) {\n    const sign = offsetNanosecondsParam < 0 ? '-' : '+';\n    const offsetNanoseconds = MathAbs(offsetNanosecondsParam);\n    const nanoseconds = offsetNanoseconds % 1e9;\n    const seconds = MathFloor(offsetNanoseconds / 1e9) % 60;\n    const minutes = MathFloor(offsetNanoseconds / 60e9) % 60;\n    const hours = MathFloor(offsetNanoseconds / 3600e9);\n    const hourString = ISODateTimePartString(hours);\n    const minuteString = ISODateTimePartString(minutes);\n    const secondString = ISODateTimePartString(seconds);\n    let post = '';\n    if (nanoseconds) {\n        let fraction = `${nanoseconds}`.padStart(9, '0');\n        while (fraction[fraction.length - 1] === '0')\n            fraction = fraction.slice(0, -1);\n        post = `:${secondString}.${fraction}`;\n    }\n    else if (seconds) {\n        post = `:${secondString}`;\n    }\n    return `${sign}${hourString}:${minuteString}${post}`;\n}\nfunction FormatISOTimeZoneOffsetString(offsetNanosecondsParam) {\n    let offsetNanoseconds = JSBI.toNumber(RoundNumberToIncrement(JSBI.BigInt(offsetNanosecondsParam), 60e9, 'halfExpand'));\n    const sign = offsetNanoseconds < 0 ? '-' : '+';\n    offsetNanoseconds = MathAbs(offsetNanoseconds);\n    const minutes = (offsetNanoseconds / 60e9) % 60;\n    const hours = MathFloor(offsetNanoseconds / 3600e9);\n    const hourString = ISODateTimePartString(hours);\n    const minuteString = ISODateTimePartString(minutes);\n    return `${sign}${hourString}:${minuteString}`;\n}\nexport function GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    // Note: Date.UTC() interprets one and two-digit years as being in the\n    // 20th century, so don't use it\n    const legacyDate = new Date();\n    legacyDate.setUTCHours(hour, minute, second, millisecond);\n    legacyDate.setUTCFullYear(year, month - 1, day);\n    const ms = legacyDate.getTime();\n    if (NumberIsNaN(ms))\n        return null;\n    let ns = JSBI.multiply(JSBI.BigInt(ms), MILLION);\n    ns = JSBI.add(ns, JSBI.multiply(JSBI.BigInt(microsecond), THOUSAND));\n    ns = JSBI.add(ns, JSBI.BigInt(nanosecond));\n    if (JSBI.lessThan(ns, NS_MIN) || JSBI.greaterThan(ns, NS_MAX))\n        return null;\n    return ns;\n}\nfunction GetISOPartsFromEpoch(epochNanoseconds) {\n    const { quotient, remainder } = divmod(epochNanoseconds, MILLION);\n    let epochMilliseconds = JSBI.toNumber(quotient);\n    let nanos = JSBI.toNumber(remainder);\n    if (nanos < 0) {\n        nanos += 1e6;\n        epochMilliseconds -= 1;\n    }\n    const microsecond = MathFloor(nanos / 1e3) % 1e3;\n    const nanosecond = nanos % 1e3;\n    const item = new Date(epochMilliseconds);\n    const year = item.getUTCFullYear();\n    const month = item.getUTCMonth() + 1;\n    const day = item.getUTCDate();\n    const hour = item.getUTCHours();\n    const minute = item.getUTCMinutes();\n    const second = item.getUTCSeconds();\n    const millisecond = item.getUTCMilliseconds();\n    return { epochMilliseconds, year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\n// ts-prune-ignore-next TODO: remove this after tests are converted to TS\nexport function GetIANATimeZoneDateTimeParts(epochNanoseconds, id) {\n    const { epochMilliseconds, millisecond, microsecond, nanosecond } = GetISOPartsFromEpoch(epochNanoseconds);\n    const { year, month, day, hour, minute, second } = GetFormatterParts(id, epochMilliseconds);\n    return BalanceISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n}\nfunction maxJSBI(one, two) {\n    return JSBI.lessThan(one, two) ? two : one;\n}\n/**\n * Our best guess at how far in advance new rules will be put into the TZDB for\n * future offset transitions. We'll pick 10 years but can always revise it if\n * we find that countries are being unusually proactive in their announcing\n * of offset changes.\n */\nfunction afterLatestPossibleTzdbRuleChange() {\n    return JSBI.add(SystemUTCEpochNanoSeconds(), ABOUT_TEN_YEARS_NANOS);\n}\nexport function GetIANATimeZoneNextTransition(epochNanoseconds, id) {\n    // Decide how far in the future after `epochNanoseconds` we'll look for an\n    // offset change. There are two cases:\n    // 1. If it's a past date (or a date in the near future) then it's possible\n    //    that the time zone may have newly added DST in the next few years. So\n    //    we'll have to look from the provided time until a few years after the\n    //    current system time. (Changes to DST policy are usually announced a few\n    //    years in the future.) Note that the first DST anywhere started in 1847,\n    //    so we'll start checks in 1847 instead of wasting cycles on years where\n    //    there will never be transitions.\n    // 2. If it's a future date beyond the next few years, then we'll just assume\n    //    that the latest DST policy in TZDB will still be in effect.  In this\n    //    case, we only need to look one year in the future to see if there are\n    //    any DST transitions.  We actually only need to look 9-10 months because\n    //    DST has two transitions per year, but we'll use a year just to be safe.\n    const oneYearLater = JSBI.add(epochNanoseconds, ABOUT_ONE_YEAR_NANOS);\n    const uppercap = maxJSBI(afterLatestPossibleTzdbRuleChange(), oneYearLater);\n    // The first transition (in any timezone) recorded in the TZDB was in 1847, so\n    // start there if an earlier date is supplied.\n    let leftNanos = maxJSBI(BEFORE_FIRST_OFFSET_TRANSITION, epochNanoseconds);\n    const leftOffsetNs = GetIANATimeZoneOffsetNanoseconds(leftNanos, id);\n    let rightNanos = leftNanos;\n    let rightOffsetNs = leftOffsetNs;\n    while (leftOffsetNs === rightOffsetNs && JSBI.lessThan(JSBI.BigInt(leftNanos), uppercap)) {\n        rightNanos = JSBI.add(leftNanos, TWO_WEEKS_NANOS);\n        rightOffsetNs = GetIANATimeZoneOffsetNanoseconds(rightNanos, id);\n        if (leftOffsetNs === rightOffsetNs) {\n            leftNanos = rightNanos;\n        }\n    }\n    if (leftOffsetNs === rightOffsetNs)\n        return null;\n    const result = bisect((epochNs) => GetIANATimeZoneOffsetNanoseconds(epochNs, id), leftNanos, rightNanos, leftOffsetNs, rightOffsetNs);\n    return result;\n}\nexport function GetIANATimeZonePreviousTransition(epochNanoseconds, id) {\n    // If a time zone uses DST (at the time of `epochNanoseconds`), then we only\n    // have to look back one year to find a transition. But if it doesn't use DST,\n    // then we need to look all the way back to 1847 (the earliest rule in the\n    // TZDB) to see if it had other offset transitions in the past. Looping back\n    // from a far-future date to 1847 is very slow (minutes of 100% CPU!), and is\n    // also unnecessary because DST rules aren't put into the TZDB more than a few\n    // years in the future because the political changes in time zones happen with\n    // only a few years' warning. Therefore, if a far-future date is provided,\n    // then we'll run the check in two parts:\n    // 1. First, we'll look back for up to one year to see if the latest TZDB\n    //    rules have DST.\n    // 2. If not, then we'll \"fast-reverse\" back to a few years later than the\n    //    current system time, and then look back to 1847. This reduces the\n    //    worst-case loop from 273K years to 175 years, for a ~1500x improvement\n    //    in worst-case perf.\n    const afterLatestRule = afterLatestPossibleTzdbRuleChange();\n    const isFarFuture = JSBI.greaterThan(epochNanoseconds, afterLatestRule);\n    const lowercap = isFarFuture ? JSBI.subtract(epochNanoseconds, ABOUT_ONE_YEAR_NANOS) : BEFORE_FIRST_OFFSET_TRANSITION;\n    let rightNanos = JSBI.subtract(epochNanoseconds, ONE);\n    const rightOffsetNs = GetIANATimeZoneOffsetNanoseconds(rightNanos, id);\n    let leftNanos = rightNanos;\n    let leftOffsetNs = rightOffsetNs;\n    while (rightOffsetNs === leftOffsetNs && JSBI.greaterThan(rightNanos, lowercap)) {\n        leftNanos = JSBI.subtract(rightNanos, TWO_WEEKS_NANOS);\n        leftOffsetNs = GetIANATimeZoneOffsetNanoseconds(leftNanos, id);\n        if (rightOffsetNs === leftOffsetNs) {\n            rightNanos = leftNanos;\n        }\n    }\n    if (rightOffsetNs === leftOffsetNs) {\n        if (isFarFuture) {\n            // There was no DST after looking back one year, which means that the most\n            // recent TZDB rules don't have any recurring transitions. To check for\n            // transitions in older rules, back up to a few years after the current\n            // date and then look all the way back to 1847. Note that we move back one\n            // day from the latest possible rule so that when the recursion runs it\n            // won't consider the new time to be \"far future\" because the system clock\n            // has advanced in the meantime.\n            const newTimeToCheck = JSBI.subtract(afterLatestRule, DAY_NANOS);\n            return GetIANATimeZonePreviousTransition(newTimeToCheck, id);\n        }\n        return null;\n    }\n    const result = bisect((epochNs) => GetIANATimeZoneOffsetNanoseconds(epochNs, id), leftNanos, rightNanos, leftOffsetNs, rightOffsetNs);\n    return result;\n}\n// ts-prune-ignore-next TODO: remove this after tests are converted to TS\nexport function parseFromEnUsFormat(datetime) {\n    const parts = datetime.split(/[^\\w]+/);\n    if (parts.length !== 7) {\n        throw new RangeError(`expected 7 parts in \"${datetime}`);\n    }\n    const month = +parts[0];\n    const day = +parts[1];\n    let year = +parts[2];\n    const era = parts[3].toUpperCase();\n    if (era === 'B' || era === 'BC') {\n        year = -year + 1;\n    }\n    else if (era !== 'A' && era !== 'AD') {\n        throw new RangeError(`Unknown era ${era} in \"${datetime}`);\n    }\n    let hour = +parts[4];\n    if (hour === 24) {\n        // bugs.chromium.org/p/chromium/issues/detail?id=1045791\n        hour = 0;\n    }\n    const minute = +parts[5];\n    const second = +parts[6];\n    if (!NumberIsFinite(year) ||\n        !NumberIsFinite(month) ||\n        !NumberIsFinite(day) ||\n        !NumberIsFinite(hour) ||\n        !NumberIsFinite(minute) ||\n        !NumberIsFinite(second)) {\n        throw new RangeError(`Invalid number in \"${datetime}`);\n    }\n    return { year, month, day, hour, minute, second };\n}\n// ts-prune-ignore-next TODO: remove this after tests are converted to TS\nexport function GetFormatterParts(timeZone, epochMilliseconds) {\n    const formatter = getIntlDateTimeFormatEnUsForTimeZone(timeZone);\n    // Using `format` instead of `formatToParts` for compatibility with older clients\n    const datetime = formatter.format(new Date(epochMilliseconds));\n    return parseFromEnUsFormat(datetime);\n}\nexport function GetIANATimeZoneEpochValue(id, year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    const ns = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (ns === null)\n        throw new RangeError('DateTime outside of supported range');\n    let nsEarlier = JSBI.subtract(ns, DAY_NANOS);\n    if (JSBI.lessThan(nsEarlier, NS_MIN))\n        nsEarlier = ns;\n    let nsLater = JSBI.add(ns, DAY_NANOS);\n    if (JSBI.greaterThan(nsLater, NS_MAX))\n        nsLater = ns;\n    const earliest = GetIANATimeZoneOffsetNanoseconds(nsEarlier, id);\n    const latest = GetIANATimeZoneOffsetNanoseconds(nsLater, id);\n    const found = earliest === latest ? [earliest] : [earliest, latest];\n    return found\n        .map((offsetNanoseconds) => {\n        const epochNanoseconds = JSBI.subtract(ns, JSBI.BigInt(offsetNanoseconds));\n        const parts = GetIANATimeZoneDateTimeParts(epochNanoseconds, id);\n        if (year !== parts.year ||\n            month !== parts.month ||\n            day !== parts.day ||\n            hour !== parts.hour ||\n            minute !== parts.minute ||\n            second !== parts.second ||\n            millisecond !== parts.millisecond ||\n            microsecond !== parts.microsecond ||\n            nanosecond !== parts.nanosecond) {\n            return undefined;\n        }\n        return epochNanoseconds;\n    })\n        .filter((x) => x !== undefined);\n}\nexport function LeapYear(year) {\n    if (undefined === year)\n        return false;\n    const isDiv4 = year % 4 === 0;\n    const isDiv100 = year % 100 === 0;\n    const isDiv400 = year % 400 === 0;\n    return isDiv4 && (!isDiv100 || isDiv400);\n}\nexport function ISODaysInMonth(year, month) {\n    const DoM = {\n        standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    };\n    return DoM[LeapYear(year) ? 'leapyear' : 'standard'][month - 1];\n}\nexport function DayOfWeek(year, month, day) {\n    const m = month + (month < 3 ? 10 : -2);\n    const Y = year - (month < 3 ? 1 : 0);\n    const c = MathFloor(Y / 100);\n    const y = Y - c * 100;\n    const d = day;\n    const pD = d;\n    const pM = MathFloor(2.6 * m - 0.2);\n    const pY = y + MathFloor(y / 4);\n    const pC = MathFloor(c / 4) - 2 * c;\n    const dow = (pD + pM + pY + pC) % 7;\n    return dow + (dow <= 0 ? 7 : 0);\n}\nexport function DayOfYear(year, month, day) {\n    let days = day;\n    for (let m = month - 1; m > 0; m--) {\n        days += ISODaysInMonth(year, m);\n    }\n    return days;\n}\nexport function WeekOfYear(year, month, day) {\n    const doy = DayOfYear(year, month, day);\n    const dow = DayOfWeek(year, month, day) || 7;\n    const doj = DayOfWeek(year, 1, 1);\n    const week = MathFloor((doy - dow + 10) / 7);\n    if (week < 1) {\n        if (doj === 5 || (doj === 6 && LeapYear(year - 1))) {\n            return 53;\n        }\n        else {\n            return 52;\n        }\n    }\n    if (week === 53) {\n        if ((LeapYear(year) ? 366 : 365) - doy < 4 - dow) {\n            return 1;\n        }\n    }\n    return week;\n}\nexport function DurationSign(y, mon, w, d, h, min, s, ms, µs, ns) {\n    for (const prop of [y, mon, w, d, h, min, s, ms, µs, ns]) {\n        if (prop !== 0)\n            return prop < 0 ? -1 : 1;\n    }\n    return 0;\n}\nfunction BalanceISOYearMonth(yearParam, monthParam) {\n    let year = yearParam;\n    let month = monthParam;\n    if (!NumberIsFinite(year) || !NumberIsFinite(month))\n        throw new RangeError('infinity is out of range');\n    month -= 1;\n    year += MathFloor(month / 12);\n    month %= 12;\n    if (month < 0)\n        month += 12;\n    month += 1;\n    return { year, month };\n}\nfunction BalanceISODate(yearParam, monthParam, dayParam) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    if (!NumberIsFinite(day))\n        throw new RangeError('infinity is out of range');\n    ({ year, month } = BalanceISOYearMonth(year, month));\n    let daysInYear = 0;\n    let testYear = month > 2 ? year : year - 1;\n    while (((daysInYear = LeapYear(testYear) ? 366 : 365), day < -daysInYear)) {\n        year -= 1;\n        testYear -= 1;\n        day += daysInYear;\n    }\n    testYear += 1;\n    while (((daysInYear = LeapYear(testYear) ? 366 : 365), day > daysInYear)) {\n        year += 1;\n        testYear += 1;\n        day -= daysInYear;\n    }\n    while (day < 1) {\n        ({ year, month } = BalanceISOYearMonth(year, month - 1));\n        day += ISODaysInMonth(year, month);\n    }\n    while (day > ISODaysInMonth(year, month)) {\n        day -= ISODaysInMonth(year, month);\n        ({ year, month } = BalanceISOYearMonth(year, month + 1));\n    }\n    return { year, month, day };\n}\nfunction BalanceISODateTime(yearParam, monthParam, dayParam, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    const { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam);\n    const { year, month, day } = BalanceISODate(yearParam, monthParam, dayParam + deltaDays);\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nfunction BalanceTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    if (!NumberIsFinite(hour) ||\n        !NumberIsFinite(minute) ||\n        !NumberIsFinite(second) ||\n        !NumberIsFinite(millisecond) ||\n        !NumberIsFinite(microsecond) ||\n        !NumberIsFinite(nanosecond)) {\n        throw new RangeError('infinity is out of range');\n    }\n    microsecond += MathFloor(nanosecond / 1000);\n    nanosecond = NonNegativeModulo(nanosecond, 1000);\n    millisecond += MathFloor(microsecond / 1000);\n    microsecond = NonNegativeModulo(microsecond, 1000);\n    second += MathFloor(millisecond / 1000);\n    millisecond = NonNegativeModulo(millisecond, 1000);\n    minute += MathFloor(second / 60);\n    second = NonNegativeModulo(second, 60);\n    hour += MathFloor(minute / 60);\n    minute = NonNegativeModulo(minute, 60);\n    const deltaDays = MathFloor(hour / 24);\n    hour = NonNegativeModulo(hour, 24);\n    return { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function TotalDurationNanoseconds(daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, offsetShift) {\n    const days = JSBI.BigInt(daysParam);\n    let nanoseconds = JSBI.BigInt(nanosecondsParam);\n    if (daysParam !== 0)\n        nanoseconds = JSBI.subtract(JSBI.BigInt(nanosecondsParam), JSBI.BigInt(offsetShift));\n    const hours = JSBI.add(JSBI.BigInt(hoursParam), JSBI.multiply(days, JSBI.BigInt(24)));\n    const minutes = JSBI.add(JSBI.BigInt(minutesParam), JSBI.multiply(hours, SIXTY));\n    const seconds = JSBI.add(JSBI.BigInt(secondsParam), JSBI.multiply(minutes, SIXTY));\n    const milliseconds = JSBI.add(JSBI.BigInt(millisecondsParam), JSBI.multiply(seconds, THOUSAND));\n    const microseconds = JSBI.add(JSBI.BigInt(microsecondsParam), JSBI.multiply(milliseconds, THOUSAND));\n    return JSBI.add(JSBI.BigInt(nanoseconds), JSBI.multiply(microseconds, THOUSAND));\n}\nfunction NanosecondsToDays(nanosecondsParam, relativeTo) {\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const sign = MathSign(JSBI.toNumber(nanosecondsParam));\n    let nanoseconds = JSBI.BigInt(nanosecondsParam);\n    let dayLengthNs = 86400e9;\n    if (sign === 0)\n        return { days: 0, nanoseconds: ZERO, dayLengthNs };\n    if (!IsTemporalZonedDateTime(relativeTo)) {\n        let days;\n        ({ quotient: days, remainder: nanoseconds } = divmod(nanoseconds, JSBI.BigInt(dayLengthNs)));\n        return { days: JSBI.toNumber(days), nanoseconds, dayLengthNs };\n    }\n    const startNs = GetSlot(relativeTo, EPOCHNANOSECONDS);\n    const start = GetSlot(relativeTo, INSTANT);\n    const endNs = JSBI.add(startNs, nanoseconds);\n    const end = new TemporalInstant(endNs);\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    // Find the difference in days only.\n    const dtStart = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, start, calendar);\n    const dtEnd = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, end, calendar);\n    let { days } = DifferenceISODateTime(GetSlot(dtStart, ISO_YEAR), GetSlot(dtStart, ISO_MONTH), GetSlot(dtStart, ISO_DAY), GetSlot(dtStart, ISO_HOUR), GetSlot(dtStart, ISO_MINUTE), GetSlot(dtStart, ISO_SECOND), GetSlot(dtStart, ISO_MILLISECOND), GetSlot(dtStart, ISO_MICROSECOND), GetSlot(dtStart, ISO_NANOSECOND), GetSlot(dtEnd, ISO_YEAR), GetSlot(dtEnd, ISO_MONTH), GetSlot(dtEnd, ISO_DAY), GetSlot(dtEnd, ISO_HOUR), GetSlot(dtEnd, ISO_MINUTE), GetSlot(dtEnd, ISO_SECOND), GetSlot(dtEnd, ISO_MILLISECOND), GetSlot(dtEnd, ISO_MICROSECOND), GetSlot(dtEnd, ISO_NANOSECOND), calendar, 'day', ObjectCreate(null));\n    let intermediateNs = AddZonedDateTime(start, timeZone, calendar, 0, 0, 0, days, 0, 0, 0, 0, 0, 0);\n    // may disambiguate\n    // If clock time after addition was in the middle of a skipped period, the\n    // endpoint was disambiguated to a later clock time. So it's possible that\n    // the resulting disambiguated result is later than endNs. If so, then back\n    // up one day and try again. Repeat if necessary (some transitions are\n    // > 24 hours) until either there's zero days left or the date duration is\n    // back inside the period where it belongs. Note that this case only can\n    // happen for positive durations because the only direction that\n    // `disambiguation: 'compatible'` can change clock time is forwards.\n    if (sign === 1) {\n        while (days > 0 && JSBI.greaterThan(intermediateNs, endNs)) {\n            --days;\n            intermediateNs = AddZonedDateTime(start, timeZone, calendar, 0, 0, 0, days, 0, 0, 0, 0, 0, 0);\n            // may do disambiguation\n        }\n    }\n    nanoseconds = JSBI.subtract(endNs, intermediateNs);\n    let isOverflow = false;\n    let relativeInstant = new TemporalInstant(intermediateNs);\n    do {\n        // calculate length of the next day (day that contains the time remainder)\n        const oneDayFartherNs = AddZonedDateTime(relativeInstant, timeZone, calendar, 0, 0, 0, sign, 0, 0, 0, 0, 0, 0);\n        const relativeNs = GetSlot(relativeInstant, EPOCHNANOSECONDS);\n        dayLengthNs = JSBI.toNumber(JSBI.subtract(oneDayFartherNs, relativeNs));\n        isOverflow = JSBI.greaterThan(JSBI.multiply(JSBI.subtract(nanoseconds, JSBI.BigInt(dayLengthNs)), JSBI.BigInt(sign)), ZERO);\n        if (isOverflow) {\n            nanoseconds = JSBI.subtract(nanoseconds, JSBI.BigInt(dayLengthNs));\n            relativeInstant = new TemporalInstant(oneDayFartherNs);\n            days += sign;\n        }\n    } while (isOverflow);\n    return { days, nanoseconds, dayLengthNs: MathAbs(dayLengthNs) };\n}\nexport function BalanceDuration(daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, largestUnit, relativeTo = undefined) {\n    let days = daysParam;\n    let nanosecondsBigInt, microsecondsBigInt, millisecondsBigInt, secondsBigInt, minutesBigInt, hoursBigInt;\n    if (IsTemporalZonedDateTime(relativeTo)) {\n        const endNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), GetSlot(relativeTo, TIME_ZONE), GetSlot(relativeTo, CALENDAR), 0, 0, 0, days, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam);\n        const startNs = GetSlot(relativeTo, EPOCHNANOSECONDS);\n        nanosecondsBigInt = JSBI.subtract(endNs, startNs);\n    }\n    else {\n        nanosecondsBigInt = TotalDurationNanoseconds(days, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, 0);\n    }\n    if (largestUnit === 'year' || largestUnit === 'month' || largestUnit === 'week' || largestUnit === 'day') {\n        ({ days, nanoseconds: nanosecondsBigInt } = NanosecondsToDays(nanosecondsBigInt, relativeTo));\n    }\n    else {\n        days = 0;\n    }\n    const sign = JSBI.lessThan(nanosecondsBigInt, ZERO) ? -1 : 1;\n    nanosecondsBigInt = abs(nanosecondsBigInt);\n    microsecondsBigInt = millisecondsBigInt = secondsBigInt = minutesBigInt = hoursBigInt = ZERO;\n    switch (largestUnit) {\n        case 'year':\n        case 'month':\n        case 'week':\n        case 'day':\n        case 'hour':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = divmod(nanosecondsBigInt, THOUSAND));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = divmod(microsecondsBigInt, THOUSAND));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = divmod(millisecondsBigInt, THOUSAND));\n            ({ quotient: minutesBigInt, remainder: secondsBigInt } = divmod(secondsBigInt, SIXTY));\n            ({ quotient: hoursBigInt, remainder: minutesBigInt } = divmod(minutesBigInt, SIXTY));\n            break;\n        case 'minute':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = divmod(nanosecondsBigInt, THOUSAND));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = divmod(microsecondsBigInt, THOUSAND));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = divmod(millisecondsBigInt, THOUSAND));\n            ({ quotient: minutesBigInt, remainder: secondsBigInt } = divmod(secondsBigInt, SIXTY));\n            break;\n        case 'second':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = divmod(nanosecondsBigInt, THOUSAND));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = divmod(microsecondsBigInt, THOUSAND));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = divmod(millisecondsBigInt, THOUSAND));\n            break;\n        case 'millisecond':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = divmod(nanosecondsBigInt, THOUSAND));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = divmod(microsecondsBigInt, THOUSAND));\n            break;\n        case 'microsecond':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = divmod(nanosecondsBigInt, THOUSAND));\n            break;\n        case 'nanosecond':\n            break;\n        default:\n            throw new Error('assert not reached');\n    }\n    const hours = JSBI.toNumber(hoursBigInt) * sign;\n    const minutes = JSBI.toNumber(minutesBigInt) * sign;\n    const seconds = JSBI.toNumber(secondsBigInt) * sign;\n    const milliseconds = JSBI.toNumber(millisecondsBigInt) * sign;\n    const microseconds = JSBI.toNumber(microsecondsBigInt) * sign;\n    const nanoseconds = JSBI.toNumber(nanosecondsBigInt) * sign;\n    return { days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function UnbalanceDurationRelative(yearsParam, monthsParam, weeksParam, daysParam, largestUnit, relativeToParam) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const sign = DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    let calendar;\n    let relativeTo;\n    if (relativeToParam) {\n        relativeTo = ToTemporalDate(relativeToParam);\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    const oneYear = new TemporalDuration(sign);\n    const oneMonth = new TemporalDuration(0, sign);\n    const oneWeek = new TemporalDuration(0, 0, sign);\n    switch (largestUnit) {\n        case 'year':\n            // no-op\n            break;\n        case 'month':\n            {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for months balancing');\n                // balance years down to months\n                const dateAdd = calendar.dateAdd;\n                const dateUntil = calendar.dateUntil;\n                let relativeToDateOnly = relativeTo;\n                while (MathAbs(years) > 0) {\n                    const newRelativeTo = CalendarDateAdd(calendar, relativeToDateOnly, oneYear, undefined, dateAdd);\n                    const untilOptions = ObjectCreate(null);\n                    untilOptions.largestUnit = 'month';\n                    const untilResult = CalendarDateUntil(calendar, relativeToDateOnly, newRelativeTo, untilOptions, dateUntil);\n                    const oneYearMonths = GetSlot(untilResult, MONTHS);\n                    relativeToDateOnly = newRelativeTo;\n                    months += oneYearMonths;\n                    years -= sign;\n                }\n            }\n            break;\n        case 'week':\n            if (!calendar)\n                throw new RangeError('a starting point is required for weeks balancing');\n            // balance years down to days\n            while (MathAbs(years) > 0) {\n                let oneYearDays;\n                ({ relativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n                days += oneYearDays;\n                years -= sign;\n            }\n            // balance months down to days\n            while (MathAbs(months) > 0) {\n                let oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n                days += oneMonthDays;\n                months -= sign;\n            }\n            break;\n        default:\n            // balance years down to days\n            while (MathAbs(years) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneYearDays;\n                ({ relativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n                days += oneYearDays;\n                years -= sign;\n            }\n            // balance months down to days\n            while (MathAbs(months) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n                days += oneMonthDays;\n                months -= sign;\n            }\n            // balance weeks down to days\n            while (MathAbs(weeks) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneWeekDays;\n                ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n                days += oneWeekDays;\n                weeks -= sign;\n            }\n            break;\n    }\n    return { years, months, weeks, days };\n}\nexport function BalanceDurationRelative(yearsParam, monthsParam, weeksParam, daysParam, largestUnit, relativeToParam) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const sign = DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    if (sign === 0)\n        return { years, months, weeks, days };\n    let calendar;\n    let relativeTo;\n    if (relativeToParam) {\n        relativeTo = ToTemporalDate(relativeToParam);\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    const oneYear = new TemporalDuration(sign);\n    const oneMonth = new TemporalDuration(0, sign);\n    const oneWeek = new TemporalDuration(0, 0, sign);\n    switch (largestUnit) {\n        case 'year': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for years balancing');\n            // balance days up to years\n            let newRelativeTo, oneYearDays;\n            ({ relativeTo: newRelativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n            while (MathAbs(days) >= MathAbs(oneYearDays)) {\n                days -= oneYearDays;\n                years += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n            }\n            // balance days up to months\n            let oneMonthDays;\n            ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                days -= oneMonthDays;\n                months += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            // balance months up to years\n            const dateAdd = calendar.dateAdd;\n            newRelativeTo = CalendarDateAdd(calendar, relativeTo, oneYear, undefined, dateAdd);\n            const dateUntil = calendar.dateUntil;\n            const untilOptions = ObjectCreate(null);\n            untilOptions.largestUnit = 'month';\n            let untilResult = CalendarDateUntil(calendar, relativeTo, newRelativeTo, untilOptions, dateUntil);\n            let oneYearMonths = GetSlot(untilResult, MONTHS);\n            while (MathAbs(months) >= MathAbs(oneYearMonths)) {\n                months -= oneYearMonths;\n                years += sign;\n                relativeTo = newRelativeTo;\n                newRelativeTo = CalendarDateAdd(calendar, relativeTo, oneYear, undefined, dateAdd);\n                const untilOptions = ObjectCreate(null);\n                untilOptions.largestUnit = 'month';\n                untilResult = CalendarDateUntil(calendar, relativeTo, newRelativeTo, untilOptions, dateUntil);\n                oneYearMonths = GetSlot(untilResult, MONTHS);\n            }\n            break;\n        }\n        case 'month': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for months balancing');\n            // balance days up to months\n            let newRelativeTo, oneMonthDays;\n            ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                days -= oneMonthDays;\n                months += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            break;\n        }\n        case 'week': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for weeks balancing');\n            // balance days up to weeks\n            let newRelativeTo, oneWeekDays;\n            ({ relativeTo: newRelativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            while (MathAbs(days) >= MathAbs(oneWeekDays)) {\n                days -= oneWeekDays;\n                weeks += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            }\n            break;\n        }\n        default:\n            // no-op\n            break;\n    }\n    return { years, months, weeks, days };\n}\nexport function CalculateOffsetShift(relativeTo, y, mon, w, d) {\n    if (IsTemporalZonedDateTime(relativeTo)) {\n        const instant = GetSlot(relativeTo, INSTANT);\n        const timeZone = GetSlot(relativeTo, TIME_ZONE);\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const offsetBefore = GetOffsetNanosecondsFor(timeZone, instant);\n        const after = AddZonedDateTime(instant, timeZone, calendar, y, mon, w, d, 0, 0, 0, 0, 0, 0);\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        const instantAfter = new TemporalInstant(after);\n        const offsetAfter = GetOffsetNanosecondsFor(timeZone, instantAfter);\n        return offsetAfter - offsetBefore;\n    }\n    return 0;\n}\nexport function CreateNegatedTemporalDuration(duration) {\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    return new TemporalDuration(-GetSlot(duration, YEARS), -GetSlot(duration, MONTHS), -GetSlot(duration, WEEKS), -GetSlot(duration, DAYS), -GetSlot(duration, HOURS), -GetSlot(duration, MINUTES), -GetSlot(duration, SECONDS), -GetSlot(duration, MILLISECONDS), -GetSlot(duration, MICROSECONDS), -GetSlot(duration, NANOSECONDS));\n}\nexport function ConstrainToRange(value, min, max) {\n    // Math.Max accepts undefined values and returns NaN. Undefined values are\n    // used for optional params in the method below.\n    return MathMin(max, MathMax(min, value));\n}\nfunction ConstrainISODate(year, monthParam, dayParam) {\n    const month = ConstrainToRange(monthParam, 1, 12);\n    const day = ConstrainToRange(dayParam, 1, ISODaysInMonth(year, month));\n    return { year, month, day };\n}\nfunction ConstrainTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    const hour = ConstrainToRange(hourParam, 0, 23);\n    const minute = ConstrainToRange(minuteParam, 0, 59);\n    const second = ConstrainToRange(secondParam, 0, 59);\n    const millisecond = ConstrainToRange(millisecondParam, 0, 999);\n    const microsecond = ConstrainToRange(microsecondParam, 0, 999);\n    const nanosecond = ConstrainToRange(nanosecondParam, 0, 999);\n    return { hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RejectToRange(value, min, max) {\n    if (value < min || value > max)\n        throw new RangeError(`value out of range: ${min} <= ${value} <= ${max}`);\n}\nfunction RejectISODate(year, month, day) {\n    RejectToRange(month, 1, 12);\n    RejectToRange(day, 1, ISODaysInMonth(year, month));\n}\nfunction RejectDateRange(year, month, day) {\n    // Noon avoids trouble at edges of DateTime range (excludes midnight)\n    RejectDateTimeRange(year, month, day, 12, 0, 0, 0, 0, 0);\n}\nexport function RejectTime(hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectToRange(hour, 0, 23);\n    RejectToRange(minute, 0, 59);\n    RejectToRange(second, 0, 59);\n    RejectToRange(millisecond, 0, 999);\n    RejectToRange(microsecond, 0, 999);\n    RejectToRange(nanosecond, 0, 999);\n}\nfunction RejectDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectISODate(year, month, day);\n    RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n}\nfunction RejectDateTimeRange(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectToRange(year, YEAR_MIN, YEAR_MAX);\n    // Reject any DateTime 24 hours or more outside the Instant range\n    if ((year === YEAR_MIN &&\n        null ==\n            GetEpochFromISOParts(year, month, day + 1, hour, minute, second, millisecond, microsecond, nanosecond - 1)) ||\n        (year === YEAR_MAX &&\n            null ==\n                GetEpochFromISOParts(year, month, day - 1, hour, minute, second, millisecond, microsecond, nanosecond + 1))) {\n        throw new RangeError('DateTime outside of supported range');\n    }\n}\nexport function ValidateEpochNanoseconds(epochNanoseconds) {\n    if (JSBI.lessThan(epochNanoseconds, NS_MIN) || JSBI.greaterThan(epochNanoseconds, NS_MAX)) {\n        throw new RangeError('Instant outside of supported range');\n    }\n}\nfunction RejectYearMonthRange(year, month) {\n    RejectToRange(year, YEAR_MIN, YEAR_MAX);\n    if (year === YEAR_MIN) {\n        RejectToRange(month, 4, 12);\n    }\n    else if (year === YEAR_MAX) {\n        RejectToRange(month, 1, 9);\n    }\n}\nexport function RejectDuration(y, mon, w, d, h, min, s, ms, µs, ns) {\n    const sign = DurationSign(y, mon, w, d, h, min, s, ms, µs, ns);\n    for (const prop of [y, mon, w, d, h, min, s, ms, µs, ns]) {\n        if (!NumberIsFinite(prop))\n            throw new RangeError('infinite values not allowed as duration fields');\n        const propSign = MathSign(prop);\n        if (propSign !== 0 && propSign !== sign)\n            throw new RangeError('mixed-sign values not allowed as duration fields');\n    }\n}\nexport function DifferenceISODate(y1, m1, d1, y2, m2, d2, largestUnit) {\n    switch (largestUnit) {\n        case 'year':\n        case 'month': {\n            const sign = -CompareISODate(y1, m1, d1, y2, m2, d2);\n            if (sign === 0)\n                return { years: 0, months: 0, weeks: 0, days: 0 };\n            const start = { year: y1, month: m1, day: d1 };\n            const end = { year: y2, month: m2, day: d2 };\n            let years = end.year - start.year;\n            let mid = AddISODate(y1, m1, d1, years, 0, 0, 0, 'constrain');\n            let midSign = -CompareISODate(mid.year, mid.month, mid.day, y2, m2, d2);\n            if (midSign === 0) {\n                return largestUnit === 'year'\n                    ? { years, months: 0, weeks: 0, days: 0 }\n                    : { years: 0, months: years * 12, weeks: 0, days: 0 };\n            }\n            let months = end.month - start.month;\n            if (midSign !== sign) {\n                years -= sign;\n                months += sign * 12;\n            }\n            mid = AddISODate(y1, m1, d1, years, months, 0, 0, 'constrain');\n            midSign = -CompareISODate(mid.year, mid.month, mid.day, y2, m2, d2);\n            if (midSign === 0) {\n                return largestUnit === 'year'\n                    ? { years, months, weeks: 0, days: 0 }\n                    : { years: 0, months: months + years * 12, weeks: 0, days: 0 };\n            }\n            if (midSign !== sign) {\n                // The end date is later in the month than mid date (or earlier for\n                // negative durations). Back up one month.\n                months -= sign;\n                if (months === -sign) {\n                    years -= sign;\n                    months = 11 * sign;\n                }\n                mid = AddISODate(y1, m1, d1, years, months, 0, 0, 'constrain');\n            }\n            let days = 0;\n            // If we get here, months and years are correct (no overflow), and `mid`\n            // is within the range from `start` to `end`. To count the days between\n            // `mid` and `end`, there are 3 cases:\n            // 1) same month: use simple subtraction\n            // 2) end is previous month from intermediate (negative duration)\n            // 3) end is next month from intermediate (positive duration)\n            if (mid.month === end.month) {\n                // 1) same month: use simple subtraction\n                days = end.day - mid.day;\n            }\n            else if (sign < 0) {\n                // 2) end is previous month from intermediate (negative duration)\n                // Example: intermediate: Feb 1, end: Jan 30, DaysInMonth = 31, days = -2\n                days = -mid.day - (ISODaysInMonth(end.year, end.month) - end.day);\n            }\n            else {\n                // 3) end is next month from intermediate (positive duration)\n                // Example: intermediate: Jan 29, end: Feb 1, DaysInMonth = 31, days = 3\n                days = end.day + (ISODaysInMonth(mid.year, mid.month) - mid.day);\n            }\n            if (largestUnit === 'month') {\n                months += years * 12;\n                years = 0;\n            }\n            return { years, months, weeks: 0, days };\n        }\n        case 'week':\n        case 'day': {\n            let larger, smaller, sign;\n            if (CompareISODate(y1, m1, d1, y2, m2, d2) < 0) {\n                smaller = { year: y1, month: m1, day: d1 };\n                larger = { year: y2, month: m2, day: d2 };\n                sign = 1;\n            }\n            else {\n                smaller = { year: y2, month: m2, day: d2 };\n                larger = { year: y1, month: m1, day: d1 };\n                sign = -1;\n            }\n            let days = DayOfYear(larger.year, larger.month, larger.day) - DayOfYear(smaller.year, smaller.month, smaller.day);\n            for (let year = smaller.year; year < larger.year; ++year) {\n                days += LeapYear(year) ? 366 : 365;\n            }\n            let weeks = 0;\n            if (largestUnit === 'week') {\n                weeks = MathFloor(days / 7);\n                days %= 7;\n            }\n            weeks *= sign;\n            days *= sign;\n            return { years: 0, months: 0, weeks, days };\n        }\n        default:\n            throw new Error('assert not reached');\n    }\n}\nfunction DifferenceTime(h1, min1, s1, ms1, µs1, ns1, h2, min2, s2, ms2, µs2, ns2) {\n    let hours = h2 - h1;\n    let minutes = min2 - min1;\n    let seconds = s2 - s1;\n    let milliseconds = ms2 - ms1;\n    let microseconds = µs2 - µs1;\n    let nanoseconds = ns2 - ns1;\n    const sign = DurationSign(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    hours *= sign;\n    minutes *= sign;\n    seconds *= sign;\n    milliseconds *= sign;\n    microseconds *= sign;\n    nanoseconds *= sign;\n    let deltaDays = 0;\n    ({\n        deltaDays,\n        hour: hours,\n        minute: minutes,\n        second: seconds,\n        millisecond: milliseconds,\n        microsecond: microseconds,\n        nanosecond: nanoseconds\n    } = BalanceTime(hours, minutes, seconds, milliseconds, microseconds, nanoseconds));\n    if (deltaDays != 0)\n        throw new Error('assertion failure in DifferenceTime: _bt_.[[Days]] should be 0');\n    hours *= sign;\n    minutes *= sign;\n    seconds *= sign;\n    milliseconds *= sign;\n    microseconds *= sign;\n    nanoseconds *= sign;\n    return { hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction DifferenceInstant(ns1, ns2, increment, unit, roundingMode) {\n    const diff = JSBI.subtract(ns2, ns1);\n    const remainder = JSBI.remainder(diff, JSBI.BigInt(86400e9));\n    const wholeDays = JSBI.subtract(diff, remainder);\n    const roundedRemainder = RoundNumberToIncrement(remainder, nsPerTimeUnit[unit] * increment, roundingMode);\n    const roundedDiff = JSBI.add(wholeDays, roundedRemainder);\n    const nanoseconds = JSBI.toNumber(JSBI.remainder(roundedDiff, THOUSAND));\n    const microseconds = JSBI.toNumber(JSBI.remainder(JSBI.divide(roundedDiff, THOUSAND), THOUSAND));\n    const milliseconds = JSBI.toNumber(JSBI.remainder(JSBI.divide(roundedDiff, MILLION), THOUSAND));\n    const seconds = JSBI.toNumber(JSBI.divide(roundedDiff, BILLION));\n    return { seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction DifferenceISODateTime(y1Param, mon1Param, d1Param, h1, min1, s1, ms1, µs1, ns1, y2, mon2, d2, h2, min2, s2, ms2, µs2, ns2, calendar, largestUnit, options) {\n    let y1 = y1Param;\n    let mon1 = mon1Param;\n    let d1 = d1Param;\n    let { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = DifferenceTime(h1, min1, s1, ms1, µs1, ns1, h2, min2, s2, ms2, µs2, ns2);\n    const timeSign = DurationSign(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    const dateSign = CompareISODate(y2, mon2, d2, y1, mon1, d1);\n    if (dateSign === -timeSign) {\n        ({ year: y1, month: mon1, day: d1 } = BalanceISODate(y1, mon1, d1 - timeSign));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(-timeSign, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    }\n    const date1 = CreateTemporalDate(y1, mon1, d1, calendar);\n    const date2 = CreateTemporalDate(y2, mon2, d2, calendar);\n    const dateLargestUnit = LargerOfTwoTemporalUnits('day', largestUnit);\n    const untilOptions = MergeLargestUnitOption(options, dateLargestUnit);\n    // TODO untilOptions doesn't want to compile as it seems that smallestUnit is not clamped?\n    // Type 'SmallestUnit<DateTimeUnit> | undefined' is not assignable to type\n    //      'SmallestUnit<\"year\" | \"month\" | \"day\" | \"week\"> | undefined'.\n    // Type '\"hour\"' is not assignable to type\n    //      'SmallestUnit<\"year\" | \"month\" | \"day\" | \"week\"> | undefined'.ts(2345)\n    let { years, months, weeks, days } = CalendarDateUntil(calendar, date1, date2, untilOptions);\n    // Signs of date part and time part may not agree; balance them together\n    ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction DifferenceZonedDateTime(ns1, ns2, timeZone, calendar, largestUnit, options) {\n    const nsDiff = JSBI.subtract(ns2, ns1);\n    if (JSBI.equal(nsDiff, ZERO)) {\n        return {\n            years: 0,\n            months: 0,\n            weeks: 0,\n            days: 0,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            milliseconds: 0,\n            microseconds: 0,\n            nanoseconds: 0\n        };\n    }\n    // Find the difference in dates only.\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const start = new TemporalInstant(ns1);\n    const end = new TemporalInstant(ns2);\n    const dtStart = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, start, calendar);\n    const dtEnd = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, end, calendar);\n    let { years, months, weeks, days } = DifferenceISODateTime(GetSlot(dtStart, ISO_YEAR), GetSlot(dtStart, ISO_MONTH), GetSlot(dtStart, ISO_DAY), GetSlot(dtStart, ISO_HOUR), GetSlot(dtStart, ISO_MINUTE), GetSlot(dtStart, ISO_SECOND), GetSlot(dtStart, ISO_MILLISECOND), GetSlot(dtStart, ISO_MICROSECOND), GetSlot(dtStart, ISO_NANOSECOND), GetSlot(dtEnd, ISO_YEAR), GetSlot(dtEnd, ISO_MONTH), GetSlot(dtEnd, ISO_DAY), GetSlot(dtEnd, ISO_HOUR), GetSlot(dtEnd, ISO_MINUTE), GetSlot(dtEnd, ISO_SECOND), GetSlot(dtEnd, ISO_MILLISECOND), GetSlot(dtEnd, ISO_MICROSECOND), GetSlot(dtEnd, ISO_NANOSECOND), calendar, largestUnit, options);\n    const intermediateNs = AddZonedDateTime(start, timeZone, calendar, years, months, weeks, 0, 0, 0, 0, 0, 0, 0);\n    // may disambiguate\n    let timeRemainderNs = JSBI.subtract(ns2, intermediateNs);\n    const intermediate = CreateTemporalZonedDateTime(intermediateNs, timeZone, calendar);\n    ({ nanoseconds: timeRemainderNs, days } = NanosecondsToDays(timeRemainderNs, intermediate));\n    // Finally, merge the date and time durations and return the merged result.\n    const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, 0, 0, 0, JSBI.toNumber(timeRemainderNs), 'hour');\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\n// TODO: does it make sense to explicitly union the other and options types for each operation?\nexport function DifferenceTemporalInstant(operation, instant, otherParam, optionsParam) {\n    const other = ToTemporalInstant(otherParam);\n    let first, second;\n    if (operation === 'until') {\n        [first, second] = [instant, other];\n    }\n    else {\n        [first, second] = [other, instant];\n    }\n    const options = GetOptionsObject(optionsParam);\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'time', 'nanosecond');\n    const defaultLargestUnit = LargerOfTwoTemporalUnits('second', smallestUnit);\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'time', 'auto');\n    if (largestUnit === 'auto')\n        largestUnit = defaultLargestUnit;\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    const roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    const MAX_DIFFERENCE_INCREMENTS = {\n        hour: 24,\n        minute: 60,\n        second: 60,\n        millisecond: 1000,\n        microsecond: 1000,\n        nanosecond: 1000\n    };\n    const roundingIncrement = ToTemporalRoundingIncrement(options, MAX_DIFFERENCE_INCREMENTS[smallestUnit], false);\n    const onens = GetSlot(first, EPOCHNANOSECONDS);\n    const twons = GetSlot(second, EPOCHNANOSECONDS);\n    let { seconds, milliseconds, microseconds, nanoseconds } = DifferenceInstant(onens, twons, roundingIncrement, smallestUnit, roundingMode);\n    let hours, minutes;\n    ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n}\nexport function DifferenceTemporalPlainDate(operation, plainDate, otherParam, optionsParam) {\n    const sign = operation === 'since' ? -1 : 1;\n    const other = ToTemporalDate(otherParam);\n    const calendar = GetSlot(plainDate, CALENDAR);\n    const otherCalendar = GetSlot(other, CALENDAR);\n    const calendarId = ToString(calendar);\n    const otherCalendarId = ToString(otherCalendar);\n    if (calendarId !== otherCalendarId) {\n        throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n    }\n    const options = GetOptionsObject(optionsParam);\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'date', 'day');\n    const defaultLargestUnit = LargerOfTwoTemporalUnits('day', smallestUnit);\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'date', 'auto');\n    if (largestUnit === 'auto')\n        largestUnit = defaultLargestUnit;\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    let roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    if (operation === 'since')\n        roundingMode = NegateTemporalRoundingMode(roundingMode);\n    const roundingIncrement = ToTemporalRoundingIncrement(options, undefined, false);\n    const untilOptions = MergeLargestUnitOption(options, largestUnit);\n    let { years, months, weeks, days } = CalendarDateUntil(calendar, plainDate, other, untilOptions);\n    if (smallestUnit !== 'day' || roundingIncrement !== 1) {\n        ({ years, months, weeks, days } = RoundDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, roundingMode, plainDate));\n    }\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(sign * years, sign * months, sign * weeks, sign * days, 0, 0, 0, 0, 0, 0);\n}\nexport function DifferenceTemporalPlainDateTime(operation, plainDateTime, otherParam, optionsParam) {\n    const sign = operation === 'since' ? -1 : 1;\n    const other = ToTemporalDateTime(otherParam);\n    const calendar = GetSlot(plainDateTime, CALENDAR);\n    const otherCalendar = GetSlot(other, CALENDAR);\n    const calendarId = ToString(calendar);\n    const otherCalendarId = ToString(otherCalendar);\n    if (calendarId !== otherCalendarId) {\n        throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n    }\n    const options = GetOptionsObject(optionsParam);\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'datetime', 'nanosecond');\n    const defaultLargestUnit = LargerOfTwoTemporalUnits('day', smallestUnit);\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'datetime', 'auto');\n    if (largestUnit === 'auto')\n        largestUnit = defaultLargestUnit;\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    let roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    if (operation === 'since')\n        roundingMode = NegateTemporalRoundingMode(roundingMode);\n    const roundingIncrement = ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n    let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = DifferenceISODateTime(GetSlot(plainDateTime, ISO_YEAR), GetSlot(plainDateTime, ISO_MONTH), GetSlot(plainDateTime, ISO_DAY), GetSlot(plainDateTime, ISO_HOUR), GetSlot(plainDateTime, ISO_MINUTE), GetSlot(plainDateTime, ISO_SECOND), GetSlot(plainDateTime, ISO_MILLISECOND), GetSlot(plainDateTime, ISO_MICROSECOND), GetSlot(plainDateTime, ISO_NANOSECOND), GetSlot(other, ISO_YEAR), GetSlot(other, ISO_MONTH), GetSlot(other, ISO_DAY), GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND), calendar, largestUnit, options);\n    const relativeTo = TemporalDateTimeToDate(plainDateTime);\n    ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n    ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(sign * years, sign * months, sign * weeks, sign * days, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds);\n}\nexport function DifferenceTemporalPlainTime(operation, plainTime, otherParam, optionsParam) {\n    const sign = operation === 'since' ? -1 : 1;\n    const other = ToTemporalTime(otherParam);\n    const options = GetOptionsObject(optionsParam);\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'time', 'auto');\n    if (largestUnit === 'auto')\n        largestUnit = 'hour';\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'time', 'nanosecond');\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    let roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    if (operation === 'since')\n        roundingMode = NegateTemporalRoundingMode(roundingMode);\n    const MAX_INCREMENTS = {\n        hour: 24,\n        minute: 60,\n        second: 60,\n        millisecond: 1000,\n        microsecond: 1000,\n        nanosecond: 1000\n    };\n    const roundingIncrement = ToTemporalRoundingIncrement(options, MAX_INCREMENTS[smallestUnit], false);\n    let { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = DifferenceTime(GetSlot(plainTime, ISO_HOUR), GetSlot(plainTime, ISO_MINUTE), GetSlot(plainTime, ISO_SECOND), GetSlot(plainTime, ISO_MILLISECOND), GetSlot(plainTime, ISO_MICROSECOND), GetSlot(plainTime, ISO_NANOSECOND), GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND));\n    ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = RoundDuration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode));\n    ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(0, 0, 0, 0, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds);\n}\nexport function DifferenceTemporalPlainYearMonth(operation, yearMonth, otherParam, optionsParam) {\n    const sign = operation === 'since' ? -1 : 1;\n    const other = ToTemporalYearMonth(otherParam);\n    const calendar = GetSlot(yearMonth, CALENDAR);\n    const otherCalendar = GetSlot(other, CALENDAR);\n    const calendarID = ToString(calendar);\n    const otherCalendarID = ToString(otherCalendar);\n    if (calendarID !== otherCalendarID) {\n        throw new RangeError(`cannot compute difference between months of ${calendarID} and ${otherCalendarID} calendars`);\n    }\n    const options = GetOptionsObject(optionsParam);\n    const ALLOWED_UNITS = SINGULAR_PLURAL_UNITS.reduce((allowed, [p, s, c]) => {\n        if (c === 'date' && s !== 'week' && s !== 'day')\n            allowed.push(s, p);\n        return allowed;\n    }, []);\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'date', 'month');\n    if (smallestUnit === 'week' || smallestUnit === 'day') {\n        throw new RangeError(`smallestUnit must be one of ${ALLOWED_UNITS.join(', ')}, not ${smallestUnit}`);\n    }\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'date', 'auto');\n    if (largestUnit === 'week' || largestUnit === 'day') {\n        throw new RangeError(`largestUnit must be one of ${ALLOWED_UNITS.join(', ')}, not ${largestUnit}`);\n    }\n    if (largestUnit === 'auto')\n        largestUnit = 'year';\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    let roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    if (operation === 'since')\n        roundingMode = NegateTemporalRoundingMode(roundingMode);\n    const roundingIncrement = ToTemporalRoundingIncrement(options, undefined, false);\n    const fieldNames = CalendarFields(calendar, ['monthCode', 'year']);\n    const otherFields = PrepareTemporalFields(other, fieldNames, []);\n    otherFields.day = 1;\n    const thisFields = PrepareTemporalFields(yearMonth, fieldNames, []);\n    thisFields.day = 1;\n    // The calls to PrepareTemporalFields don't mark day as a required property,\n    // and TS doesn't automatically narrow the type of the object because of the\n    // assignments above, so we must \"cast\" the inputs.\n    const otherDate = CalendarDateFromFields(calendar, otherFields);\n    const thisDate = CalendarDateFromFields(calendar, thisFields);\n    const untilOptions = MergeLargestUnitOption(options, largestUnit);\n    let { years, months } = CalendarDateUntil(calendar, thisDate, otherDate, untilOptions);\n    if (smallestUnit !== 'month' || roundingIncrement !== 1) {\n        ({ years, months } = RoundDuration(years, months, 0, 0, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, roundingMode, thisDate));\n    }\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(sign * years, sign * months, 0, 0, 0, 0, 0, 0, 0, 0);\n}\nexport function DifferenceTemporalZonedDateTime(operation, zonedDateTime, otherParam, optionsParam) {\n    const sign = operation === 'since' ? -1 : 1;\n    const other = ToTemporalZonedDateTime(otherParam);\n    const calendar = GetSlot(zonedDateTime, CALENDAR);\n    const otherCalendar = GetSlot(other, CALENDAR);\n    const calendarId = ToString(calendar);\n    const otherCalendarId = ToString(otherCalendar);\n    if (calendarId !== otherCalendarId) {\n        throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n    }\n    const options = GetOptionsObject(optionsParam);\n    const smallestUnit = GetTemporalUnit(options, 'smallestUnit', 'datetime', 'nanosecond');\n    const defaultLargestUnit = LargerOfTwoTemporalUnits('hour', smallestUnit);\n    let largestUnit = GetTemporalUnit(options, 'largestUnit', 'datetime', 'auto');\n    if (largestUnit === 'auto')\n        largestUnit = defaultLargestUnit;\n    if (LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n    let roundingMode = ToTemporalRoundingMode(options, 'trunc');\n    if (operation === 'since')\n        roundingMode = NegateTemporalRoundingMode(roundingMode);\n    const roundingIncrement = ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n    const ns1 = GetSlot(zonedDateTime, EPOCHNANOSECONDS);\n    const ns2 = GetSlot(other, EPOCHNANOSECONDS);\n    let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n    if (largestUnit !== 'year' && largestUnit !== 'month' && largestUnit !== 'week' && largestUnit !== 'day') {\n        // The user is only asking for a time difference, so return difference of instants.\n        years = 0;\n        months = 0;\n        weeks = 0;\n        days = 0;\n        ({ seconds, milliseconds, microseconds, nanoseconds } = DifferenceInstant(ns1, ns2, roundingIncrement, \n        // TODO this doesn't type-check as it includes >= day-size units\n        // This is probably safe as the typing for ToSmallestTemporalUnit isn't\n        // very good.\n        smallestUnit, roundingMode));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    }\n    else {\n        const timeZone = GetSlot(zonedDateTime, TIME_ZONE);\n        if (!TimeZoneEquals(timeZone, GetSlot(other, TIME_ZONE))) {\n            throw new RangeError(\"When calculating difference between time zones, largestUnit must be 'hours' \" +\n                'or smaller because day lengths can vary between time zones due to DST or time zone offset changes.');\n        }\n        const untilOptions = MergeLargestUnitOption(options, largestUnit);\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            DifferenceZonedDateTime(ns1, ns2, timeZone, calendar, largestUnit, untilOptions));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, zonedDateTime));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            AdjustRoundedDurationDays(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, zonedDateTime));\n    }\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(sign * years, sign * months, sign * weeks, sign * days, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds);\n}\nexport function AddISODate(yearParam, monthParam, dayParam, yearsParam, monthsParam, weeksParam, daysParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    year += years;\n    month += months;\n    ({ year, month } = BalanceISOYearMonth(year, month));\n    ({ year, month, day } = RegulateISODate(year, month, day, overflow));\n    days += 7 * weeks;\n    day += days;\n    ({ year, month, day } = BalanceISODate(year, month, day));\n    return { year, month, day };\n}\nfunction AddTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    hour += hours;\n    minute += minutes;\n    second += seconds;\n    millisecond += milliseconds;\n    microsecond += microseconds;\n    nanosecond += nanoseconds;\n    let deltaDays = 0;\n    ({ deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceTime(hour, minute, second, millisecond, microsecond, nanosecond));\n    return { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nfunction AddDuration(y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1, y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2, relativeTo) {\n    const largestUnit1 = DefaultTemporalLargestUnit(y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1);\n    const largestUnit2 = DefaultTemporalLargestUnit(y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2);\n    const largestUnit = LargerOfTwoTemporalUnits(largestUnit1, largestUnit2);\n    let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n    if (!relativeTo) {\n        if (largestUnit === 'year' || largestUnit === 'month' || largestUnit === 'week') {\n            throw new RangeError('relativeTo is required for years, months, or weeks arithmetic');\n        }\n        years = months = weeks = 0;\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(d1 + d2, h1 + h2, min1 + min2, s1 + s2, ms1 + ms2, µs1 + µs2, ns1 + ns2, largestUnit));\n    }\n    else if (IsTemporalDate(relativeTo)) {\n        const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const dateDuration1 = new TemporalDuration(y1, mon1, w1, d1, 0, 0, 0, 0, 0, 0);\n        const dateDuration2 = new TemporalDuration(y2, mon2, w2, d2, 0, 0, 0, 0, 0, 0);\n        const dateAdd = calendar.dateAdd;\n        const intermediate = CalendarDateAdd(calendar, relativeTo, dateDuration1, undefined, dateAdd);\n        const end = CalendarDateAdd(calendar, intermediate, dateDuration2, undefined, dateAdd);\n        const dateLargestUnit = LargerOfTwoTemporalUnits('day', largestUnit);\n        const differenceOptions = ObjectCreate(null);\n        differenceOptions.largestUnit = dateLargestUnit;\n        ({ years, months, weeks, days } = CalendarDateUntil(calendar, relativeTo, end, differenceOptions));\n        // Signs of date part and time part may not agree; balance them together\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(days, h1 + h2, min1 + min2, s1 + s2, ms1 + ms2, µs1 + µs2, ns1 + ns2, largestUnit));\n    }\n    else {\n        // relativeTo is a ZonedDateTime\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        const timeZone = GetSlot(relativeTo, TIME_ZONE);\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const intermediateNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1);\n        const endNs = AddZonedDateTime(new TemporalInstant(intermediateNs), timeZone, calendar, y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2);\n        if (largestUnit !== 'year' && largestUnit !== 'month' && largestUnit !== 'week' && largestUnit !== 'day') {\n            // The user is only asking for a time difference, so return difference of instants.\n            years = 0;\n            months = 0;\n            weeks = 0;\n            days = 0;\n            ({ seconds, milliseconds, microseconds, nanoseconds } = DifferenceInstant(GetSlot(relativeTo, EPOCHNANOSECONDS), endNs, 1, 'nanosecond', 'halfExpand'));\n            ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        }\n        else {\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                DifferenceZonedDateTime(GetSlot(relativeTo, EPOCHNANOSECONDS), endNs, timeZone, calendar, largestUnit, ObjectCreate(null)));\n        }\n    }\n    RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction AddInstant(epochNanoseconds, h, min, s, ms, µs, ns) {\n    let sum = ZERO;\n    sum = JSBI.add(sum, JSBI.BigInt(ns));\n    sum = JSBI.add(sum, JSBI.multiply(JSBI.BigInt(µs), THOUSAND));\n    sum = JSBI.add(sum, JSBI.multiply(JSBI.BigInt(ms), MILLION));\n    sum = JSBI.add(sum, JSBI.multiply(JSBI.BigInt(s), BILLION));\n    sum = JSBI.add(sum, JSBI.multiply(JSBI.BigInt(min), JSBI.BigInt(60 * 1e9)));\n    sum = JSBI.add(sum, JSBI.multiply(JSBI.BigInt(h), JSBI.BigInt(60 * 60 * 1e9)));\n    const result = JSBI.add(epochNanoseconds, sum);\n    ValidateEpochNanoseconds(result);\n    return result;\n}\nfunction AddDateTime(year, month, day, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, calendar, years, months, weeks, daysParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, options) {\n    let days = daysParam;\n    // Add the time part\n    let { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = AddTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    days += deltaDays;\n    // Delegate the date part addition to the calendar\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const datePart = CreateTemporalDate(year, month, day, calendar);\n    const dateDuration = new TemporalDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const addedDate = CalendarDateAdd(calendar, datePart, dateDuration, options);\n    return {\n        year: GetSlot(addedDate, ISO_YEAR),\n        month: GetSlot(addedDate, ISO_MONTH),\n        day: GetSlot(addedDate, ISO_DAY),\n        hour,\n        minute,\n        second,\n        millisecond,\n        microsecond,\n        nanosecond\n    };\n}\nexport function AddZonedDateTime(instant, timeZone, calendar, years, months, weeks, days, h, min, s, ms, µs, ns, options) {\n    // If only time is to be added, then use Instant math. It's not OK to fall\n    // through to the date/time code below because compatible disambiguation in\n    // the PlainDateTime=>Instant conversion will change the offset of any\n    // ZonedDateTime in the repeated clock time after a backwards transition.\n    // When adding/subtracting time units and not dates, this disambiguation is\n    // not expected and so is avoided below via a fast path for time-only\n    // arithmetic.\n    // BTW, this behavior is similar in spirit to offset: 'prefer' in `with`.\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    if (DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0) === 0) {\n        return AddInstant(GetSlot(instant, EPOCHNANOSECONDS), h, min, s, ms, µs, ns);\n    }\n    // RFC 5545 requires the date portion to be added in calendar days and the\n    // time portion to be added in exact time.\n    const dt = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, instant, calendar);\n    const datePart = CreateTemporalDate(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), calendar);\n    const dateDuration = new TemporalDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const addedDate = CalendarDateAdd(calendar, datePart, dateDuration, options);\n    const dtIntermediate = CreateTemporalDateTime(GetSlot(addedDate, ISO_YEAR), GetSlot(addedDate, ISO_MONTH), GetSlot(addedDate, ISO_DAY), GetSlot(dt, ISO_HOUR), GetSlot(dt, ISO_MINUTE), GetSlot(dt, ISO_SECOND), GetSlot(dt, ISO_MILLISECOND), GetSlot(dt, ISO_MICROSECOND), GetSlot(dt, ISO_NANOSECOND), calendar);\n    // Note that 'compatible' is used below because this disambiguation behavior\n    // is required by RFC 5545.\n    const instantIntermediate = BuiltinTimeZoneGetInstantFor(timeZone, dtIntermediate, 'compatible');\n    return AddInstant(GetSlot(instantIntermediate, EPOCHNANOSECONDS), h, min, s, ms, µs, ns);\n}\nexport function AddDurationToOrSubtractDurationFromDuration(operation, duration, other, optionsParam) {\n    const sign = operation === 'subtract' ? -1 : 1;\n    let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToTemporalDurationRecord(other);\n    const options = GetOptionsObject(optionsParam);\n    const relativeTo = ToRelativeTemporalObject(options);\n    ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = AddDuration(GetSlot(duration, YEARS), GetSlot(duration, MONTHS), GetSlot(duration, WEEKS), GetSlot(duration, DAYS), GetSlot(duration, HOURS), GetSlot(duration, MINUTES), GetSlot(duration, SECONDS), GetSlot(duration, MILLISECONDS), GetSlot(duration, MICROSECONDS), GetSlot(duration, NANOSECONDS), sign * years, sign * months, sign * weeks, sign * days, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds, relativeTo));\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n}\nexport function AddDurationToOrSubtractDurationFromInstant(operation, instant, durationLike) {\n    const sign = operation === 'subtract' ? -1 : 1;\n    const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToLimitedTemporalDuration(durationLike, [\n        'years',\n        'months',\n        'weeks',\n        'days'\n    ]);\n    const ns = AddInstant(GetSlot(instant, EPOCHNANOSECONDS), sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds);\n    const Instant = GetIntrinsic('%Temporal.Instant%');\n    return new Instant(ns);\n}\nexport function AddDurationToOrSubtractDurationFromPlainDateTime(operation, dateTime, durationLike, optionsParam) {\n    const sign = operation === 'subtract' ? -1 : 1;\n    const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToTemporalDurationRecord(durationLike);\n    const options = GetOptionsObject(optionsParam);\n    const calendar = GetSlot(dateTime, CALENDAR);\n    const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = AddDateTime(GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND), calendar, sign * years, sign * months, sign * weeks, sign * days, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds, options);\n    return CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n}\nexport function AddDurationToOrSubtractDurationFromPlainTime(operation, temporalTime, durationLike) {\n    const sign = operation === 'subtract' ? -1 : 1;\n    const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToTemporalDurationRecord(durationLike);\n    let { hour, minute, second, millisecond, microsecond, nanosecond } = AddTime(GetSlot(temporalTime, ISO_HOUR), GetSlot(temporalTime, ISO_MINUTE), GetSlot(temporalTime, ISO_SECOND), GetSlot(temporalTime, ISO_MILLISECOND), GetSlot(temporalTime, ISO_MICROSECOND), GetSlot(temporalTime, ISO_NANOSECOND), sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds);\n    ({ hour, minute, second, millisecond, microsecond, nanosecond } = RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, 'reject'));\n    const PlainTime = GetIntrinsic('%Temporal.PlainTime%');\n    return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n}\nexport function AddDurationToOrSubtractDurationFromPlainYearMonth(operation, yearMonth, durationLike, optionsParam) {\n    let duration = ToTemporalDurationRecord(durationLike);\n    if (operation === 'subtract') {\n        duration = {\n            years: -duration.years,\n            months: -duration.months,\n            weeks: -duration.weeks,\n            days: -duration.days,\n            hours: -duration.hours,\n            minutes: -duration.minutes,\n            seconds: -duration.seconds,\n            milliseconds: -duration.milliseconds,\n            microseconds: -duration.microseconds,\n            nanoseconds: -duration.nanoseconds\n        };\n    }\n    let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n    ({ days } = BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 'day'));\n    const options = GetOptionsObject(optionsParam);\n    const calendar = GetSlot(yearMonth, CALENDAR);\n    const fieldNames = CalendarFields(calendar, ['monthCode', 'year']);\n    const fields = PrepareTemporalFields(yearMonth, fieldNames, []);\n    const sign = DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    fields.day = sign < 0 ? ToPositiveInteger(CalendarDaysInMonth(calendar, yearMonth)) : 1;\n    // PrepareTemporalFields returns a type where 'day' is potentially undefined,\n    // and TS doesn't narrow the type as a result of the assignment above, so we\n    // cast the fields input to the new type.\n    const startDate = CalendarDateFromFields(calendar, fields);\n    const Duration = GetIntrinsic('%Temporal.Duration%');\n    const durationToAdd = new Duration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const optionsCopy = ObjectAssign(ObjectCreate(null), options);\n    const addedDate = CalendarDateAdd(calendar, startDate, durationToAdd, options);\n    const addedDateFields = PrepareTemporalFields(addedDate, fieldNames, []);\n    return CalendarYearMonthFromFields(calendar, addedDateFields, optionsCopy);\n}\nexport function AddDurationToOrSubtractDurationFromZonedDateTime(operation, zonedDateTime, durationLike, optionsParam) {\n    const sign = operation === 'subtract' ? -1 : 1;\n    const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ToTemporalDurationRecord(durationLike);\n    const options = GetOptionsObject(optionsParam);\n    const timeZone = GetSlot(zonedDateTime, TIME_ZONE);\n    const calendar = GetSlot(zonedDateTime, CALENDAR);\n    const epochNanoseconds = AddZonedDateTime(GetSlot(zonedDateTime, INSTANT), timeZone, calendar, sign * years, sign * months, sign * weeks, sign * days, sign * hours, sign * minutes, sign * seconds, sign * milliseconds, sign * microseconds, sign * nanoseconds, options);\n    return CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n}\nfunction RoundNumberToIncrement(quantity, increment, mode) {\n    if (increment === 1)\n        return quantity;\n    let { quotient, remainder } = divmod(quantity, JSBI.BigInt(increment));\n    if (JSBI.equal(remainder, ZERO))\n        return quantity;\n    const sign = JSBI.lessThan(remainder, ZERO) ? -1 : 1;\n    switch (mode) {\n        case 'ceil':\n            if (sign > 0)\n                quotient = JSBI.add(quotient, JSBI.BigInt(sign));\n            break;\n        case 'floor':\n            if (sign < 0)\n                quotient = JSBI.add(quotient, JSBI.BigInt(sign));\n            break;\n        case 'trunc':\n            // no change needed, because divmod is a truncation\n            break;\n        case 'halfExpand':\n            // \"half up away from zero\"\n            if (JSBI.toNumber(abs(JSBI.multiply(remainder, JSBI.BigInt(2)))) >= increment) {\n                quotient = JSBI.add(quotient, JSBI.BigInt(sign));\n            }\n            break;\n    }\n    return JSBI.multiply(quotient, JSBI.BigInt(increment));\n}\nexport function RoundInstant(epochNs, increment, unit, roundingMode) {\n    // Note: NonNegativeModulo, but with BigInt\n    let remainder = JSBI.remainder(epochNs, JSBI.BigInt(86400e9));\n    if (JSBI.lessThan(remainder, ZERO))\n        remainder = JSBI.add(remainder, JSBI.BigInt(86400e9));\n    const wholeDays = JSBI.subtract(epochNs, remainder);\n    const roundedRemainder = RoundNumberToIncrement(remainder, nsPerTimeUnit[unit] * increment, roundingMode);\n    return JSBI.add(wholeDays, roundedRemainder);\n}\nexport function RoundISODateTime(yearParam, monthParam, dayParam, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, increment, unit, roundingMode, dayLengthNs = 86400e9) {\n    const { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = RoundTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, increment, unit, roundingMode, dayLengthNs);\n    const { year, month, day } = BalanceISODate(yearParam, monthParam, dayParam + deltaDays);\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode, dayLengthNs = 86400e9) {\n    let quantity = ZERO;\n    switch (unit) {\n        case 'day':\n        case 'hour':\n            quantity = JSBI.BigInt(hour);\n        // fall through\n        case 'minute':\n            quantity = JSBI.add(JSBI.multiply(quantity, SIXTY), JSBI.BigInt(minute));\n        // fall through\n        case 'second':\n            quantity = JSBI.add(JSBI.multiply(quantity, SIXTY), JSBI.BigInt(second));\n        // fall through\n        case 'millisecond':\n            quantity = JSBI.add(JSBI.multiply(quantity, THOUSAND), JSBI.BigInt(millisecond));\n        // fall through\n        case 'microsecond':\n            quantity = JSBI.add(JSBI.multiply(quantity, THOUSAND), JSBI.BigInt(microsecond));\n        // fall through\n        case 'nanosecond':\n            quantity = JSBI.add(JSBI.multiply(quantity, THOUSAND), JSBI.BigInt(nanosecond));\n    }\n    const nsPerUnit = unit === 'day' ? dayLengthNs : nsPerTimeUnit[unit];\n    const rounded = RoundNumberToIncrement(quantity, nsPerUnit * increment, roundingMode);\n    const result = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(nsPerUnit)));\n    switch (unit) {\n        case 'day':\n            return { deltaDays: result, hour: 0, minute: 0, second: 0, millisecond: 0, microsecond: 0, nanosecond: 0 };\n        case 'hour':\n            return BalanceTime(result, 0, 0, 0, 0, 0);\n        case 'minute':\n            return BalanceTime(hour, result, 0, 0, 0, 0);\n        case 'second':\n            return BalanceTime(hour, minute, result, 0, 0, 0);\n        case 'millisecond':\n            return BalanceTime(hour, minute, second, result, 0, 0);\n        case 'microsecond':\n            return BalanceTime(hour, minute, second, millisecond, result, 0);\n        case 'nanosecond':\n            return BalanceTime(hour, minute, second, millisecond, microsecond, result);\n        default:\n            throw new Error(`Invalid unit ${unit}`);\n    }\n}\nfunction DaysUntil(earlier, later) {\n    return DifferenceISODate(GetSlot(earlier, ISO_YEAR), GetSlot(earlier, ISO_MONTH), GetSlot(earlier, ISO_DAY), GetSlot(later, ISO_YEAR), GetSlot(later, ISO_MONTH), GetSlot(later, ISO_DAY), 'day').days;\n}\nfunction MoveRelativeDate(calendar, relativeToParam, duration) {\n    const later = CalendarDateAdd(calendar, relativeToParam, duration, undefined);\n    const days = DaysUntil(relativeToParam, later);\n    return { relativeTo: later, days };\n}\nexport function MoveRelativeZonedDateTime(relativeTo, years, months, weeks, days) {\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    const intermediateNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    return CreateTemporalZonedDateTime(intermediateNs, timeZone, calendar);\n}\nexport function AdjustRoundedDurationDays(yearsParam, monthsParam, weeksParam, daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, increment, unit, roundingMode, relativeTo) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    let hours = hoursParam;\n    let minutes = minutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = nanosecondsParam;\n    if (!IsTemporalZonedDateTime(relativeTo) ||\n        unit === 'year' ||\n        unit === 'month' ||\n        unit === 'week' ||\n        unit === 'day' ||\n        (unit === 'nanosecond' && increment === 1)) {\n        return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n    }\n    // There's one more round of rounding possible: if relativeTo is a\n    // ZonedDateTime, the time units could have rounded up into enough hours\n    // to exceed the day length. If this happens, grow the date part by a\n    // single day and re-run exact time rounding on the smaller remainder. DO\n    // NOT RECURSE, because once the extra hours are sucked up into the date\n    // duration, there's no way for another full day to come from the next\n    // round of rounding. And if it were possible (e.g. contrived calendar\n    // with 30-minute-long \"days\") then it'd risk an infinite loop.\n    let timeRemainderNs = TotalDurationNanoseconds(0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 0);\n    const direction = MathSign(JSBI.toNumber(timeRemainderNs));\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    const dayStart = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const dayEnd = AddZonedDateTime(new TemporalInstant(dayStart), timeZone, calendar, 0, 0, 0, direction, 0, 0, 0, 0, 0, 0);\n    const dayLengthNs = JSBI.subtract(dayEnd, dayStart);\n    if (JSBI.greaterThanOrEqual(JSBI.multiply(JSBI.subtract(timeRemainderNs, dayLengthNs), JSBI.BigInt(direction)), ZERO)) {\n        ({ years, months, weeks, days } = AddDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0, 0, 0, 0, direction, 0, 0, 0, 0, 0, 0, relativeTo));\n        timeRemainderNs = RoundInstant(JSBI.subtract(timeRemainderNs, dayLengthNs), increment, unit, roundingMode);\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, 0, 0, 0, JSBI.toNumber(timeRemainderNs), 'hour'));\n    }\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function RoundDuration(yearsParam, monthsParam, weeksParam, daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, increment, unit, roundingMode, relativeToParam = undefined) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    let hours = hoursParam;\n    let minutes = minutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = JSBI.BigInt(nanosecondsParam);\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    let calendar, zdtRelative;\n    // A cast is used below because relativeTo will be either PlainDate or\n    // undefined for the rest of this long method (after any ZDT=>PlainDate\n    // conversion below), and TS isn't smart enough to know that the type has\n    // changed. See https://github.com/microsoft/TypeScript/issues/27706.\n    let relativeTo = relativeToParam;\n    if (relativeTo) {\n        if (IsTemporalZonedDateTime(relativeTo)) {\n            zdtRelative = relativeTo;\n            relativeTo = ToTemporalDate(relativeTo);\n        }\n        else if (!IsTemporalDate(relativeTo)) {\n            throw new TypeError('starting point must be PlainDate or ZonedDateTime');\n        }\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    // First convert time units up to days, if rounding to days or higher units.\n    // If rounding relative to a ZonedDateTime, then some days may not be 24h.\n    // TS doesn't know that `dayLengthNs` is only used if the unit is day or\n    // larger. We'll cast away `undefined` when it's used lower down below.\n    let dayLengthNs;\n    if (unit === 'year' || unit === 'month' || unit === 'week' || unit === 'day') {\n        nanoseconds = TotalDurationNanoseconds(0, hours, minutes, seconds, milliseconds, microseconds, nanosecondsParam, 0);\n        let intermediate;\n        if (zdtRelative) {\n            intermediate = MoveRelativeZonedDateTime(zdtRelative, years, months, weeks, days);\n        }\n        let deltaDays;\n        let dayLength;\n        ({ days: deltaDays, nanoseconds, dayLengthNs: dayLength } = NanosecondsToDays(nanoseconds, intermediate));\n        dayLengthNs = JSBI.BigInt(dayLength);\n        days += deltaDays;\n        hours = minutes = seconds = milliseconds = microseconds = 0;\n    }\n    let total;\n    switch (unit) {\n        case 'year': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for years rounding');\n            // convert months and weeks to days by calculating difference(\n            // relativeTo + years, relativeTo + { years, months, weeks })\n            const yearsDuration = new TemporalDuration(years);\n            const dateAdd = calendar.dateAdd;\n            const yearsLater = CalendarDateAdd(calendar, relativeTo, yearsDuration, undefined, dateAdd);\n            const yearsMonthsWeeks = new TemporalDuration(years, months, weeks);\n            const yearsMonthsWeeksLater = CalendarDateAdd(calendar, relativeTo, yearsMonthsWeeks, undefined, dateAdd);\n            const monthsWeeksInDays = DaysUntil(yearsLater, yearsMonthsWeeksLater);\n            relativeTo = yearsLater;\n            days += monthsWeeksInDays;\n            const daysLater = CalendarDateAdd(calendar, relativeTo, { days }, undefined, dateAdd);\n            const untilOptions = ObjectCreate(null);\n            untilOptions.largestUnit = 'year';\n            const yearsPassed = CalendarDateUntil(calendar, relativeTo, daysLater, untilOptions).years;\n            years += yearsPassed;\n            const oldRelativeTo = relativeTo;\n            relativeTo = CalendarDateAdd(calendar, relativeTo, { years: yearsPassed }, undefined, dateAdd);\n            const daysPassed = DaysUntil(oldRelativeTo, relativeTo);\n            days -= daysPassed;\n            const oneYear = new TemporalDuration(days < 0 ? -1 : 1);\n            let { days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear);\n            // Note that `nanoseconds` below (here and in similar code for months,\n            // weeks, and days further below) isn't actually nanoseconds for the\n            // full date range.  Instead, it's a BigInt representation of total\n            // days multiplied by the number of nanoseconds in the last day of\n            // the duration. This lets us do days-or-larger rounding using BigInt\n            // math which reduces precision loss.\n            oneYearDays = MathAbs(oneYearDays);\n            // dayLengthNs is never undefined if unit is `day` or larger.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const divisor = JSBI.multiply(JSBI.BigInt(oneYearDays), dayLengthNs);\n            nanoseconds = JSBI.add(\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            JSBI.add(JSBI.multiply(divisor, JSBI.BigInt(years)), JSBI.multiply(JSBI.BigInt(days), dayLengthNs)), nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, JSBI.toNumber(JSBI.multiply(divisor, JSBI.BigInt(increment))), roundingMode);\n            total = JSBI.toNumber(nanoseconds) / JSBI.toNumber(divisor);\n            years = JSBI.toNumber(JSBI.divide(rounded, divisor));\n            nanoseconds = ZERO;\n            months = weeks = days = 0;\n            break;\n        }\n        case 'month': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for months rounding');\n            // convert weeks to days by calculating difference(relativeTo +\n            //   { years, months }, relativeTo + { years, months, weeks })\n            const yearsMonths = new TemporalDuration(years, months);\n            const dateAdd = calendar.dateAdd;\n            const yearsMonthsLater = CalendarDateAdd(calendar, relativeTo, yearsMonths, undefined, dateAdd);\n            const yearsMonthsWeeks = new TemporalDuration(years, months, weeks);\n            const yearsMonthsWeeksLater = CalendarDateAdd(calendar, relativeTo, yearsMonthsWeeks, undefined, dateAdd);\n            const weeksInDays = DaysUntil(yearsMonthsLater, yearsMonthsWeeksLater);\n            relativeTo = yearsMonthsLater;\n            days += weeksInDays;\n            // Months may be different lengths of days depending on the calendar,\n            // convert days to months in a loop as described above under 'years'.\n            const sign = MathSign(days);\n            const oneMonth = new TemporalDuration(0, days < 0 ? -1 : 1);\n            let oneMonthDays;\n            ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                months += sign;\n                days -= oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            oneMonthDays = MathAbs(oneMonthDays);\n            // dayLengthNs is never undefined if unit is `day` or larger.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const divisor = JSBI.multiply(JSBI.BigInt(oneMonthDays), dayLengthNs);\n            nanoseconds = JSBI.add(\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            JSBI.add(JSBI.multiply(divisor, JSBI.BigInt(months)), JSBI.multiply(JSBI.BigInt(days), dayLengthNs)), nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, JSBI.toNumber(JSBI.multiply(divisor, JSBI.BigInt(increment))), roundingMode);\n            total = JSBI.toNumber(nanoseconds) / JSBI.toNumber(divisor);\n            months = JSBI.toNumber(JSBI.divide(rounded, divisor));\n            nanoseconds = ZERO;\n            weeks = days = 0;\n            break;\n        }\n        case 'week': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for weeks rounding');\n            // Weeks may be different lengths of days depending on the calendar,\n            // convert days to weeks in a loop as described above under 'years'.\n            const sign = MathSign(days);\n            const oneWeek = new TemporalDuration(0, 0, days < 0 ? -1 : 1);\n            let oneWeekDays;\n            ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            while (MathAbs(days) >= MathAbs(oneWeekDays)) {\n                weeks += sign;\n                days -= oneWeekDays;\n                ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            }\n            oneWeekDays = MathAbs(oneWeekDays);\n            // dayLengthNs is never undefined if unit is `day` or larger.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const divisor = JSBI.multiply(JSBI.BigInt(oneWeekDays), dayLengthNs);\n            nanoseconds = JSBI.add(\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            JSBI.add(JSBI.multiply(divisor, JSBI.BigInt(weeks)), JSBI.multiply(JSBI.BigInt(days), dayLengthNs)), nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, JSBI.toNumber(JSBI.multiply(divisor, JSBI.BigInt(increment))), roundingMode);\n            total = JSBI.toNumber(nanoseconds) / JSBI.toNumber(divisor);\n            weeks = JSBI.toNumber(JSBI.divide(rounded, divisor));\n            nanoseconds = ZERO;\n            days = 0;\n            break;\n        }\n        case 'day': {\n            // dayLengthNs is never undefined if unit is `day` or larger.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const divisor = dayLengthNs;\n            nanoseconds = JSBI.add(JSBI.multiply(divisor, JSBI.BigInt(days)), nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, JSBI.toNumber(JSBI.multiply(divisor, JSBI.BigInt(increment))), roundingMode);\n            total = JSBI.toNumber(nanoseconds) / JSBI.toNumber(divisor);\n            days = JSBI.toNumber(JSBI.divide(rounded, divisor));\n            nanoseconds = ZERO;\n            break;\n        }\n        case 'hour': {\n            const divisor = 3600e9;\n            let allNanoseconds = JSBI.multiply(JSBI.BigInt(hours), JSBI.BigInt(3600e9));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(minutes), JSBI.BigInt(60e9)));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(seconds), BILLION));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(milliseconds), MILLION));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(microseconds), THOUSAND));\n            allNanoseconds = JSBI.add(allNanoseconds, nanoseconds);\n            total = JSBI.toNumber(allNanoseconds) / divisor;\n            const rounded = RoundNumberToIncrement(allNanoseconds, divisor * increment, roundingMode);\n            hours = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(divisor)));\n            nanoseconds = ZERO;\n            minutes = seconds = milliseconds = microseconds = 0;\n            break;\n        }\n        case 'minute': {\n            const divisor = 60e9;\n            let allNanoseconds = JSBI.multiply(JSBI.BigInt(minutes), JSBI.BigInt(60e9));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(seconds), BILLION));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(milliseconds), MILLION));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(microseconds), THOUSAND));\n            allNanoseconds = JSBI.add(allNanoseconds, nanoseconds);\n            total = JSBI.toNumber(allNanoseconds) / divisor;\n            const rounded = RoundNumberToIncrement(allNanoseconds, divisor * increment, roundingMode);\n            minutes = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(divisor)));\n            nanoseconds = ZERO;\n            seconds = milliseconds = microseconds = 0;\n            break;\n        }\n        case 'second': {\n            const divisor = 1e9;\n            let allNanoseconds = JSBI.multiply(JSBI.BigInt(seconds), BILLION);\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(milliseconds), MILLION));\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(microseconds), THOUSAND));\n            allNanoseconds = JSBI.add(allNanoseconds, nanoseconds);\n            total = JSBI.toNumber(allNanoseconds) / divisor;\n            const rounded = RoundNumberToIncrement(allNanoseconds, divisor * increment, roundingMode);\n            seconds = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(divisor)));\n            nanoseconds = ZERO;\n            milliseconds = microseconds = 0;\n            break;\n        }\n        case 'millisecond': {\n            const divisor = 1e6;\n            let allNanoseconds = JSBI.multiply(JSBI.BigInt(milliseconds), MILLION);\n            allNanoseconds = JSBI.add(allNanoseconds, JSBI.multiply(JSBI.BigInt(microseconds), THOUSAND));\n            allNanoseconds = JSBI.add(allNanoseconds, nanoseconds);\n            total = JSBI.toNumber(allNanoseconds) / divisor;\n            const rounded = RoundNumberToIncrement(allNanoseconds, divisor * increment, roundingMode);\n            milliseconds = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(divisor)));\n            nanoseconds = ZERO;\n            microseconds = 0;\n            break;\n        }\n        case 'microsecond': {\n            const divisor = 1e3;\n            let allNanoseconds = JSBI.multiply(JSBI.BigInt(microseconds), THOUSAND);\n            allNanoseconds = JSBI.add(allNanoseconds, nanoseconds);\n            total = JSBI.toNumber(allNanoseconds) / divisor;\n            const rounded = RoundNumberToIncrement(allNanoseconds, divisor * increment, roundingMode);\n            microseconds = JSBI.toNumber(JSBI.divide(rounded, JSBI.BigInt(divisor)));\n            nanoseconds = ZERO;\n            break;\n        }\n        case 'nanosecond': {\n            total = JSBI.toNumber(nanoseconds);\n            nanoseconds = RoundNumberToIncrement(nanoseconds, increment, roundingMode);\n            break;\n        }\n    }\n    return {\n        years,\n        months,\n        weeks,\n        days,\n        hours,\n        minutes,\n        seconds,\n        milliseconds,\n        microseconds,\n        nanoseconds: JSBI.toNumber(nanoseconds),\n        total\n    };\n}\nexport function CompareISODate(y1, m1, d1, y2, m2, d2) {\n    for (const [x, y] of [\n        [y1, y2],\n        [m1, m2],\n        [d1, d2]\n    ]) {\n        if (x !== y)\n            return ComparisonResult(x - y);\n    }\n    return 0;\n}\nfunction NonNegativeModulo(x, y) {\n    let result = x % y;\n    if (ObjectIs(result, -0))\n        return 0;\n    if (result < 0)\n        result += y;\n    return result;\n}\nexport function ToBigIntExternal(arg) {\n    const jsbiBI = ToBigInt(arg);\n    if (typeof globalThis.BigInt !== 'undefined')\n        return globalThis.BigInt(jsbiBI.toString(10));\n    return jsbiBI;\n}\nexport function ToBigInt(arg) {\n    if (arg instanceof JSBI) {\n        return arg;\n    }\n    let prim = arg;\n    if (typeof arg === 'object') {\n        const toPrimFn = arg[Symbol.toPrimitive];\n        if (toPrimFn && typeof toPrimFn === 'function') {\n            prim = ReflectApply(toPrimFn, arg, ['number']);\n        }\n    }\n    switch (typeof prim) {\n        case 'undefined':\n        case 'object':\n        case 'number':\n        case 'symbol':\n        default:\n            throw new TypeError(`cannot convert ${typeof arg} to bigint`);\n        case 'string':\n            if (!prim.match(/^\\s*(?:[+-]?\\d+\\s*)?$/)) {\n                throw new SyntaxError('invalid BigInt syntax');\n            }\n        // eslint: no-fallthrough: false\n        case 'bigint':\n            try {\n                return JSBI.BigInt(prim.toString());\n            }\n            catch (e) {\n                if (e instanceof Error && e.message.startsWith('Invalid integer'))\n                    throw new SyntaxError(e.message);\n                throw e;\n            }\n        case 'boolean':\n            if (prim) {\n                return ONE;\n            }\n            else {\n                return ZERO;\n            }\n    }\n}\n// Note: This method returns values with bogus nanoseconds based on the previous iteration's\n// milliseconds. That way there is a guarantee that the full nanoseconds are always going to be\n// increasing at least and that the microsecond and nanosecond fields are likely to be non-zero.\nexport const SystemUTCEpochNanoSeconds = (() => {\n    let ns = JSBI.BigInt(Date.now() % 1e6);\n    return () => {\n        const ms = JSBI.BigInt(Date.now());\n        const result = JSBI.add(JSBI.multiply(ms, MILLION), ns);\n        ns = JSBI.remainder(ms, MILLION);\n        if (JSBI.greaterThan(result, NS_MAX))\n            return NS_MAX;\n        if (JSBI.lessThan(result, NS_MIN))\n            return NS_MIN;\n        return result;\n    };\n})();\nexport function SystemTimeZone() {\n    const fmt = new IntlDateTimeFormat('en-us');\n    const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n    return new TemporalTimeZone(ParseTemporalTimeZone(fmt.resolvedOptions().timeZone));\n}\nexport function ComparisonResult(value) {\n    return value < 0 ? -1 : value > 0 ? 1 : value;\n}\nexport function GetOptionsObject(options) {\n    if (options === undefined)\n        return ObjectCreate(null);\n    if (IsObject(options) && options !== null)\n        return options;\n    throw new TypeError(`Options parameter must be an object, not ${options === null ? 'null' : `${typeof options}`}`);\n}\nexport function CreateOnePropObject(propName, propValue) {\n    const o = ObjectCreate(null);\n    o[propName] = propValue;\n    return o;\n}\nfunction GetOption(options, property, allowedValues, fallback) {\n    let value = options[property];\n    if (value !== undefined) {\n        value = ToString(value);\n        if (!allowedValues.includes(value)) {\n            throw new RangeError(`${property} must be one of ${allowedValues.join(', ')}, not ${value}`);\n        }\n        return value;\n    }\n    return fallback;\n}\nfunction GetNumberOption(options, property, minimum, maximum, fallback) {\n    let valueRaw = options[property];\n    if (valueRaw === undefined)\n        return fallback;\n    const value = ToNumber(valueRaw);\n    if (NumberIsNaN(value) || value < minimum || value > maximum) {\n        throw new RangeError(`${String(property)} must be between ${minimum} and ${maximum}, not ${value}`);\n    }\n    return MathFloor(value);\n}\nexport function IsBuiltinCalendar(id) {\n    return ArrayIncludes.call(BUILTIN_CALENDAR_IDS, id);\n}\nconst OFFSET = new RegExp(`^${PARSE.offset.source}$`);\nfunction bisect(getState, leftParam, rightParam, lstateParam = getState(leftParam), rstateParam = getState(rightParam)) {\n    // This doesn't make much sense - why do these get converted unnecessarily?\n    let left = JSBI.BigInt(leftParam);\n    let right = JSBI.BigInt(rightParam);\n    let lstate = lstateParam;\n    let rstate = rstateParam;\n    while (JSBI.greaterThan(JSBI.subtract(right, left), ONE)) {\n        const middle = JSBI.divide(JSBI.add(left, right), JSBI.BigInt(2));\n        const mstate = getState(middle);\n        if (mstate === lstate) {\n            left = middle;\n            lstate = mstate;\n        }\n        else if (mstate === rstate) {\n            right = middle;\n            rstate = mstate;\n        }\n        else {\n            throw new Error(`invalid state in bisection ${lstate} - ${mstate} - ${rstate}`);\n        }\n    }\n    return right;\n}\nconst nsPerTimeUnit = {\n    hour: 3600e9,\n    minute: 60e9,\n    second: 1e9,\n    millisecond: 1e6,\n    microsecond: 1e3,\n    nanosecond: 1\n};\n//# sourceMappingURL=ecmascript.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic } from './intrinsicclass';\nimport { GetSlot, INSTANT, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, TIME_ZONE } from './slots';\nconst DATE = Symbol('date');\nconst YM = Symbol('ym');\nconst MD = Symbol('md');\nconst TIME = Symbol('time');\nconst DATETIME = Symbol('datetime');\nconst ZONED = Symbol('zoneddatetime');\nconst INST = Symbol('instant');\nconst ORIGINAL = Symbol('original');\nconst TZ_RESOLVED = Symbol('timezone');\nconst TZ_GIVEN = Symbol('timezone-id-given');\nconst CAL_ID = Symbol('calendar-id');\nconst LOCALE = Symbol('locale');\nconst OPTIONS = Symbol('options');\nconst descriptor = (value) => {\n    return {\n        value,\n        enumerable: true,\n        writable: false,\n        configurable: true\n    };\n};\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst ObjectAssign = Object.assign;\nconst ObjectHasOwnProperty = Object.prototype.hasOwnProperty;\nconst ReflectApply = Reflect.apply;\n// Construction of built-in Intl.DateTimeFormat objects is sloooooow,\n// so we'll only create those instances when we need them.\n// See https://bugs.chromium.org/p/v8/issues/detail?id=6528\nfunction getPropLazy(obj, prop) {\n    let val = obj[prop];\n    if (typeof val === 'function') {\n        // If we get here, `val` is an \"amender function\". It will take the user's\n        // options and transform them into suitable options to be passed into the\n        // built-in (non-polyfill) Intl.DateTimeFormat constructor. These options\n        // will vary depending on the Temporal type, so that's why we store separate\n        // formatters in separate props on the polyfill's DateTimeFormat instances.\n        // The efficiency happens because we don't create an (expensive) formatter\n        // until the user calls toLocaleString for that Temporal type.\n        val = new IntlDateTimeFormat(obj[LOCALE], val(obj[OPTIONS]));\n        // TODO: can this be typed more cleanly?\n        obj[prop] = val;\n    }\n    return val;\n}\n// Similarly, lazy-init TimeZone instances.\nfunction getResolvedTimeZoneLazy(obj) {\n    let val = obj[TZ_RESOLVED];\n    if (typeof val === 'string') {\n        val = ES.ToTemporalTimeZone(val);\n        obj[TZ_RESOLVED] = val;\n    }\n    return val;\n}\nfunction DateTimeFormatImpl(locale = undefined, optionsParam = {}) {\n    if (!(this instanceof DateTimeFormatImpl)) {\n        return new DateTimeFormatImpl(locale, optionsParam);\n    }\n    const hasOptions = typeof optionsParam !== 'undefined';\n    const options = hasOptions ? ObjectAssign({}, optionsParam) : {};\n    // TODO: remove type assertion after Temporal types land in TS lib types\n    const original = new IntlDateTimeFormat(locale, options);\n    const ro = original.resolvedOptions();\n    // DateTimeFormat instances are very expensive to create. Therefore, they will\n    // be lazily created only when needed, using the locale and options provided.\n    // But it's possible for callers to mutate those inputs before lazy creation\n    // happens. For this reason, we clone the inputs instead of caching the\n    // original objects. To avoid the complexity of deep cloning any inputs that\n    // are themselves objects (e.g. the locales array, or options property values\n    // that will be coerced to strings), we rely on `resolvedOptions()` to do the\n    // coercion and cloning for us. Unfortunately, we can't just use the resolved\n    // options as-is because our options-amending logic adds additional fields if\n    // the user doesn't supply any unit fields like year, month, day, hour, etc.\n    // Therefore, we limit the properties in the clone to properties that were\n    // present in the original input.\n    if (hasOptions) {\n        const clonedResolved = ObjectAssign({}, ro);\n        for (const prop in clonedResolved) {\n            if (!ReflectApply(ObjectHasOwnProperty, options, [prop])) {\n                delete clonedResolved[prop];\n            }\n        }\n        this[OPTIONS] = clonedResolved;\n    }\n    else {\n        this[OPTIONS] = options;\n    }\n    this[TZ_GIVEN] = options.timeZone ? options.timeZone : null;\n    this[LOCALE] = ro.locale;\n    this[ORIGINAL] = original;\n    this[TZ_RESOLVED] = ro.timeZone;\n    this[CAL_ID] = ro.calendar;\n    this[DATE] = dateAmend;\n    this[YM] = yearMonthAmend;\n    this[MD] = monthDayAmend;\n    this[TIME] = timeAmend;\n    this[DATETIME] = datetimeAmend;\n    this[ZONED] = zonedDateTimeAmend;\n    this[INST] = instantAmend;\n    return undefined; // TODO: I couldn't satisfy TS without adding this. Is there another way?\n}\nObject.defineProperty(DateTimeFormatImpl, 'name', {\n    writable: true,\n    value: 'DateTimeFormat'\n});\nDateTimeFormatImpl.supportedLocalesOf = function (locales, options) {\n    return IntlDateTimeFormat.supportedLocalesOf(locales, options);\n};\nconst propertyDescriptors = {\n    resolvedOptions: descriptor(resolvedOptions),\n    format: descriptor(format),\n    formatRange: descriptor(formatRange)\n};\nif ('formatToParts' in IntlDateTimeFormat.prototype) {\n    propertyDescriptors.formatToParts = descriptor(formatToParts);\n}\nif ('formatRangeToParts' in IntlDateTimeFormat.prototype) {\n    propertyDescriptors.formatRangeToParts = descriptor(formatRangeToParts);\n}\nDateTimeFormatImpl.prototype = Object.create(IntlDateTimeFormat.prototype, propertyDescriptors);\n// Ensure that the prototype isn't writeable.\nObject.defineProperty(DateTimeFormatImpl, 'prototype', {\n    writable: false,\n    enumerable: false,\n    configurable: false\n});\nexport const DateTimeFormat = DateTimeFormatImpl;\nfunction resolvedOptions() {\n    return this[ORIGINAL].resolvedOptions();\n}\nfunction adjustFormatterTimeZone(formatter, timeZone) {\n    if (!timeZone)\n        return formatter;\n    const options = formatter.resolvedOptions();\n    if (options.timeZone === timeZone)\n        return formatter;\n    // Existing Intl isn't typed to accept Temporal-specific options and the lib\n    // types for resolved options are less restrictive than the types for options.\n    // For example, `weekday` is\n    // `'long' | 'short' | 'narrow'` in options but `string` in resolved options.\n    // TODO: investigate why, and file an issue against TS if it's a bug.\n    if (options['dateStyle'] || options['timeStyle']) {\n        // Unfortunately, Safari's resolvedOptions include parameters that will\n        // cause errors at runtime if passed along with\n        // dateStyle or timeStyle options as per\n        // https://tc39.es/proposal-intl-datetime-style/#table-datetimeformat-components.\n        // This has been fixed in newer versions of Safari:\n        // https://bugs.webkit.org/show_bug.cgi?id=231041\n        delete options['weekday'];\n        delete options['era'];\n        delete options['year'];\n        delete options['month'];\n        delete options['day'];\n        delete options['hour'];\n        delete options['minute'];\n        delete options['second'];\n        delete options['timeZoneName'];\n        delete options['hourCycle'];\n        delete options['hour12'];\n        delete options['dayPeriod'];\n    }\n    return new IntlDateTimeFormat(options.locale, { ...options, timeZone });\n}\n// TODO: investigate why there's a rest parameter here. Does this function really need to accept extra params?\n// And if so, why doesn't formatRange also accept extra params?\nfunction format(datetime, ...rest) {\n    let { instant, formatter, timeZone } = extractOverrides(datetime, this);\n    if (instant && formatter) {\n        formatter = adjustFormatterTimeZone(formatter, timeZone);\n        return formatter.format(instant.epochMilliseconds);\n    }\n    return this[ORIGINAL].format(datetime, ...rest);\n}\nfunction formatToParts(datetime, ...rest) {\n    let { instant, formatter, timeZone } = extractOverrides(datetime, this);\n    if (instant && formatter) {\n        formatter = adjustFormatterTimeZone(formatter, timeZone);\n        return formatter.formatToParts(instant.epochMilliseconds);\n    }\n    return this[ORIGINAL].formatToParts(datetime, ...rest);\n}\nfunction formatRange(a, b) {\n    if (isTemporalObject(a) || isTemporalObject(b)) {\n        if (!sameTemporalType(a, b)) {\n            throw new TypeError('Intl.DateTimeFormat.formatRange accepts two values of the same type');\n        }\n        const { instant: aa, formatter: aformatter, timeZone: atz } = extractOverrides(a, this);\n        const { instant: bb, formatter: bformatter, timeZone: btz } = extractOverrides(b, this);\n        if (atz && btz && atz !== btz) {\n            throw new RangeError('cannot format range between different time zones');\n        }\n        if (aa && bb && aformatter && bformatter && aformatter === bformatter) {\n            const formatter = adjustFormatterTimeZone(aformatter, atz);\n            // TODO: Remove type assertion after this method lands in TS lib types\n            return formatter.formatRange(aa.epochMilliseconds, bb.epochMilliseconds);\n        }\n    }\n    // TODO: Remove type assertion after this method lands in TS lib types\n    return this[ORIGINAL].formatRange(a, b);\n}\nfunction formatRangeToParts(a, b) {\n    if (isTemporalObject(a) || isTemporalObject(b)) {\n        if (!sameTemporalType(a, b)) {\n            throw new TypeError('Intl.DateTimeFormat.formatRangeToParts accepts two values of the same type');\n        }\n        const { instant: aa, formatter: aformatter, timeZone: atz } = extractOverrides(a, this);\n        const { instant: bb, formatter: bformatter, timeZone: btz } = extractOverrides(b, this);\n        if (atz && btz && atz !== btz) {\n            throw new RangeError('cannot format range between different time zones');\n        }\n        if (aa && bb && aformatter && bformatter && aformatter === bformatter) {\n            const formatter = adjustFormatterTimeZone(aformatter, atz);\n            // TODO: Remove type assertion after this method lands in TS lib types\n            return formatter.formatRangeToParts(aa.epochMilliseconds, bb.epochMilliseconds);\n        }\n    }\n    // TODO: Remove type assertion after this method lands in TS lib types\n    return this[ORIGINAL].formatRangeToParts(a, b);\n}\nfunction amend(optionsParam = {}, amended = {}) {\n    const options = ObjectAssign({}, optionsParam);\n    for (const opt of [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'weekday',\n        'dayPeriod',\n        'timeZoneName',\n        'dateStyle',\n        'timeStyle'\n    ]) {\n        options[opt] = opt in amended ? amended[opt] : options[opt];\n        if (options[opt] === false || options[opt] === undefined)\n            delete options[opt];\n    }\n    return options;\n}\nfunction timeAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        year: false,\n        month: false,\n        day: false,\n        weekday: false,\n        timeZoneName: false,\n        dateStyle: false\n    });\n    if (!hasTimeOptions(options)) {\n        options = ObjectAssign({}, options, {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction yearMonthAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        day: false,\n        hour: false,\n        minute: false,\n        second: false,\n        weekday: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        dateStyle: false,\n        timeStyle: false\n    });\n    if (!('year' in options || 'month' in options)) {\n        options = ObjectAssign(options, { year: 'numeric', month: 'numeric' });\n    }\n    return options;\n}\nfunction monthDayAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        year: false,\n        hour: false,\n        minute: false,\n        second: false,\n        weekday: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        dateStyle: false,\n        timeStyle: false\n    });\n    if (!('month' in options || 'day' in options)) {\n        options = ObjectAssign({}, options, { month: 'numeric', day: 'numeric' });\n    }\n    return options;\n}\nfunction dateAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        hour: false,\n        minute: false,\n        second: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        timeStyle: false\n    });\n    if (!hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        });\n    }\n    return options;\n}\nfunction datetimeAmend(optionsParam) {\n    let options = amend(optionsParam, { timeZoneName: false });\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction zonedDateTimeAmend(optionsParam) {\n    let options = optionsParam;\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n        if (options.timeZoneName === undefined)\n            options.timeZoneName = 'short';\n    }\n    return options;\n}\nfunction instantAmend(optionsParam) {\n    let options = optionsParam;\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction hasDateOptions(options) {\n    return 'year' in options || 'month' in options || 'day' in options || 'weekday' in options || 'dateStyle' in options;\n}\nfunction hasTimeOptions(options) {\n    return ('hour' in options || 'minute' in options || 'second' in options || 'timeStyle' in options || 'dayPeriod' in options);\n}\nfunction isTemporalObject(obj) {\n    return (ES.IsTemporalDate(obj) ||\n        ES.IsTemporalTime(obj) ||\n        ES.IsTemporalDateTime(obj) ||\n        ES.IsTemporalZonedDateTime(obj) ||\n        ES.IsTemporalYearMonth(obj) ||\n        ES.IsTemporalMonthDay(obj) ||\n        ES.IsTemporalInstant(obj));\n}\nfunction sameTemporalType(x, y) {\n    if (!isTemporalObject(x) || !isTemporalObject(y))\n        return false;\n    if (ES.IsTemporalTime(x) && !ES.IsTemporalTime(y))\n        return false;\n    if (ES.IsTemporalDate(x) && !ES.IsTemporalDate(y))\n        return false;\n    if (ES.IsTemporalDateTime(x) && !ES.IsTemporalDateTime(y))\n        return false;\n    if (ES.IsTemporalZonedDateTime(x) && !ES.IsTemporalZonedDateTime(y))\n        return false;\n    if (ES.IsTemporalYearMonth(x) && !ES.IsTemporalYearMonth(y))\n        return false;\n    if (ES.IsTemporalMonthDay(x) && !ES.IsTemporalMonthDay(y))\n        return false;\n    if (ES.IsTemporalInstant(x) && !ES.IsTemporalInstant(y))\n        return false;\n    return true;\n}\nfunction extractOverrides(temporalObj, main) {\n    const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    if (ES.IsTemporalTime(temporalObj)) {\n        const hour = GetSlot(temporalObj, ISO_HOUR);\n        const minute = GetSlot(temporalObj, ISO_MINUTE);\n        const second = GetSlot(temporalObj, ISO_SECOND);\n        const millisecond = GetSlot(temporalObj, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalObj, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalObj, ISO_NANOSECOND);\n        const datetime = new DateTime(1970, 1, 1, hour, minute, second, millisecond, microsecond, nanosecond, main[CAL_ID]);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, TIME)\n        };\n    }\n    if (ES.IsTemporalYearMonth(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const referenceISODay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainYearMonth with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(isoYear, isoMonth, referenceISODay, 12, 0, 0, 0, 0, 0, calendar);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, YM)\n        };\n    }\n    if (ES.IsTemporalMonthDay(temporalObj)) {\n        const referenceISOYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainMonthDay with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(referenceISOYear, isoMonth, isoDay, 12, 0, 0, 0, 0, 0, calendar);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, MD)\n        };\n    }\n    if (ES.IsTemporalDate(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainDate with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(isoYear, isoMonth, isoDay, 12, 0, 0, 0, 0, 0, main[CAL_ID]);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, DATE)\n        };\n    }\n    if (ES.IsTemporalDateTime(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const hour = GetSlot(temporalObj, ISO_HOUR);\n        const minute = GetSlot(temporalObj, ISO_MINUTE);\n        const second = GetSlot(temporalObj, ISO_SECOND);\n        const millisecond = GetSlot(temporalObj, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalObj, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalObj, ISO_NANOSECOND);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainDateTime with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        let datetime = temporalObj;\n        if (calendar === 'iso8601') {\n            datetime = new DateTime(isoYear, isoMonth, isoDay, hour, minute, second, millisecond, microsecond, nanosecond, main[CAL_ID]);\n        }\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, DATETIME)\n        };\n    }\n    if (ES.IsTemporalZonedDateTime(temporalObj)) {\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format ZonedDateTime with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const timeZone = GetSlot(temporalObj, TIME_ZONE);\n        const objTimeZone = ES.ToString(timeZone);\n        if (main[TZ_GIVEN] && main[TZ_GIVEN] !== objTimeZone) {\n            throw new RangeError(`timeZone option ${main[TZ_GIVEN]} doesn't match actual time zone ${objTimeZone}`);\n        }\n        return {\n            instant: GetSlot(temporalObj, INSTANT),\n            formatter: getPropLazy(main, ZONED),\n            timeZone: objTimeZone\n        };\n    }\n    if (ES.IsTemporalInstant(temporalObj)) {\n        return {\n            instant: temporalObj,\n            formatter: getPropLazy(main, INST)\n        };\n    }\n    return {};\n}\n//# sourceMappingURL=intl.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { EPOCHNANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nimport JSBI from 'jsbi';\nimport { BILLION, MILLION, THOUSAND } from './ecmascript';\nexport class Instant {\n    constructor(epochNanoseconds) {\n        // Note: if the argument is not passed, ToBigInt(undefined) will throw. This check exists only\n        //       to improve the error message.\n        if (arguments.length < 1) {\n            throw new TypeError('missing argument: epochNanoseconds is required');\n        }\n        const ns = ES.ToBigInt(epochNanoseconds);\n        ES.ValidateEpochNanoseconds(ns);\n        CreateSlots(this);\n        SetSlot(this, EPOCHNANOSECONDS, ns);\n        if (DEBUG) {\n            const repr = ES.TemporalInstantToString(this, undefined, 'auto');\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${repr}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get epochSeconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return JSBI.toNumber(JSBI.divide(value, BILLION));\n    }\n    get epochMilliseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = JSBI.BigInt(GetSlot(this, EPOCHNANOSECONDS));\n        return JSBI.toNumber(JSBI.divide(value, MILLION));\n    }\n    get epochMicroseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = JSBI.BigInt(GetSlot(this, EPOCHNANOSECONDS));\n        return ES.ToBigIntExternal(JSBI.divide(value, THOUSAND));\n    }\n    get epochNanoseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToBigIntExternal(JSBI.BigInt(GetSlot(this, EPOCHNANOSECONDS)));\n    }\n    add(temporalDurationLike) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromInstant('add', this, temporalDurationLike);\n    }\n    subtract(temporalDurationLike) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromInstant('subtract', this, temporalDurationLike);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalInstant('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalInstant('since', this, other, options);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.GetTemporalUnit(options, 'smallestUnit', 'time', ES.REQUIRED);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            hour: 24,\n            minute: 1440,\n            second: 86400,\n            millisecond: 86400e3,\n            microsecond: 86400e6,\n            nanosecond: 86400e9\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], true);\n        const ns = GetSlot(this, EPOCHNANOSECONDS);\n        const roundedNs = ES.RoundInstant(ns, roundingIncrement, smallestUnit, roundingMode);\n        return new Instant(roundedNs);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalInstant(otherParam);\n        const one = GetSlot(this, EPOCHNANOSECONDS);\n        const two = GetSlot(other, EPOCHNANOSECONDS);\n        return JSBI.equal(JSBI.BigInt(one), JSBI.BigInt(two));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        let timeZone = options.timeZone;\n        if (timeZone !== undefined)\n            timeZone = ES.ToTemporalTimeZone(timeZone);\n        // Although TS doesn't acknowledge it, below here `timeZone` is a Temporal.TimeZoneProtocol\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const ns = GetSlot(this, EPOCHNANOSECONDS);\n        const roundedNs = ES.RoundInstant(ns, increment, unit, roundingMode);\n        const roundedInstant = new Instant(roundedNs);\n        return ES.TemporalInstantToString(roundedInstant, timeZone, precision);\n    }\n    toJSON() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalInstantToString(this, undefined, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.Instant');\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item)) {\n            throw new TypeError('invalid argument in toZonedDateTime');\n        }\n        const calendarLike = item.calendar;\n        if (calendarLike === undefined) {\n            throw new TypeError('missing calendar property in toZonedDateTime');\n        }\n        const calendar = ES.ToTemporalCalendar(calendarLike);\n        const temporalTimeZoneLike = item.timeZone;\n        if (temporalTimeZoneLike === undefined) {\n            throw new TypeError('missing timeZone property in toZonedDateTime');\n        }\n        const timeZone = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toZonedDateTimeISO(itemParam) {\n        let item = itemParam;\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (ES.IsObject(item)) {\n            const timeZoneProperty = item.timeZone;\n            if (timeZoneProperty !== undefined) {\n                item = timeZoneProperty;\n            }\n        }\n        const timeZone = ES.ToTemporalTimeZone(item);\n        const calendar = ES.GetISO8601Calendar();\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    static fromEpochSeconds(epochSecondsParam) {\n        const epochSeconds = ES.ToNumber(epochSecondsParam);\n        const epochNanoseconds = JSBI.multiply(JSBI.BigInt(epochSeconds), BILLION);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochMilliseconds(epochMillisecondsParam) {\n        const epochMilliseconds = ES.ToNumber(epochMillisecondsParam);\n        const epochNanoseconds = JSBI.multiply(JSBI.BigInt(epochMilliseconds), MILLION);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochMicroseconds(epochMicrosecondsParam) {\n        const epochMicroseconds = ES.ToBigInt(epochMicrosecondsParam);\n        const epochNanoseconds = JSBI.multiply(epochMicroseconds, THOUSAND);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochNanoseconds(epochNanosecondsParam) {\n        const epochNanoseconds = ES.ToBigInt(epochNanosecondsParam);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static from(item) {\n        if (ES.IsTemporalInstant(item)) {\n            return new Instant(GetSlot(item, EPOCHNANOSECONDS));\n        }\n        return ES.ToTemporalInstant(item);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalInstant(oneParam);\n        const two = ES.ToTemporalInstant(twoParam);\n        const oneNs = GetSlot(one, EPOCHNANOSECONDS);\n        const twoNs = GetSlot(two, EPOCHNANOSECONDS);\n        if (JSBI.lessThan(oneNs, twoNs))\n            return -1;\n        if (JSBI.greaterThan(oneNs, twoNs))\n            return 1;\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Instant, 'Temporal.Instant');\n//# sourceMappingURL=instant.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass, DefineIntrinsic } from './intrinsicclass';\nimport { CALENDAR_ID, ISO_YEAR, ISO_MONTH, ISO_DAY, YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS, CreateSlots, GetSlot, HasSlot, SetSlot } from './slots';\nconst ArrayIncludes = Array.prototype.includes;\nconst ArrayPrototypePush = Array.prototype.push;\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst ArraySort = Array.prototype.sort;\nconst MathAbs = Math.abs;\nconst MathFloor = Math.floor;\nconst ObjectEntries = Object.entries;\nconst ObjectKeys = Object.keys;\n/**\n * Implementations for each calendar. Non-ISO calendars have an extra `helper`\n * property that provides additional per-calendar logic.\n */\nconst impl = {};\n/**\n * Thin wrapper around the implementation of each built-in calendar. This\n * class's methods follow a similar pattern:\n * 1. Validate parameters\n * 2. Fill in default options (for methods where options are present)\n * 3. Simplify and/or normalize parameters. For example, some methods accept\n *    PlainDate, PlainDateTime, ZonedDateTime, etc. and these are normalized to\n *    PlainDate.\n * 4. Look up the ID of the built-in calendar\n * 5. Fetch the implementation object for that ID.\n * 6. Call the corresponding method in the implementation object.\n */\nexport class Calendar {\n    constructor(idParam) {\n        // Note: if the argument is not passed, IsBuiltinCalendar(\"undefined\") will fail. This check\n        //       exists only to improve the error message.\n        if (arguments.length < 1) {\n            throw new RangeError('missing argument: id is required');\n        }\n        const id = ES.ToString(idParam);\n        if (!ES.IsBuiltinCalendar(id))\n            throw new RangeError(`invalid calendar identifier ${id}`);\n        CreateSlots(this);\n        SetSlot(this, CALENDAR_ID, id);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${id}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get id() {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(this);\n    }\n    dateFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dateFromFields(fields, options, this);\n    }\n    yearMonthFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].yearMonthFromFields(fields, options, this);\n    }\n    monthDayFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].monthDayFromFields(fields, options, this);\n    }\n    fields(fields) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const fieldsArray = [];\n        const allowed = new Set([\n            'year',\n            'month',\n            'monthCode',\n            'day',\n            'hour',\n            'minute',\n            'second',\n            'millisecond',\n            'microsecond',\n            'nanosecond'\n        ]);\n        for (const name of fields) {\n            if (typeof name !== 'string')\n                throw new TypeError('invalid fields');\n            if (!allowed.has(name))\n                throw new RangeError(`invalid field name ${name}`);\n            allowed.delete(name);\n            ArrayPrototypePush.call(fieldsArray, name);\n        }\n        return impl[GetSlot(this, CALENDAR_ID)].fields(fieldsArray);\n    }\n    mergeFields(fields, additionalFields) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return impl[GetSlot(this, CALENDAR_ID)].mergeFields(fields, additionalFields);\n    }\n    dateAdd(dateParam, durationParam, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        const duration = ES.ToTemporalDuration(durationParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        const { days } = ES.BalanceDuration(GetSlot(duration, DAYS), GetSlot(duration, HOURS), GetSlot(duration, MINUTES), GetSlot(duration, SECONDS), GetSlot(duration, MILLISECONDS), GetSlot(duration, MICROSECONDS), GetSlot(duration, NANOSECONDS), 'day');\n        return impl[GetSlot(this, CALENDAR_ID)].dateAdd(date, GetSlot(duration, YEARS), GetSlot(duration, MONTHS), GetSlot(duration, WEEKS), days, overflow, this);\n    }\n    dateUntil(oneParam, twoParam, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const one = ES.ToTemporalDate(oneParam);\n        const two = ES.ToTemporalDate(twoParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        let largestUnit = ES.GetTemporalUnit(options, 'largestUnit', 'date', 'auto');\n        if (largestUnit === 'auto')\n            largestUnit = 'day';\n        const { years, months, weeks, days } = impl[GetSlot(this, CALENDAR_ID)].dateUntil(one, two, largestUnit);\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    }\n    year(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].year(date);\n    }\n    month(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (ES.IsTemporalMonthDay(date))\n            throw new TypeError('use monthCode on PlainMonthDay instead');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].month(date);\n    }\n    monthCode(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date) && !ES.IsTemporalMonthDay(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].monthCode(date);\n    }\n    day(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalMonthDay(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].day(date);\n    }\n    era(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].era(date);\n    }\n    eraYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].eraYear(date);\n    }\n    dayOfWeek(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dayOfWeek(date);\n    }\n    dayOfYear(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dayOfYear(date);\n    }\n    weekOfYear(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].weekOfYear(date);\n    }\n    daysInWeek(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].daysInWeek(date);\n    }\n    daysInMonth(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].daysInMonth(date);\n    }\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].daysInYear(date);\n    }\n    monthsInYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].monthsInYear(date);\n    }\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].inLeapYear(date);\n    }\n    toString() {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR_ID);\n    }\n    toJSON() {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(this);\n    }\n    static from(item) {\n        return ES.ToTemporalCalendar(item);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Calendar, 'Temporal.Calendar');\nDefineIntrinsic('Temporal.Calendar.from', Calendar.from);\n/**\n * Implementation for the ISO 8601 calendar. This is the only calendar that's\n * guaranteed to be supported by all ECMAScript implementations, including those\n * without Intl (ECMA-402) support.\n */\nimpl['iso8601'] = {\n    dateFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, ['day', 'month', 'monthCode', 'year'], ['year', 'day']);\n        fields = resolveNonLunisolarMonth(fields);\n        let { year, month, day } = fields;\n        ({ year, month, day } = ES.RegulateISODate(year, month, day, overflow));\n        return ES.CreateTemporalDate(year, month, day, calendar);\n    },\n    yearMonthFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, ['month', 'monthCode', 'year'], ['year']);\n        fields = resolveNonLunisolarMonth(fields);\n        let { year, month } = fields;\n        ({ year, month } = ES.RegulateISOYearMonth(year, month, overflow));\n        return ES.CreateTemporalYearMonth(year, month, calendar, /* referenceISODay = */ 1);\n    },\n    monthDayFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, ['day', 'month', 'monthCode', 'year'], ['day']);\n        if (fields.month !== undefined && fields.year === undefined && fields.monthCode === undefined) {\n            throw new TypeError('either year or monthCode required with month');\n        }\n        const useYear = fields.monthCode === undefined;\n        const referenceISOYear = 1972;\n        fields = resolveNonLunisolarMonth(fields);\n        let { month, day, year } = fields;\n        ({ month, day } = ES.RegulateISODate(useYear ? year : referenceISOYear, month, day, overflow));\n        return ES.CreateTemporalMonthDay(month, day, calendar, referenceISOYear);\n    },\n    fields(fields) {\n        return fields;\n    },\n    mergeFields(fields, additionalFields) {\n        const merged = {};\n        for (const nextKey of ObjectKeys(fields)) {\n            if (nextKey === 'month' || nextKey === 'monthCode')\n                continue;\n            merged[nextKey] = fields[nextKey];\n        }\n        const newKeys = ObjectKeys(additionalFields);\n        for (const nextKey of newKeys) {\n            merged[nextKey] = additionalFields[nextKey];\n        }\n        if (!ArrayIncludes.call(newKeys, 'month') && !ArrayIncludes.call(newKeys, 'monthCode')) {\n            const { month, monthCode } = fields;\n            if (month !== undefined)\n                merged.month = month;\n            if (monthCode !== undefined)\n                merged.monthCode = monthCode;\n        }\n        return merged;\n    },\n    dateAdd(date, years, months, weeks, days, overflow, calendar) {\n        let year = GetSlot(date, ISO_YEAR);\n        let month = GetSlot(date, ISO_MONTH);\n        let day = GetSlot(date, ISO_DAY);\n        ({ year, month, day } = ES.AddISODate(year, month, day, years, months, weeks, days, overflow));\n        return ES.CreateTemporalDate(year, month, day, calendar);\n    },\n    dateUntil(one, two, largestUnit) {\n        return ES.DifferenceISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY), largestUnit);\n    },\n    year(date) {\n        return GetSlot(date, ISO_YEAR);\n    },\n    era() {\n        return undefined;\n    },\n    eraYear() {\n        return undefined;\n    },\n    month(date) {\n        return GetSlot(date, ISO_MONTH);\n    },\n    monthCode(date) {\n        return buildMonthCode(GetSlot(date, ISO_MONTH));\n    },\n    day(date) {\n        return GetSlot(date, ISO_DAY);\n    },\n    dayOfWeek(date) {\n        return ES.DayOfWeek(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    dayOfYear(date) {\n        return ES.DayOfYear(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    weekOfYear(date) {\n        return ES.WeekOfYear(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    daysInWeek() {\n        return 7;\n    },\n    daysInMonth(date) {\n        return ES.ISODaysInMonth(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH));\n    },\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        return ES.LeapYear(GetSlot(date, ISO_YEAR)) ? 366 : 365;\n    },\n    monthsInYear() {\n        return 12;\n    },\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        return ES.LeapYear(GetSlot(date, ISO_YEAR));\n    }\n};\nfunction monthCodeNumberPart(monthCode) {\n    if (!monthCode.startsWith('M')) {\n        throw new RangeError(`Invalid month code: ${monthCode}.  Month codes must start with M.`);\n    }\n    const month = +monthCode.slice(1);\n    if (isNaN(month))\n        throw new RangeError(`Invalid month code: ${monthCode}`);\n    return month;\n}\nfunction buildMonthCode(month, leap = false) {\n    return `M${month.toString().padStart(2, '0')}${leap ? 'L' : ''}`;\n}\n/**\n * Safely merge a month, monthCode pair into an integer month.\n * If both are present, make sure they match.\n * This logic doesn't work for lunisolar calendars!\n * */\nfunction resolveNonLunisolarMonth(calendarDate, overflow = undefined, monthsPerYear = 12) {\n    let { month, monthCode } = calendarDate;\n    if (monthCode === undefined) {\n        if (month === undefined)\n            throw new TypeError('Either month or monthCode are required');\n        // The ISO calendar uses the default (undefined) value because it does\n        // constrain/reject after this method returns. Non-ISO calendars, however,\n        // rely on this function to constrain/reject out-of-range `month` values.\n        if (overflow === 'reject')\n            ES.RejectToRange(month, 1, monthsPerYear);\n        if (overflow === 'constrain')\n            month = ES.ConstrainToRange(month, 1, monthsPerYear);\n        monthCode = buildMonthCode(month);\n    }\n    else {\n        const numberPart = monthCodeNumberPart(monthCode);\n        if (month !== undefined && month !== numberPart) {\n            throw new RangeError(`monthCode ${monthCode} and month ${month} must match if both are present`);\n        }\n        if (monthCode !== buildMonthCode(numberPart)) {\n            throw new RangeError(`Invalid month code: ${monthCode}`);\n        }\n        month = numberPart;\n        if (month < 1 || month > monthsPerYear)\n            throw new RangeError(`Invalid monthCode: ${monthCode}`);\n    }\n    return { ...calendarDate, month, monthCode };\n}\n/**\n * This prototype implementation of non-ISO calendars makes many repeated calls\n * to Intl APIs which may be slow (e.g. >0.2ms). This trivial cache will speed\n * up these repeat accesses. Each cache instance is associated (via a WeakMap)\n * to a specific Temporal object, which speeds up multiple calendar calls on the\n * same Temporal object instance.  No invalidation or pruning is necessary\n * because each object's cache is thrown away when the object is GC-ed.\n */\nclass OneObjectCache {\n    constructor(cacheToClone) {\n        this.map = new Map();\n        this.calls = 0;\n        this.hits = 0;\n        this.misses = 0;\n        this.now = globalThis.performance ? globalThis.performance.now() : Date.now();\n        if (cacheToClone !== undefined) {\n            let i = 0;\n            for (const entry of cacheToClone.map.entries()) {\n                if (++i > OneObjectCache.MAX_CACHE_ENTRIES)\n                    break;\n                this.map.set(...entry);\n            }\n        }\n    }\n    get(key) {\n        const result = this.map.get(key);\n        if (result) {\n            this.hits++;\n            this.report();\n        }\n        this.calls++;\n        return result;\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.misses++;\n        this.report();\n    }\n    report() {\n        /*\n        if (this.calls === 0) return;\n        const ms = (globalThis.performance ? globalThis.performance.now() : Date.now()) - this.now;\n        const hitRate = ((100 * this.hits) / this.calls).toFixed(0);\n        console.log(`${this.calls} calls in ${ms.toFixed(2)}ms. Hits: ${this.hits} (${hitRate}%). Misses: ${this.misses}.`);\n        */\n    }\n    setObject(obj) {\n        if (OneObjectCache.objectMap.get(obj))\n            throw new RangeError('object already cached');\n        OneObjectCache.objectMap.set(obj, this);\n        this.report();\n    }\n    /**\n     * Returns a WeakMap-backed cache that's used to store expensive results\n     * that are associated with a particular Temporal object instance.\n     *\n     * @param obj - object to associate with the cache\n     */\n    static getCacheForObject(obj) {\n        let cache = OneObjectCache.objectMap.get(obj);\n        if (!cache) {\n            cache = new OneObjectCache();\n            OneObjectCache.objectMap.set(obj, cache);\n        }\n        return cache;\n    }\n}\nOneObjectCache.objectMap = new WeakMap();\nOneObjectCache.MAX_CACHE_ENTRIES = 1000;\nfunction toUtcIsoDateString({ isoYear, isoMonth, isoDay }) {\n    const yearString = ES.ISOYearString(isoYear);\n    const monthString = ES.ISODateTimePartString(isoMonth);\n    const dayString = ES.ISODateTimePartString(isoDay);\n    return `${yearString}-${monthString}-${dayString}T00:00Z`;\n}\nfunction simpleDateDiff(one, two) {\n    return {\n        years: one.year - two.year,\n        months: one.month - two.month,\n        days: one.day - two.day\n    };\n}\n/**\n * Implementation helper that's common to all non-ISO calendars\n */\nclass HelperBase {\n    constructor() {\n        // The short era format works for all calendars except Japanese, which will\n        // override.\n        this.eraLength = 'short';\n        // All built-in calendars except Chinese/Dangi and Hebrew use an era\n        this.hasEra = true;\n    }\n    getFormatter() {\n        // `new Intl.DateTimeFormat()` is amazingly slow and chews up RAM. Per\n        // https://bugs.chromium.org/p/v8/issues/detail?id=6528#c4, we cache one\n        // DateTimeFormat instance per calendar. Caching is lazy so we only pay for\n        // calendars that are used. Note that the nonIsoHelperBase object is spread\n        // into each each calendar's implementation before any cache is created, so\n        // each calendar gets its own separate cached formatter.\n        if (typeof this.formatter === 'undefined') {\n            this.formatter = new IntlDateTimeFormat(`en-US-u-ca-${this.id}`, {\n                day: 'numeric',\n                month: 'numeric',\n                year: 'numeric',\n                era: this.eraLength,\n                timeZone: 'UTC'\n            });\n        }\n        return this.formatter;\n    }\n    isoToCalendarDate(isoDate, cache) {\n        const { year: isoYear, month: isoMonth, day: isoDay } = isoDate;\n        const key = JSON.stringify({ func: 'isoToCalendarDate', isoYear, isoMonth, isoDay, id: this.id });\n        const cached = cache.get(key);\n        if (cached)\n            return cached;\n        const dateTimeFormat = this.getFormatter();\n        let parts, isoString;\n        try {\n            isoString = toUtcIsoDateString({ isoYear, isoMonth, isoDay });\n            parts = dateTimeFormat.formatToParts(new Date(isoString));\n        }\n        catch (e) {\n            throw new RangeError(`Invalid ISO date: ${JSON.stringify({ isoYear, isoMonth, isoDay })}`);\n        }\n        const result = {};\n        for (let { type, value } of parts) {\n            if (type === 'year')\n                result.eraYear = +value;\n            // TODO: remove this type annotation when `relatedYear` gets into TS lib types\n            if (type === 'relatedYear')\n                result.eraYear = +value;\n            if (type === 'month') {\n                const matches = /^([0-9]*)(.*?)$/.exec(value);\n                if (!matches || matches.length != 3 || (!matches[1] && !matches[2])) {\n                    throw new RangeError(`Unexpected month: ${value}`);\n                }\n                // If the month has no numeric part (should only see this for the Hebrew\n                // calendar with newer FF / Chromium versions; see\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=1751833) then set a\n                // placeholder month index of `1` and rely on the derived class to\n                // calculate the correct month index from the month name stored in\n                // `monthExtra`.\n                result.month = matches[1] ? +matches[1] : 1;\n                if (result.month < 1) {\n                    throw new RangeError(`Invalid month ${value} from ${isoString}[u-ca-${this.id}]` +\n                        ' (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10527)');\n                }\n                if (result.month > 13) {\n                    throw new RangeError(`Invalid month ${value} from ${isoString}[u-ca-${this.id}]` +\n                        ' (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10529)');\n                }\n                // The ICU formats for the Hebrew calendar no longer support a numeric\n                // month format. So we'll rely on the derived class to interpret it.\n                // `monthExtra` is also used on the Chinese calendar to handle a suffix\n                // \"bis\" indicating a leap month.\n                if (matches[2])\n                    result.monthExtra = matches[2];\n            }\n            if (type === 'day')\n                result.day = +value;\n            if (this.hasEra && type === 'era' && value != null && value !== '') {\n                // The convention for Temporal era values is lowercase, so following\n                // that convention in this prototype. Punctuation is removed, accented\n                // letters are normalized, and spaces are replaced with dashes.\n                // E.g.: \"ERA0\" => \"era0\", \"Before R.O.C.\" => \"before-roc\", \"En’ō\" => \"eno\"\n                // The call to normalize() and the replacement regex deals with era\n                // names that contain non-ASCII characters like Japanese eras. Also\n                // ignore extra content in parentheses like JPN era date ranges.\n                value = value.split(' (')[0];\n                result.era = value\n                    .normalize('NFD')\n                    .replace(/[^-0-9 \\p{L}]/gu, '')\n                    .replace(' ', '-')\n                    .toLowerCase();\n            }\n        }\n        if (result.eraYear === undefined) {\n            // Node 12 has outdated ICU data that lacks the `relatedYear` field in the\n            // output of Intl.DateTimeFormat.formatToParts.\n            throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);\n        }\n        // Translate eras that may be handled differently by Temporal vs. by Intl\n        // (e.g. Japanese pre-Meiji eras). See https://github.com/tc39/proposal-temporal/issues/526.\n        if (this.reviseIntlEra) {\n            const { era, eraYear } = this.reviseIntlEra(result, isoDate);\n            result.era = era;\n            result.eraYear = eraYear;\n        }\n        if (this.checkIcuBugs)\n            this.checkIcuBugs(isoDate);\n        const calendarDate = this.adjustCalendarDate(result, cache, 'constrain', true);\n        if (calendarDate.year === undefined)\n            throw new RangeError(`Missing year converting ${JSON.stringify(isoDate)}`);\n        if (calendarDate.month === undefined)\n            throw new RangeError(`Missing month converting ${JSON.stringify(isoDate)}`);\n        if (calendarDate.day === undefined)\n            throw new RangeError(`Missing day converting ${JSON.stringify(isoDate)}`);\n        cache.set(key, calendarDate);\n        // Also cache the reverse mapping\n        ['constrain', 'reject'].forEach((overflow) => {\n            const keyReverse = JSON.stringify({\n                func: 'calendarToIsoDate',\n                year: calendarDate.year,\n                month: calendarDate.month,\n                day: calendarDate.day,\n                overflow,\n                id: this.id\n            });\n            cache.set(keyReverse, isoDate);\n        });\n        return calendarDate;\n    }\n    validateCalendarDate(calendarDate) {\n        const { era, month, year, day, eraYear, monthCode, monthExtra } = calendarDate;\n        // When there's a suffix (e.g. \"5bis\" for a leap month in Chinese calendar)\n        // the derived class must deal with it.\n        if (monthExtra !== undefined)\n            throw new RangeError('Unexpected `monthExtra` value');\n        if (year === undefined && eraYear === undefined)\n            throw new TypeError('year or eraYear is required');\n        if (month === undefined && monthCode === undefined)\n            throw new TypeError('month or monthCode is required');\n        if (day === undefined)\n            throw new RangeError('Missing day');\n        if (monthCode !== undefined) {\n            if (typeof monthCode !== 'string') {\n                throw new RangeError(`monthCode must be a string, not ${typeof monthCode}`);\n            }\n            if (!/^M([01]?\\d)(L?)$/.test(monthCode))\n                throw new RangeError(`Invalid monthCode: ${monthCode}`);\n        }\n        if (this.constantEra) {\n            if (era !== undefined && era !== this.constantEra) {\n                throw new RangeError(`era must be ${this.constantEra}, not ${era}`);\n            }\n            if (eraYear !== undefined && year !== undefined && eraYear !== year) {\n                throw new RangeError(`eraYear ${eraYear} does not match year ${year}`);\n            }\n        }\n    }\n    /**\n     * Allows derived calendars to add additional fields and/or to make\n     * adjustments e.g. to set the era based on the date or to revise the month\n     * number in lunisolar calendars per\n     * https://github.com/tc39/proposal-temporal/issues/1203.\n     *\n     * The base implementation fills in missing values by assuming the simplest\n     * possible calendar:\n     * - no eras or a constant era defined in `.constantEra`\n     * - non-lunisolar calendar (no leap months)\n     * */\n    adjustCalendarDate(calendarDateParam, cache = undefined, overflow = 'constrain', \n    // This param is only used by derived classes\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fromLegacyDate = false) {\n        if (this.calendarType === 'lunisolar')\n            throw new RangeError('Override required for lunisolar calendars');\n        let calendarDate = calendarDateParam;\n        this.validateCalendarDate(calendarDate);\n        // For calendars that always use the same era, set it here so that derived\n        // calendars won't need to implement this method simply to set the era.\n        if (this.constantEra) {\n            // year and eraYear always match when there's only one possible era\n            const { year, eraYear } = calendarDate;\n            calendarDate = {\n                ...calendarDate,\n                era: this.constantEra,\n                year: year !== undefined ? year : eraYear,\n                eraYear: eraYear !== undefined ? eraYear : year\n            };\n        }\n        const largestMonth = this.monthsInYear(calendarDate, cache);\n        let { month, monthCode } = calendarDate;\n        ({ month, monthCode } = resolveNonLunisolarMonth(calendarDate, overflow, largestMonth));\n        return { ...calendarDate, month, monthCode };\n    }\n    regulateMonthDayNaive(calendarDate, overflow, cache) {\n        const largestMonth = this.monthsInYear(calendarDate, cache);\n        let { month, day } = calendarDate;\n        if (overflow === 'reject') {\n            ES.RejectToRange(month, 1, largestMonth);\n            ES.RejectToRange(day, 1, this.maximumMonthLength(calendarDate));\n        }\n        else {\n            month = ES.ConstrainToRange(month, 1, largestMonth);\n            day = ES.ConstrainToRange(day, 1, this.maximumMonthLength({ ...calendarDate, month }));\n        }\n        return { ...calendarDate, month, day };\n    }\n    calendarToIsoDate(dateParam, overflow = 'constrain', cache) {\n        const originalDate = dateParam;\n        // First, normalize the calendar date to ensure that (year, month, day)\n        // are all present, converting monthCode and eraYear if needed.\n        let date = this.adjustCalendarDate(dateParam, cache, overflow, false);\n        // Fix obviously out-of-bounds values. Values that are valid generally, but\n        // not in this particular year, may not be caught here for some calendars.\n        // If so, these will be handled lower below.\n        date = this.regulateMonthDayNaive(date, overflow, cache);\n        const { year, month, day } = date;\n        const key = JSON.stringify({ func: 'calendarToIsoDate', year, month, day, overflow, id: this.id });\n        let cached = cache.get(key);\n        if (cached)\n            return cached;\n        // If YMD are present in the input but the input has been constrained\n        // already, then cache both the original value and the constrained value.\n        let keyOriginal;\n        if (originalDate.year !== undefined &&\n            originalDate.month !== undefined &&\n            originalDate.day !== undefined &&\n            (originalDate.year !== date.year || originalDate.month !== date.month || originalDate.day !== date.day)) {\n            keyOriginal = JSON.stringify({\n                func: 'calendarToIsoDate',\n                year: originalDate.year,\n                month: originalDate.month,\n                day: originalDate.day,\n                overflow,\n                id: this.id\n            });\n            cached = cache.get(keyOriginal);\n            if (cached)\n                return cached;\n        }\n        // First, try to roughly guess the result\n        let isoEstimate = this.estimateIsoDate({ year, month, day });\n        const calculateSameMonthResult = (diffDays) => {\n            // If the estimate is in the same year & month as the target, then we can\n            // calculate the result exactly and short-circuit any additional logic.\n            // This optimization assumes that months are continuous. It would break if\n            // a calendar skipped days, like the Julian->Gregorian switchover. But the\n            // only ICU calendars that currently skip days (japanese/roc/buddhist) is\n            // a bug (https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)\n            // that's currently detected by `checkIcuBugs()` which will throw. So\n            // this optimization should be safe for all ICU calendars.\n            let testIsoEstimate = this.addDaysIso(isoEstimate, diffDays);\n            if (date.day > this.minimumMonthLength(date)) {\n                // There's a chance that the calendar date is out of range. Throw or\n                // constrain if so.\n                let testCalendarDate = this.isoToCalendarDate(testIsoEstimate, cache);\n                while (testCalendarDate.month !== month || testCalendarDate.year !== year) {\n                    if (overflow === 'reject') {\n                        throw new RangeError(`day ${day} does not exist in month ${month} of year ${year}`);\n                    }\n                    // Back up a day at a time until we're not hanging over the month end\n                    testIsoEstimate = this.addDaysIso(testIsoEstimate, -1);\n                    testCalendarDate = this.isoToCalendarDate(testIsoEstimate, cache);\n                }\n            }\n            return testIsoEstimate;\n        };\n        let sign = 0;\n        let roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n        let diff = simpleDateDiff(date, roundtripEstimate);\n        if (diff.years !== 0 || diff.months !== 0 || diff.days !== 0) {\n            const diffTotalDaysEstimate = diff.years * 365 + diff.months * 30 + diff.days;\n            isoEstimate = this.addDaysIso(isoEstimate, diffTotalDaysEstimate);\n            roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n            diff = simpleDateDiff(date, roundtripEstimate);\n            if (diff.years === 0 && diff.months === 0) {\n                isoEstimate = calculateSameMonthResult(diff.days);\n            }\n            else {\n                sign = this.compareCalendarDates(date, roundtripEstimate);\n            }\n        }\n        // If the initial guess is not in the same month, then then bisect the\n        // distance to the target, starting with 8 days per step.\n        let increment = 8;\n        let maybeConstrained = false;\n        while (sign) {\n            isoEstimate = this.addDaysIso(isoEstimate, sign * increment);\n            const oldRoundtripEstimate = roundtripEstimate;\n            roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n            const oldSign = sign;\n            sign = this.compareCalendarDates(date, roundtripEstimate);\n            if (sign) {\n                diff = simpleDateDiff(date, roundtripEstimate);\n                if (diff.years === 0 && diff.months === 0) {\n                    isoEstimate = calculateSameMonthResult(diff.days);\n                    // Signal the loop condition that there's a match.\n                    sign = 0;\n                    // If the calendar day is larger than the minimal length for this\n                    // month, then it might be larger than the actual length of the month.\n                    // So we won't cache it as the correct calendar date for this ISO\n                    // date.\n                    maybeConstrained = date.day > this.minimumMonthLength(date);\n                }\n                else if (oldSign && sign !== oldSign) {\n                    if (increment > 1) {\n                        // If the estimate overshot the target, try again with a smaller increment\n                        // in the reverse direction.\n                        increment /= 2;\n                    }\n                    else {\n                        // Increment is 1, and neither the previous estimate nor the new\n                        // estimate is correct. The only way that can happen is if the\n                        // original date was an invalid value that will be constrained or\n                        // rejected here.\n                        if (overflow === 'reject') {\n                            throw new RangeError(`Can't find ISO date from calendar date: ${JSON.stringify({ ...originalDate })}`);\n                        }\n                        else {\n                            // To constrain, pick the earliest value\n                            const order = this.compareCalendarDates(roundtripEstimate, oldRoundtripEstimate);\n                            // If current value is larger, then back up to the previous value.\n                            if (order > 0)\n                                isoEstimate = this.addDaysIso(isoEstimate, -1);\n                            maybeConstrained = true;\n                            sign = 0;\n                        }\n                    }\n                }\n            }\n        }\n        cache.set(key, isoEstimate);\n        if (keyOriginal)\n            cache.set(keyOriginal, isoEstimate);\n        if (date.year === undefined ||\n            date.month === undefined ||\n            date.day === undefined ||\n            date.monthCode === undefined ||\n            (this.hasEra && (date.era === undefined || date.eraYear === undefined))) {\n            throw new RangeError('Unexpected missing property');\n        }\n        if (!maybeConstrained) {\n            // Also cache the reverse mapping\n            const keyReverse = JSON.stringify({\n                func: 'isoToCalendarDate',\n                isoYear: isoEstimate.year,\n                isoMonth: isoEstimate.month,\n                isoDay: isoEstimate.day,\n                id: this.id\n            });\n            cache.set(keyReverse, date);\n        }\n        return isoEstimate;\n    }\n    temporalToCalendarDate(date, cache) {\n        const isoDate = { year: GetSlot(date, ISO_YEAR), month: GetSlot(date, ISO_MONTH), day: GetSlot(date, ISO_DAY) };\n        const result = this.isoToCalendarDate(isoDate, cache);\n        return result;\n    }\n    compareCalendarDates(date1Param, date2Param) {\n        // `date1` and `date2` are already records. The calls below simply validate\n        // that all three required fields are present.\n        const date1 = ES.PrepareTemporalFields(date1Param, ['day', 'month', 'year'], ['day', 'month', 'year']);\n        const date2 = ES.PrepareTemporalFields(date2Param, ['day', 'month', 'year'], ['day', 'month', 'year']);\n        if (date1.year !== date2.year)\n            return ES.ComparisonResult(date1.year - date2.year);\n        if (date1.month !== date2.month)\n            return ES.ComparisonResult(date1.month - date2.month);\n        if (date1.day !== date2.day)\n            return ES.ComparisonResult(date1.day - date2.day);\n        return 0;\n    }\n    /** Ensure that a calendar date actually exists. If not, return the closest earlier date. */\n    regulateDate(calendarDate, overflow = 'constrain', cache) {\n        const isoDate = this.calendarToIsoDate(calendarDate, overflow, cache);\n        return this.isoToCalendarDate(isoDate, cache);\n    }\n    addDaysIso(isoDate, days) {\n        const added = ES.AddISODate(isoDate.year, isoDate.month, isoDate.day, 0, 0, 0, days, 'constrain');\n        return added;\n    }\n    addDaysCalendar(calendarDate, days, cache) {\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const addedIso = this.addDaysIso(isoDate, days);\n        const addedCalendar = this.isoToCalendarDate(addedIso, cache);\n        return addedCalendar;\n    }\n    addMonthsCalendar(calendarDateParam, months, overflow, cache) {\n        let calendarDate = calendarDateParam;\n        const { day } = calendarDate;\n        for (let i = 0, absMonths = MathAbs(months); i < absMonths; i++) {\n            const { month } = calendarDate;\n            const oldCalendarDate = calendarDate;\n            const days = months < 0\n                ? -Math.max(day, this.daysInPreviousMonth(calendarDate, cache))\n                : this.daysInMonth(calendarDate, cache);\n            const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n            let addedIso = this.addDaysIso(isoDate, days);\n            calendarDate = this.isoToCalendarDate(addedIso, cache);\n            // Normally, we can advance one month by adding the number of days in the\n            // current month. However, if we're at the end of the current month and\n            // the next month has fewer days, then we rolled over to the after-next\n            // month. Below we detect this condition and back up until we're back in\n            // the desired month.\n            if (months > 0) {\n                const monthsInOldYear = this.monthsInYear(oldCalendarDate, cache);\n                while (calendarDate.month - 1 !== month % monthsInOldYear) {\n                    addedIso = this.addDaysIso(addedIso, -1);\n                    calendarDate = this.isoToCalendarDate(addedIso, cache);\n                }\n            }\n            if (calendarDate.day !== day) {\n                // try to retain the original day-of-month, if possible\n                calendarDate = this.regulateDate({ ...calendarDate, day }, 'constrain', cache);\n            }\n        }\n        if (overflow === 'reject' && calendarDate.day !== day) {\n            throw new RangeError(`Day ${day} does not exist in resulting calendar month`);\n        }\n        return calendarDate;\n    }\n    addCalendar(calendarDate, { years = 0, months = 0, weeks = 0, days = 0 }, overflow, cache) {\n        const { year, day, monthCode } = calendarDate;\n        const addedYears = this.adjustCalendarDate({ year: year + years, monthCode, day }, cache);\n        const addedMonths = this.addMonthsCalendar(addedYears, months, overflow, cache);\n        const initialDays = days + weeks * 7;\n        const addedDays = this.addDaysCalendar(addedMonths, initialDays, cache);\n        return addedDays;\n    }\n    untilCalendar(calendarOne, calendarTwo, largestUnit, cache) {\n        let days = 0;\n        let weeks = 0;\n        let months = 0;\n        let years = 0;\n        switch (largestUnit) {\n            case 'day':\n                days = this.calendarDaysUntil(calendarOne, calendarTwo, cache);\n                break;\n            case 'week': {\n                const totalDays = this.calendarDaysUntil(calendarOne, calendarTwo, cache);\n                days = totalDays % 7;\n                weeks = (totalDays - days) / 7;\n                break;\n            }\n            case 'month':\n            case 'year': {\n                const diffYears = calendarTwo.year - calendarOne.year;\n                const diffMonths = calendarTwo.month - calendarOne.month;\n                const diffDays = calendarTwo.day - calendarOne.day;\n                const sign = this.compareCalendarDates(calendarTwo, calendarOne);\n                if (!sign) {\n                    return { years: 0, months: 0, weeks: 0, days: 0 };\n                }\n                if (largestUnit === 'year' && diffYears) {\n                    const isOneFurtherInYear = diffMonths * sign < 0 || (diffMonths === 0 && diffDays * sign < 0);\n                    years = isOneFurtherInYear ? diffYears - sign : diffYears;\n                }\n                const yearsAdded = years ? this.addCalendar(calendarOne, { years }, 'constrain', cache) : calendarOne;\n                // Now we have less than one year remaining. Add one month at a time\n                // until we go over the target, then back up one month and calculate\n                // remaining days and weeks.\n                let current;\n                let next = yearsAdded;\n                do {\n                    months += sign;\n                    current = next;\n                    next = this.addMonthsCalendar(current, sign, 'constrain', cache);\n                    if (next.day !== calendarOne.day) {\n                        // In case the day was constrained down, try to un-constrain it\n                        next = this.regulateDate({ ...next, day: calendarOne.day }, 'constrain', cache);\n                    }\n                } while (this.compareCalendarDates(calendarTwo, next) * sign >= 0);\n                months -= sign; // correct for loop above which overshoots by 1\n                const remainingDays = this.calendarDaysUntil(current, calendarTwo, cache);\n                days = remainingDays;\n                break;\n            }\n        }\n        return { years, months, weeks, days };\n    }\n    daysInMonth(calendarDate, cache) {\n        // Add enough days to roll over to the next month. One we're in the next\n        // month, we can calculate the length of the current month. NOTE: This\n        // algorithm assumes that months are continuous. It would break if a\n        // calendar skipped days, like the Julian->Gregorian switchover. But the\n        // only ICU calendars that currently skip days (japanese/roc/buddhist) is a\n        // bug (https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)\n        // that's currently detected by `checkIcuBugs()` which will throw. So this\n        // code should be safe for all ICU calendars.\n        const { day } = calendarDate;\n        const max = this.maximumMonthLength(calendarDate);\n        const min = this.minimumMonthLength(calendarDate);\n        // easiest case: we already know the month length if min and max are the same.\n        if (min === max)\n            return min;\n        // Add enough days to get into the next month, without skipping it\n        const increment = day <= max - min ? max : min;\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const addedIsoDate = this.addDaysIso(isoDate, increment);\n        const addedCalendarDate = this.isoToCalendarDate(addedIsoDate, cache);\n        // Now back up to the last day of the original month\n        const endOfMonthIso = this.addDaysIso(addedIsoDate, -addedCalendarDate.day);\n        const endOfMonthCalendar = this.isoToCalendarDate(endOfMonthIso, cache);\n        return endOfMonthCalendar.day;\n    }\n    daysInPreviousMonth(calendarDate, cache) {\n        const { day, month, year } = calendarDate;\n        // Check to see if we already know the month length, and return it if so\n        const previousMonthYear = month > 1 ? year : year - 1;\n        let previousMonthDate = { year: previousMonthYear, month, day: 1 };\n        const previousMonth = month > 1 ? month - 1 : this.monthsInYear(previousMonthDate, cache);\n        previousMonthDate = { ...previousMonthDate, month: previousMonth };\n        const min = this.minimumMonthLength(previousMonthDate);\n        const max = this.maximumMonthLength(previousMonthDate);\n        if (min === max)\n            return max;\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const lastDayOfPreviousMonthIso = this.addDaysIso(isoDate, -day);\n        const lastDayOfPreviousMonthCalendar = this.isoToCalendarDate(lastDayOfPreviousMonthIso, cache);\n        return lastDayOfPreviousMonthCalendar.day;\n    }\n    startOfCalendarYear(calendarDate) {\n        return { year: calendarDate.year, month: 1, monthCode: 'M01', day: 1 };\n    }\n    startOfCalendarMonth(calendarDate) {\n        return { year: calendarDate.year, month: calendarDate.month, day: 1 };\n    }\n    calendarDaysUntil(calendarOne, calendarTwo, cache) {\n        const oneIso = this.calendarToIsoDate(calendarOne, 'constrain', cache);\n        const twoIso = this.calendarToIsoDate(calendarTwo, 'constrain', cache);\n        return this.isoDaysUntil(oneIso, twoIso);\n    }\n    isoDaysUntil(oneIso, twoIso) {\n        const duration = ES.DifferenceISODate(oneIso.year, oneIso.month, oneIso.day, twoIso.year, twoIso.month, twoIso.day, 'day');\n        return duration.days;\n    }\n    monthDayFromFields(fields, overflow, cache) {\n        let { year, month, monthCode, day, era, eraYear } = fields;\n        if (monthCode === undefined) {\n            if (year === undefined && (era === undefined || eraYear === undefined)) {\n                throw new TypeError('`monthCode`, `year`, or `era` and `eraYear` is required');\n            }\n            ({ monthCode, year } = this.adjustCalendarDate({ year, month, monthCode, day, era, eraYear }, cache, overflow));\n        }\n        let isoYear, isoMonth, isoDay;\n        let closestCalendar, closestIso;\n        // Look backwards starting from the calendar year of 1972-01-01 up to 100\n        // calendar years to find a year that has this month and day. Normal months\n        // and days will match immediately, but for leap days and leap months we may\n        // have to look for a while.\n        const startDateIso = { year: 1972, month: 1, day: 1 };\n        const { year: calendarYear } = this.isoToCalendarDate(startDateIso, cache);\n        for (let i = 0; i < 100; i++) {\n            const testCalendarDate = this.adjustCalendarDate({ day, monthCode, year: calendarYear - i }, cache);\n            const isoDate = this.calendarToIsoDate(testCalendarDate, 'constrain', cache);\n            const roundTripCalendarDate = this.isoToCalendarDate(isoDate, cache);\n            ({ year: isoYear, month: isoMonth, day: isoDay } = isoDate);\n            if (roundTripCalendarDate.monthCode === monthCode && roundTripCalendarDate.day === day) {\n                return { month: isoMonth, day: isoDay, year: isoYear };\n            }\n            else if (overflow === 'constrain') {\n                // non-ISO constrain algorithm tries to find the closest date in a matching month\n                if (closestCalendar === undefined ||\n                    (roundTripCalendarDate.monthCode === closestCalendar.monthCode &&\n                        roundTripCalendarDate.day > closestCalendar.day)) {\n                    closestCalendar = roundTripCalendarDate;\n                    closestIso = isoDate;\n                }\n            }\n        }\n        if (overflow === 'constrain' && closestIso !== undefined)\n            return closestIso;\n        throw new RangeError(`No recent ${this.id} year with monthCode ${monthCode} and day ${day}`);\n    }\n}\nclass HebrewHelper extends HelperBase {\n    constructor() {\n        super(...arguments);\n        this.id = 'hebrew';\n        this.calendarType = 'lunisolar';\n        this.months = {\n            Tishri: { leap: 1, regular: 1, monthCode: 'M01', days: 30 },\n            Heshvan: { leap: 2, regular: 2, monthCode: 'M02', days: { min: 29, max: 30 } },\n            Kislev: { leap: 3, regular: 3, monthCode: 'M03', days: { min: 29, max: 30 } },\n            Tevet: { leap: 4, regular: 4, monthCode: 'M04', days: 29 },\n            Shevat: { leap: 5, regular: 5, monthCode: 'M05', days: 30 },\n            Adar: { leap: undefined, regular: 6, monthCode: 'M06', days: 29 },\n            'Adar I': { leap: 6, regular: undefined, monthCode: 'M05L', days: 30 },\n            'Adar II': { leap: 7, regular: undefined, monthCode: 'M06', days: 29 },\n            Nisan: { leap: 8, regular: 7, monthCode: 'M07', days: 30 },\n            Iyar: { leap: 9, regular: 8, monthCode: 'M08', days: 29 },\n            Sivan: { leap: 10, regular: 9, monthCode: 'M09', days: 30 },\n            Tamuz: { leap: 11, regular: 10, monthCode: 'M10', days: 29 },\n            Av: { leap: 12, regular: 11, monthCode: 'M11', days: 30 },\n            Elul: { leap: 13, regular: 12, monthCode: 'M12', days: 29 }\n        };\n        // All built-in calendars except Chinese/Dangi and Hebrew use an era\n        this.hasEra = false;\n    }\n    inLeapYear(calendarDate) {\n        const { year } = calendarDate;\n        // FYI: In addition to adding a month in leap years, the Hebrew calendar\n        // also has per-year changes to the number of days of Heshvan and Kislev.\n        // Given that these can be calculated by counting the number of days in\n        // those months, I assume that these DO NOT need to be exposed as\n        // Hebrew-only prototype fields or methods.\n        return (7 * year + 1) % 19 < 7;\n    }\n    monthsInYear(calendarDate) {\n        return this.inLeapYear(calendarDate) ? 13 : 12;\n    }\n    minimumMonthLength(calendarDate) {\n        return this.minMaxMonthLength(calendarDate, 'min');\n    }\n    maximumMonthLength(calendarDate) {\n        return this.minMaxMonthLength(calendarDate, 'max');\n    }\n    minMaxMonthLength(calendarDate, minOrMax) {\n        const { month, year } = calendarDate;\n        const monthCode = this.getMonthCode(year, month);\n        const monthInfo = ObjectEntries(this.months).find((m) => m[1].monthCode === monthCode);\n        if (monthInfo === undefined)\n            throw new RangeError(`unmatched Hebrew month: ${month}`);\n        const daysInMonth = monthInfo[1].days;\n        return typeof daysInMonth === 'number' ? daysInMonth : daysInMonth[minOrMax];\n    }\n    /** Take a guess at what ISO date a particular calendar date corresponds to */\n    estimateIsoDate(calendarDate) {\n        const { year } = calendarDate;\n        return { year: year - 3760, month: 1, day: 1 };\n    }\n    getMonthCode(year, month) {\n        if (this.inLeapYear({ year })) {\n            return month === 6 ? buildMonthCode(5, true) : buildMonthCode(month < 6 ? month : month - 1);\n        }\n        else {\n            return buildMonthCode(month);\n        }\n    }\n    adjustCalendarDate(calendarDate, cache, overflow = 'constrain', fromLegacyDate = false) {\n        // The incoming type is actually CalendarDate (same as args to\n        // Calendar.dateFromParams) but TS isn't smart enough to follow all the\n        // reassignments below, so as an alternative to 10+ type casts, we'll lie\n        // here and claim that the type has `day` and `year` filled in already.\n        let { year, eraYear, month, monthCode, day, monthExtra } = calendarDate;\n        if (year === undefined && eraYear !== undefined)\n            year = eraYear;\n        if (eraYear === undefined && year !== undefined)\n            eraYear = year;\n        if (fromLegacyDate) {\n            // In Pre Node-14 V8, DateTimeFormat.formatToParts `month: 'numeric'`\n            // output returns the numeric equivalent of `month` as a string, meaning\n            // that `'6'` in a leap year is Adar I, while `'6'` in a non-leap year\n            // means Adar. In this case, `month` will already be correct and no action\n            // is needed. However, in Node 14 and later formatToParts returns the name\n            // of the Hebrew month (e.g. \"Tevet\"), so we'll need to look up the\n            // correct `month` using the string name as a key.\n            if (monthExtra) {\n                const monthInfo = this.months[monthExtra];\n                if (!monthInfo)\n                    throw new RangeError(`Unrecognized month from formatToParts: ${monthExtra}`);\n                month = this.inLeapYear({ year }) ? monthInfo.leap : monthInfo.regular;\n            }\n            // Because we're getting data from legacy Date, then `month` will always be present\n            monthCode = this.getMonthCode(year, month);\n            const result = { year, month: month, day, era: undefined, eraYear, monthCode };\n            return result;\n        }\n        else {\n            // When called without input coming from legacy Date output, simply ensure\n            // that all fields are present.\n            this.validateCalendarDate(calendarDate);\n            if (month === undefined) {\n                if (monthCode.endsWith('L')) {\n                    if (monthCode !== 'M05L') {\n                        throw new RangeError(`Hebrew leap month must have monthCode M05L, not ${monthCode}`);\n                    }\n                    month = 6;\n                    if (!this.inLeapYear({ year })) {\n                        if (overflow === 'reject') {\n                            throw new RangeError(`Hebrew monthCode M05L is invalid in year ${year} which is not a leap year`);\n                        }\n                        else {\n                            // constrain to last day of previous month (Av)\n                            month = 5;\n                            day = 30;\n                            monthCode = 'M05';\n                        }\n                    }\n                }\n                else {\n                    month = monthCodeNumberPart(monthCode);\n                    // if leap month is before this one, the month index is one more than the month code\n                    if (this.inLeapYear({ year }) && month >= 6)\n                        month++;\n                    const largestMonth = this.monthsInYear({ year });\n                    if (month < 1 || month > largestMonth)\n                        throw new RangeError(`Invalid monthCode: ${monthCode}`);\n                }\n            }\n            else {\n                if (overflow === 'reject') {\n                    ES.RejectToRange(month, 1, this.monthsInYear({ year }));\n                    ES.RejectToRange(day, 1, this.maximumMonthLength({ year, month }));\n                }\n                else {\n                    month = ES.ConstrainToRange(month, 1, this.monthsInYear({ year }));\n                    day = ES.ConstrainToRange(day, 1, this.maximumMonthLength({ year, month }));\n                }\n                if (monthCode === undefined) {\n                    monthCode = this.getMonthCode(year, month);\n                }\n                else {\n                    const calculatedMonthCode = this.getMonthCode(year, month);\n                    if (calculatedMonthCode !== monthCode) {\n                        throw new RangeError(`monthCode ${monthCode} doesn't correspond to month ${month} in Hebrew year ${year}`);\n                    }\n                }\n            }\n            return { ...calendarDate, day, month, monthCode: monthCode, year, eraYear };\n        }\n    }\n}\n/**\n * For Temporal purposes, the Islamic calendar is simple because it's always the\n * same 12 months in the same order.\n */\nclass IslamicBaseHelper extends HelperBase {\n    constructor() {\n        super(...arguments);\n        this.calendarType = 'lunar';\n        this.DAYS_PER_ISLAMIC_YEAR = 354 + 11 / 30;\n        this.DAYS_PER_ISO_YEAR = 365.2425;\n        this.constantEra = 'ah';\n    }\n    inLeapYear(calendarDate, cache) {\n        // In leap years, the 12th month has 30 days. In non-leap years: 29.\n        const days = this.daysInMonth({ year: calendarDate.year, month: 12, day: 1 }, cache);\n        return days === 30;\n    }\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    }\n    minimumMonthLength( /* calendarDate */) {\n        return 29;\n    }\n    maximumMonthLength( /* calendarDate */) {\n        return 30;\n    }\n    estimateIsoDate(calendarDate) {\n        const { year } = this.adjustCalendarDate(calendarDate);\n        return { year: MathFloor((year * this.DAYS_PER_ISLAMIC_YEAR) / this.DAYS_PER_ISO_YEAR) + 622, month: 1, day: 1 };\n    }\n}\n// There are 6 Islamic calendars with the same implementation in this polyfill.\n// They vary only in their ID. They do emit different output from the underlying\n// Intl implementation, but our code for each of them is identical.\nclass IslamicHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamic';\n    }\n}\nclass IslamicUmalquraHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamic-umalqura';\n    }\n}\nclass IslamicTblaHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamic-tbla';\n    }\n}\nclass IslamicCivilHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamic-civil';\n    }\n}\nclass IslamicRgsaHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamic-rgsa';\n    }\n}\nclass IslamicCcHelper extends IslamicBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'islamicc';\n    }\n}\nclass PersianHelper extends HelperBase {\n    constructor() {\n        super(...arguments);\n        this.id = 'persian';\n        this.calendarType = 'solar';\n        this.constantEra = 'ap';\n    }\n    inLeapYear(calendarDate, cache) {\n        // Same logic (count days in the last month) for Persian as for Islamic,\n        // even though Persian is solar and Islamic is lunar.\n        return IslamicHelper.prototype.inLeapYear.call(this, calendarDate, cache);\n    }\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    }\n    minimumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        if (month === 12)\n            return 29;\n        return month <= 6 ? 31 : 30;\n    }\n    maximumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        if (month === 12)\n            return 30;\n        return month <= 6 ? 31 : 30;\n    }\n    estimateIsoDate(calendarDate) {\n        const { year } = this.adjustCalendarDate(calendarDate);\n        return { year: year + 621, month: 1, day: 1 };\n    }\n}\nclass IndianHelper extends HelperBase {\n    constructor() {\n        super(...arguments);\n        this.id = 'indian';\n        this.calendarType = 'solar';\n        this.constantEra = 'saka';\n        // Indian months always start at the same well-known Gregorian month and\n        // day. So this conversion is easy and fast. See\n        // https://en.wikipedia.org/wiki/Indian_national_calendar\n        this.months = {\n            1: { length: 30, month: 3, day: 22, leap: { length: 31, month: 3, day: 21 } },\n            2: { length: 31, month: 4, day: 21 },\n            3: { length: 31, month: 5, day: 22 },\n            4: { length: 31, month: 6, day: 22 },\n            5: { length: 31, month: 7, day: 23 },\n            6: { length: 31, month: 8, day: 23 },\n            7: { length: 30, month: 9, day: 23 },\n            8: { length: 30, month: 10, day: 23 },\n            9: { length: 30, month: 11, day: 22 },\n            10: { length: 30, month: 12, day: 22 },\n            11: { length: 30, month: 1, nextYear: true, day: 21 },\n            12: { length: 30, month: 2, nextYear: true, day: 20 }\n        };\n        // https://bugs.chromium.org/p/v8/issues/detail?id=10529 causes Intl's Indian\n        // calendar output to fail for all dates before 0001-01-01 ISO.  For example,\n        // in Node 12 0000-01-01 is calculated as 6146/12/-583 instead of 10/11/-79 as\n        // expected.\n        this.vulnerableToBceBug = new Date('0000-01-01T00:00Z').toLocaleDateString('en-US-u-ca-indian', { timeZone: 'UTC' }) !== '10/11/-79 Saka';\n    }\n    inLeapYear(calendarDate) {\n        // From https://en.wikipedia.org/wiki/Indian_national_calendar:\n        // Years are counted in the Saka era, which starts its year 0 in the year 78\n        // of the Common Era. To determine leap years, add 78 to the Saka year – if\n        // the result is a leap year in the Gregorian calendar, then the Saka year\n        // is a leap year as well.\n        return isGregorianLeapYear(calendarDate.year + 78);\n    }\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    }\n    minimumMonthLength(calendarDate) {\n        return this.getMonthInfo(calendarDate).length;\n    }\n    maximumMonthLength(calendarDate) {\n        return this.getMonthInfo(calendarDate).length;\n    }\n    getMonthInfo(calendarDate) {\n        const { month } = calendarDate;\n        let monthInfo = this.months[month];\n        if (monthInfo === undefined)\n            throw new RangeError(`Invalid month: ${month}`);\n        if (this.inLeapYear(calendarDate) && monthInfo.leap)\n            monthInfo = monthInfo.leap;\n        return monthInfo;\n    }\n    estimateIsoDate(calendarDateParam) {\n        // FYI, this \"estimate\" is always the exact ISO date, which makes the Indian\n        // calendar fast!\n        const calendarDate = this.adjustCalendarDate(calendarDateParam);\n        const monthInfo = this.getMonthInfo(calendarDate);\n        const isoYear = calendarDate.year + 78 + (monthInfo.nextYear ? 1 : 0);\n        const isoMonth = monthInfo.month;\n        const isoDay = monthInfo.day;\n        const isoDate = ES.AddISODate(isoYear, isoMonth, isoDay, 0, 0, 0, calendarDate.day - 1, 'constrain');\n        return isoDate;\n    }\n    checkIcuBugs(isoDate) {\n        if (this.vulnerableToBceBug && isoDate.year < 1) {\n            throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 0001-01-01` +\n                ' (see https://bugs.chromium.org/p/v8/issues/detail?id=10529)');\n        }\n    }\n}\n/**\n * This function adds additional metadata that makes it easier to work with\n * eras. Note that it mutates and normalizes the original era objects, which is\n * OK because this is non-observable, internal-only metadata.\n *\n * The result is an array of eras with the shape defined above.\n * */\nfunction adjustEras(erasParam) {\n    let eras = erasParam;\n    if (eras.length === 0) {\n        throw new RangeError('Invalid era data: eras are required');\n    }\n    if (eras.length === 1 && eras[0].reverseOf) {\n        throw new RangeError('Invalid era data: anchor era cannot count years backwards');\n    }\n    if (eras.length === 1 && !eras[0].name) {\n        throw new RangeError('Invalid era data: at least one named era is required');\n    }\n    if (eras.filter((e) => e.reverseOf != null).length > 1) {\n        throw new RangeError('Invalid era data: only one era can count years backwards');\n    }\n    // Find the \"anchor era\" which is the era used for (era-less) `year`. Reversed\n    // eras can never be anchors. The era without an `anchorEpoch` property is the\n    // anchor.\n    let anchorEra;\n    eras.forEach((e) => {\n        if (e.isAnchor || (!e.anchorEpoch && !e.reverseOf)) {\n            if (anchorEra)\n                throw new RangeError('Invalid era data: cannot have multiple anchor eras');\n            anchorEra = e;\n            e.anchorEpoch = { year: e.hasYearZero ? 0 : 1 };\n        }\n        else if (!e.name) {\n            throw new RangeError('If era name is blank, it must be the anchor era');\n        }\n    });\n    // If the era name is undefined, then it's an anchor that doesn't interact\n    // with eras at all. For example, Japanese `year` is always the same as ISO\n    // `year`.  So this \"era\" is the anchor era but isn't used for era matching.\n    // Strip it from the list that's returned.\n    eras = eras.filter((e) => e.name);\n    eras.forEach((e) => {\n        // Some eras are mirror images of another era e.g. B.C. is the reverse of A.D.\n        // Replace the string-valued \"reverseOf\" property with the actual era object\n        // that's reversed.\n        const { reverseOf } = e;\n        if (reverseOf) {\n            const reversedEra = eras.find((era) => era.name === reverseOf);\n            if (reversedEra === undefined)\n                throw new RangeError(`Invalid era data: unmatched reverseOf era: ${reverseOf}`);\n            e.reverseOf = reversedEra;\n            e.anchorEpoch = reversedEra.anchorEpoch;\n            e.isoEpoch = reversedEra.isoEpoch;\n        }\n        if (e.anchorEpoch.month === undefined)\n            e.anchorEpoch.month = 1;\n        if (e.anchorEpoch.day === undefined)\n            e.anchorEpoch.day = 1;\n    });\n    // Ensure that the latest epoch is first in the array. This lets us try to\n    // match eras in index order, with the last era getting the remaining older\n    // years. Any reverse-signed era must be at the end.\n    ArraySort.call(eras, (e1, e2) => {\n        if (e1.reverseOf)\n            return 1;\n        if (e2.reverseOf)\n            return -1;\n        if (!e1.isoEpoch || !e2.isoEpoch)\n            throw new RangeError('Invalid era data: missing ISO epoch');\n        return e2.isoEpoch.year - e1.isoEpoch.year;\n    });\n    // If there's a reversed era, then the one before it must be the era that's\n    // being reversed.\n    const lastEraReversed = eras[eras.length - 1].reverseOf;\n    if (lastEraReversed) {\n        if (lastEraReversed !== eras[eras.length - 2])\n            throw new RangeError('Invalid era data: invalid reverse-sign era');\n    }\n    // Finally, add a \"genericName\" property in the format \"era{n} where `n` is\n    // zero-based index, with the oldest era being zero. This format is used by\n    // older versions of ICU data.\n    eras.forEach((e, i) => {\n        e.genericName = `era${eras.length - 1 - i}`;\n    });\n    return { eras: eras, anchorEra: (anchorEra || eras[0]) };\n}\nfunction isGregorianLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n/** Base for all Gregorian-like calendars. */\nclass GregorianBaseHelper extends HelperBase {\n    constructor(id, originalEras) {\n        super();\n        this.calendarType = 'solar';\n        // Several calendars based on the Gregorian calendar use Julian dates (not\n        // proleptic Gregorian dates) before the Julian switchover in Oct 1582. See\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1173158.\n        this.v8IsVulnerableToJulianBug = new Date('+001001-01-01T00:00Z')\n            .toLocaleDateString('en-US-u-ca-japanese', { timeZone: 'UTC' })\n            .startsWith('12');\n        this.calendarIsVulnerableToJulianBug = false;\n        this.id = id;\n        const { eras, anchorEra } = adjustEras(originalEras);\n        this.anchorEra = anchorEra;\n        this.eras = eras;\n    }\n    inLeapYear(calendarDate) {\n        // Calendars that don't override this method use the same months and leap\n        // years as Gregorian. Once we know the ISO year corresponding to the\n        // calendar year, we'll know if it's a leap year or not.\n        const { year } = this.estimateIsoDate({ month: 1, day: 1, year: calendarDate.year });\n        return isGregorianLeapYear(year);\n    }\n    monthsInYear( /* calendarDate */) {\n        return 12;\n    }\n    minimumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        if (month === 2)\n            return this.inLeapYear(calendarDate) ? 29 : 28;\n        return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31;\n    }\n    maximumMonthLength(calendarDate) {\n        return this.minimumMonthLength(calendarDate);\n    }\n    /** Fill in missing parts of the (year, era, eraYear) tuple */\n    completeEraYear(calendarDate) {\n        const checkField = (name, value) => {\n            const currentValue = calendarDate[name];\n            if (currentValue != null && currentValue != value) {\n                throw new RangeError(`Input ${name} ${currentValue} doesn't match calculated value ${value}`);\n            }\n        };\n        const eraFromYear = (year) => {\n            let eraYear;\n            const adjustedCalendarDate = { ...calendarDate, year };\n            const matchingEra = this.eras.find((e, i) => {\n                if (i === this.eras.length - 1) {\n                    if (e.reverseOf) {\n                        // This is a reverse-sign era (like BCE) which must be the oldest\n                        // era. Count years backwards.\n                        if (year > 0)\n                            throw new RangeError(`Signed year ${year} is invalid for era ${e.name}`);\n                        eraYear = e.anchorEpoch.year - year;\n                        return true;\n                    }\n                    // last era always gets all \"leftover\" (older than epoch) years,\n                    // so no need for a comparison like below.\n                    eraYear = year - e.anchorEpoch.year + (e.hasYearZero ? 0 : 1);\n                    return true;\n                }\n                const comparison = this.compareCalendarDates(adjustedCalendarDate, e.anchorEpoch);\n                if (comparison >= 0) {\n                    eraYear = year - e.anchorEpoch.year + (e.hasYearZero ? 0 : 1);\n                    return true;\n                }\n                return false;\n            });\n            if (!matchingEra)\n                throw new RangeError(`Year ${year} was not matched by any era`);\n            return { eraYear: eraYear, era: matchingEra.name };\n        };\n        let { year, eraYear, era } = calendarDate;\n        if (year != null) {\n            ({ eraYear, era } = eraFromYear(year));\n            checkField('era', era);\n            checkField('eraYear', eraYear);\n        }\n        else if (eraYear != null) {\n            const matchingEra = era === undefined ? undefined : this.eras.find((e) => e.name === era || e.genericName === era);\n            if (!matchingEra)\n                throw new RangeError(`Era ${era} (ISO year ${eraYear}) was not matched by any era`);\n            if (eraYear < 1 && matchingEra.reverseOf) {\n                throw new RangeError(`Years in ${era} era must be positive, not ${year}`);\n            }\n            if (matchingEra.reverseOf) {\n                year = matchingEra.anchorEpoch.year - eraYear;\n            }\n            else {\n                year = eraYear + matchingEra.anchorEpoch.year - (matchingEra.hasYearZero ? 0 : 1);\n            }\n            checkField('year', year);\n            // We'll accept dates where the month/day is earlier than the start of\n            // the era or after its end as long as it's in the same year. If that\n            // happens, we'll adjust the era/eraYear pair to be the correct era for\n            // the `year`.\n            ({ eraYear, era } = eraFromYear(year));\n        }\n        else {\n            throw new RangeError('Either `year` or `eraYear` and `era` are required');\n        }\n        return { ...calendarDate, year, eraYear, era };\n    }\n    adjustCalendarDate(calendarDateParam, cache, overflow = 'constrain') {\n        let calendarDate = calendarDateParam;\n        // Because this is not a lunisolar calendar, it's safe to convert monthCode to a number\n        const { month, monthCode } = calendarDate;\n        if (month === undefined)\n            calendarDate = { ...calendarDate, month: monthCodeNumberPart(monthCode) };\n        this.validateCalendarDate(calendarDate);\n        calendarDate = this.completeEraYear(calendarDate);\n        return super.adjustCalendarDate(calendarDate, cache, overflow);\n    }\n    estimateIsoDate(calendarDateParam) {\n        const calendarDate = this.adjustCalendarDate(calendarDateParam);\n        const { year, month, day } = calendarDate;\n        const { anchorEra } = this;\n        const isoYearEstimate = year + anchorEra.isoEpoch.year - (anchorEra.hasYearZero ? 0 : 1);\n        return ES.RegulateISODate(isoYearEstimate, month, day, 'constrain');\n    }\n    checkIcuBugs(isoDate) {\n        if (this.calendarIsVulnerableToJulianBug && this.v8IsVulnerableToJulianBug) {\n            const beforeJulianSwitch = ES.CompareISODate(isoDate.year, isoDate.month, isoDate.day, 1582, 10, 15) < 0;\n            if (beforeJulianSwitch) {\n                throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 1582-10-15` +\n                    ' (see https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)');\n            }\n        }\n    }\n}\nclass OrthodoxBaseHelper extends GregorianBaseHelper {\n    constructor(id, originalEras) {\n        super(id, originalEras);\n    }\n    inLeapYear(calendarDate) {\n        // Leap years happen one year before the Julian leap year. Note that this\n        // calendar is based on the Julian calendar which has a leap year every 4\n        // years, unlike the Gregorian calendar which doesn't have leap years on\n        // years divisible by 100 except years divisible by 400.\n        //\n        // Note that we're assuming that leap years in before-epoch times match\n        // how leap years are defined now. This is probably not accurate but I'm\n        // not sure how better to do it.\n        const { year } = calendarDate;\n        return (year + 1) % 4 === 0;\n    }\n    monthsInYear( /* calendarDate */) {\n        return 13;\n    }\n    minimumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        // Ethiopian/Coptic calendars have 12 30-day months and an extra 5-6 day 13th month.\n        if (month === 13)\n            return this.inLeapYear(calendarDate) ? 6 : 5;\n        return 30;\n    }\n    maximumMonthLength(calendarDate) {\n        return this.minimumMonthLength(calendarDate);\n    }\n}\n// `coptic` and `ethiopic` calendars are very similar to `ethioaa` calendar,\n// with the following differences:\n// - Coptic uses BCE-like positive numbers for years before its epoch (the other\n//   two use negative year numbers before epoch)\n// - Coptic has a different epoch date\n// - Ethiopic has an additional second era that starts at the same date as the\n//   zero era of ethioaa.\nclass EthioaaHelper extends OrthodoxBaseHelper {\n    constructor() {\n        super('ethioaa', [{ name: 'era0', isoEpoch: { year: -5492, month: 7, day: 17 } }]);\n    }\n}\nclass CopticHelper extends OrthodoxBaseHelper {\n    constructor() {\n        super('coptic', [\n            { name: 'era1', isoEpoch: { year: 284, month: 8, day: 29 } },\n            { name: 'era0', reverseOf: 'era1' }\n        ]);\n    }\n}\n// Anchor is currently the older era to match ethioaa, but should it be the newer era?\n// See https://github.com/tc39/ecma402/issues/534 for discussion.\nclass EthiopicHelper extends OrthodoxBaseHelper {\n    constructor() {\n        super('ethiopic', [\n            { name: 'era0', isoEpoch: { year: -5492, month: 7, day: 17 } },\n            { name: 'era1', isoEpoch: { year: 8, month: 8, day: 27 }, anchorEpoch: { year: 5501 } }\n        ]);\n    }\n}\nclass RocHelper extends GregorianBaseHelper {\n    constructor() {\n        super('roc', [\n            { name: 'minguo', isoEpoch: { year: 1912, month: 1, day: 1 } },\n            { name: 'before-roc', reverseOf: 'minguo' }\n        ]);\n        this.calendarIsVulnerableToJulianBug = true;\n    }\n}\nclass BuddhistHelper extends GregorianBaseHelper {\n    constructor() {\n        super('buddhist', [{ name: 'be', hasYearZero: true, isoEpoch: { year: -543, month: 1, day: 1 } }]);\n        this.calendarIsVulnerableToJulianBug = true;\n    }\n}\nclass GregoryHelper extends GregorianBaseHelper {\n    constructor() {\n        super('gregory', [\n            { name: 'ce', isoEpoch: { year: 1, month: 1, day: 1 } },\n            { name: 'bce', reverseOf: 'ce' }\n        ]);\n    }\n    reviseIntlEra(calendarDate /*, isoDate: IsoDate*/) {\n        let { era, eraYear } = calendarDate;\n        // Firefox 96 introduced a bug where the `'short'` format of the era\n        // option mistakenly returns the one-letter (narrow) format instead. The\n        // code below handles either the correct or Firefox-buggy format. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1752253\n        if (era === 'bc' || era === 'b')\n            era = 'bce';\n        if (era === 'ad' || era === 'a')\n            era = 'ce';\n        return { era, eraYear };\n    }\n}\n// NOTE: Only the 5 modern eras (Meiji and later) are included. For dates\n// before Meiji 1, the `ce` and `bce` eras are used. Challenges with pre-Meiji\n// eras include:\n// - Start/end dates of older eras are not precisely defined, which is\n//   challenging given Temporal's need for precision\n// - Some era dates and/or names are disputed by historians\n// - As historical research proceeds, new eras are discovered and existing era\n//   dates are modified, leading to considerable churn which is not good for\n//   Temporal use.\n//  - The earliest era (in 645 CE) may not end up being the earliest depending\n//    on future historical scholarship\n//  - Before Meiji, Japan used a lunar (or lunisolar?) calendar but AFAIK\n//    that's not reflected in the ICU implementation.\n//\n// For more discussion: https://github.com/tc39/proposal-temporal/issues/526.\n//\n// Here's a full list of CLDR/ICU eras:\n// https://github.com/unicode-org/icu/blob/master/icu4c/source/data/locales/root.txt#L1582-L1818\n// https://github.com/unicode-org/cldr/blob/master/common/supplemental/supplementalData.xml#L4310-L4546\n//\n// NOTE: Japan started using the Gregorian calendar in 6 Meiji, replacing a\n// lunisolar calendar. So the day before January 1 of 6 Meiji (1873) was not\n// December 31, but December 2, of 5 Meiji (1872). The existing Ecma-402\n// Japanese calendar doesn't seem to take this into account, so neither do we:\n// > args = ['en-ca-u-ca-japanese', { era: 'short' }]\n// > new Date('1873-01-01T12:00').toLocaleString(...args)\n// '1 1, 6 Meiji, 12:00:00 PM'\n// > new Date('1872-12-31T12:00').toLocaleString(...args)\n// '12 31, 5 Meiji, 12:00:00 PM'\nclass JapaneseHelper extends GregorianBaseHelper {\n    constructor() {\n        super('japanese', [\n            // The Japanese calendar `year` is just the ISO year, because (unlike other\n            // ICU calendars) there's no obvious \"default era\", we use the ISO year.\n            { name: 'reiwa', isoEpoch: { year: 2019, month: 5, day: 1 }, anchorEpoch: { year: 2019, month: 5, day: 1 } },\n            { name: 'heisei', isoEpoch: { year: 1989, month: 1, day: 8 }, anchorEpoch: { year: 1989, month: 1, day: 8 } },\n            { name: 'showa', isoEpoch: { year: 1926, month: 12, day: 25 }, anchorEpoch: { year: 1926, month: 12, day: 25 } },\n            { name: 'taisho', isoEpoch: { year: 1912, month: 7, day: 30 }, anchorEpoch: { year: 1912, month: 7, day: 30 } },\n            { name: 'meiji', isoEpoch: { year: 1868, month: 9, day: 8 }, anchorEpoch: { year: 1868, month: 9, day: 8 } },\n            { name: 'ce', isoEpoch: { year: 1, month: 1, day: 1 } },\n            { name: 'bce', reverseOf: 'ce' }\n        ]);\n        this.calendarIsVulnerableToJulianBug = true;\n        // The last 3 Japanese eras confusingly return only one character in the\n        // default \"short\" era, so need to use the long format.\n        this.eraLength = 'long';\n    }\n    reviseIntlEra(calendarDate, isoDate) {\n        const { era, eraYear } = calendarDate;\n        const { year: isoYear } = isoDate;\n        if (this.eras.find((e) => e.name === era))\n            return { era, eraYear };\n        return (isoYear < 1 ? { era: 'bce', eraYear: 1 - isoYear } : { era: 'ce', eraYear: isoYear });\n    }\n}\nclass ChineseBaseHelper extends HelperBase {\n    constructor() {\n        super(...arguments);\n        this.calendarType = 'lunisolar';\n        // All built-in calendars except Chinese/Dangi and Hebrew use an era\n        this.hasEra = false;\n    }\n    inLeapYear(calendarDate, cache) {\n        const months = this.getMonthList(calendarDate.year, cache);\n        return ObjectEntries(months).length === 13;\n    }\n    monthsInYear(calendarDate, cache) {\n        return this.inLeapYear(calendarDate, cache) ? 13 : 12;\n    }\n    minimumMonthLength( /* calendarDate */) {\n        return 29;\n    }\n    maximumMonthLength( /* calendarDate */) {\n        return 30;\n    }\n    getMonthList(calendarYear, cache) {\n        if (calendarYear === undefined) {\n            throw new TypeError('Missing year');\n        }\n        const key = JSON.stringify({ func: 'getMonthList', calendarYear, id: this.id });\n        const cached = cache.get(key);\n        if (cached)\n            return cached;\n        const dateTimeFormat = this.getFormatter();\n        const getCalendarDate = (isoYear, daysPastFeb1) => {\n            const isoStringFeb1 = toUtcIsoDateString({ isoYear, isoMonth: 2, isoDay: 1 });\n            const legacyDate = new Date(isoStringFeb1);\n            // Now add the requested number of days, which may wrap to the next month.\n            legacyDate.setUTCDate(daysPastFeb1 + 1);\n            const newYearGuess = dateTimeFormat.formatToParts(legacyDate);\n            const calendarMonthString = newYearGuess.find((tv) => tv.type === 'month').value;\n            const calendarDay = +newYearGuess.find((tv) => tv.type === 'day').value;\n            let calendarYearToVerify = newYearGuess.find((tv) => tv.type === 'relatedYear');\n            if (calendarYearToVerify !== undefined) {\n                calendarYearToVerify = +calendarYearToVerify.value;\n            }\n            else {\n                // Node 12 has outdated ICU data that lacks the `relatedYear` field in the\n                // output of Intl.DateTimeFormat.formatToParts.\n                throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);\n            }\n            return { calendarMonthString, calendarDay, calendarYearToVerify };\n        };\n        // First, find a date close to Chinese New Year. Feb 17 will either be in\n        // the first month or near the end of the last month of the previous year.\n        let isoDaysDelta = 17;\n        let { calendarMonthString, calendarDay, calendarYearToVerify } = getCalendarDate(calendarYear, isoDaysDelta);\n        // If we didn't guess the first month correctly, add (almost in some months)\n        // a lunar month\n        if (calendarMonthString !== '1') {\n            isoDaysDelta += 29;\n            ({ calendarMonthString, calendarDay } = getCalendarDate(calendarYear, isoDaysDelta));\n        }\n        // Now back up to near the start of the first month, but not too near that\n        // off-by-one issues matter.\n        isoDaysDelta -= calendarDay - 5;\n        const result = {};\n        let monthIndex = 1;\n        let oldCalendarDay;\n        let oldMonthString;\n        let done = false;\n        do {\n            ({ calendarMonthString, calendarDay, calendarYearToVerify } = getCalendarDate(calendarYear, isoDaysDelta));\n            if (oldCalendarDay) {\n                result[oldMonthString].daysInMonth = oldCalendarDay + 30 - calendarDay;\n            }\n            if (calendarYearToVerify !== calendarYear) {\n                done = true;\n            }\n            else {\n                result[calendarMonthString] = { monthIndex: monthIndex++ };\n                // Move to the next month. Because months are sometimes 29 days, the day of the\n                // calendar month will move forward slowly but not enough to flip over to a new\n                // month before the loop ends at 12-13 months.\n                isoDaysDelta += 30;\n            }\n            oldCalendarDay = calendarDay;\n            oldMonthString = calendarMonthString;\n        } while (!done);\n        result[oldMonthString].daysInMonth = oldCalendarDay + 30 - calendarDay;\n        cache.set(key, result);\n        return result;\n    }\n    estimateIsoDate(calendarDate) {\n        const { year, month } = calendarDate;\n        return { year, month: month >= 12 ? 12 : month + 1, day: 1 };\n    }\n    adjustCalendarDate(calendarDate, cache, overflow = 'constrain', fromLegacyDate = false) {\n        let { year, month, monthExtra, day, monthCode, eraYear } = calendarDate;\n        if (fromLegacyDate) {\n            // Legacy Date output returns a string that's an integer with an optional\n            // \"bis\" suffix used only by the Chinese/Dangi calendar to indicate a leap\n            // month. Below we'll normalize the output.\n            year = eraYear;\n            if (monthExtra && monthExtra !== 'bis')\n                throw new RangeError(`Unexpected leap month suffix: ${monthExtra}`);\n            const monthCode = buildMonthCode(month, monthExtra !== undefined);\n            const monthString = `${month}${monthExtra || ''}`;\n            const months = this.getMonthList(year, cache);\n            const monthInfo = months[monthString];\n            if (monthInfo === undefined)\n                throw new RangeError(`Unmatched month ${monthString} in Chinese year ${year}`);\n            month = monthInfo.monthIndex;\n            return { year: year, month, day: day, era: undefined, eraYear, monthCode };\n        }\n        else {\n            // When called without input coming from legacy Date output,\n            // simply ensure that all fields are present.\n            this.validateCalendarDate(calendarDate);\n            if (year === undefined)\n                year = eraYear;\n            if (eraYear === undefined)\n                eraYear = year;\n            if (month === undefined) {\n                const months = this.getMonthList(year, cache);\n                let numberPart = monthCode.replace('L', 'bis').slice(1);\n                if (numberPart[0] === '0')\n                    numberPart = numberPart.slice(1);\n                let monthInfo = months[numberPart];\n                month = monthInfo && monthInfo.monthIndex;\n                // If this leap month isn't present in this year, constrain down to the last day of the previous month.\n                if (month === undefined &&\n                    monthCode.endsWith('L') &&\n                    !ArrayIncludes.call(['M01L', 'M12L', 'M13L'], monthCode) &&\n                    overflow === 'constrain') {\n                    let withoutML = monthCode.slice(1, -1);\n                    if (withoutML[0] === '0')\n                        withoutML = withoutML.slice(1);\n                    monthInfo = months[withoutML];\n                    if (monthInfo) {\n                        ({ daysInMonth: day, monthIndex: month } = monthInfo);\n                        monthCode = buildMonthCode(withoutML);\n                    }\n                }\n                if (month === undefined) {\n                    throw new RangeError(`Unmatched month ${monthCode} in Chinese year ${year}`);\n                }\n            }\n            else if (monthCode === undefined) {\n                const months = this.getMonthList(year, cache);\n                const monthEntries = ObjectEntries(months);\n                const largestMonth = monthEntries.length;\n                if (overflow === 'reject') {\n                    ES.RejectToRange(month, 1, largestMonth);\n                    ES.RejectToRange(day, 1, this.maximumMonthLength());\n                }\n                else {\n                    month = ES.ConstrainToRange(month, 1, largestMonth);\n                    day = ES.ConstrainToRange(day, 1, this.maximumMonthLength());\n                }\n                const matchingMonthEntry = monthEntries.find(([, v]) => v.monthIndex === month);\n                if (matchingMonthEntry === undefined) {\n                    throw new RangeError(`Invalid month ${month} in Chinese year ${year}`);\n                }\n                monthCode = buildMonthCode(matchingMonthEntry[0].replace('bis', ''), matchingMonthEntry[0].indexOf('bis') !== -1);\n            }\n            else {\n                // Both month and monthCode are present. Make sure they don't conflict.\n                const months = this.getMonthList(year, cache);\n                let numberPart = monthCode.replace('L', 'bis').slice(1);\n                if (numberPart[0] === '0')\n                    numberPart = numberPart.slice(1);\n                const monthInfo = months[numberPart];\n                if (!monthInfo)\n                    throw new RangeError(`Unmatched monthCode ${monthCode} in Chinese year ${year}`);\n                if (month !== monthInfo.monthIndex) {\n                    throw new RangeError(`monthCode ${monthCode} doesn't correspond to month ${month} in Chinese year ${year}`);\n                }\n            }\n            return {\n                ...calendarDate,\n                year: year,\n                eraYear,\n                month,\n                monthCode: monthCode,\n                day: day\n            };\n        }\n    }\n}\nclass ChineseHelper extends ChineseBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'chinese';\n    }\n}\n// Dangi (Korean) calendar has same implementation as Chinese\nclass DangiHelper extends ChineseBaseHelper {\n    constructor() {\n        super(...arguments);\n        this.id = 'dangi';\n    }\n}\n/**\n * Common implementation of all non-ISO calendars.\n * Per-calendar id and logic live in `id` and `helper` properties attached later.\n * This split allowed an easy separation between code that was similar between\n * ISO and non-ISO implementations vs. code that was very different.\n */\nconst nonIsoImpl = {\n    // `helper` is added when this object is spread into each calendar's\n    // implementation\n    helper: undefined,\n    dateFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        const cache = new OneObjectCache();\n        // Intentionally alphabetical\n        const fields = ES.PrepareTemporalFields(fieldsParam, ['day', 'era', 'eraYear', 'month', 'monthCode', 'year'], ['day']);\n        const { year, month, day } = this.helper.calendarToIsoDate(fields, overflow, cache);\n        const result = ES.CreateTemporalDate(year, month, day, calendar);\n        cache.setObject(result);\n        return result;\n    },\n    yearMonthFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        const cache = new OneObjectCache();\n        // Intentionally alphabetical\n        const fields = ES.PrepareTemporalFields(fieldsParam, ['era', 'eraYear', 'month', 'monthCode', 'year'], []);\n        const { year, month, day } = this.helper.calendarToIsoDate({ ...fields, day: 1 }, overflow, cache);\n        const result = ES.CreateTemporalYearMonth(year, month, calendar, /* referenceISODay = */ day);\n        cache.setObject(result);\n        return result;\n    },\n    monthDayFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        // All built-in calendars require `day`, but some allow other fields to be\n        // substituted for `month`. And for lunisolar calendars, either `monthCode`\n        // or `year` must be provided because `month` is ambiguous without a year or\n        // a code.\n        const cache = new OneObjectCache();\n        const fields = ES.PrepareTemporalFields(fieldsParam, ['day', 'era', 'eraYear', 'month', 'monthCode', 'year'], ['day']);\n        const { year, month, day } = this.helper.monthDayFromFields(fields, overflow, cache);\n        // `year` is a reference year where this month/day exists in this calendar\n        const result = ES.CreateTemporalMonthDay(month, day, calendar, /* referenceISOYear = */ year);\n        cache.setObject(result);\n        return result;\n    },\n    fields(fieldsParam) {\n        let fields = fieldsParam;\n        if (ArrayIncludes.call(fields, 'year'))\n            fields = [...fields, 'era', 'eraYear'];\n        return fields;\n    },\n    mergeFields(fields, additionalFields) {\n        const fieldsCopy = { ...fields };\n        const additionalFieldsCopy = { ...additionalFields };\n        // era and eraYear are intentionally unused\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { month, monthCode, year, era, eraYear, ...original } = fieldsCopy;\n        const { month: newMonth, monthCode: newMonthCode, year: newYear, era: newEra, eraYear: newEraYear } = additionalFieldsCopy;\n        if (newMonth === undefined && newMonthCode === undefined) {\n            original.month = month;\n            original.monthCode = monthCode;\n        }\n        if (newYear === undefined && newEra === undefined && newEraYear === undefined) {\n            // Only `year` is needed. We don't set era and eraYear because it's\n            // possible to create a conflict for eras that start or end mid-year. See\n            // https://github.com/tc39/proposal-temporal/issues/1784.\n            original.year = year;\n        }\n        return { ...original, ...additionalFieldsCopy };\n    },\n    dateAdd(date, years, months, weeks, days, overflow, calendar) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const added = this.helper.addCalendar(calendarDate, { years, months, weeks, days }, overflow, cache);\n        const isoAdded = this.helper.calendarToIsoDate(added, 'constrain', cache);\n        const { year, month, day } = isoAdded;\n        const newTemporalObject = ES.CreateTemporalDate(year, month, day, calendar);\n        // The new object's cache starts with the cache of the old object\n        const newCache = new OneObjectCache(cache);\n        newCache.setObject(newTemporalObject);\n        return newTemporalObject;\n    },\n    dateUntil(one, two, largestUnit) {\n        const cacheOne = OneObjectCache.getCacheForObject(one);\n        const cacheTwo = OneObjectCache.getCacheForObject(two);\n        const calendarOne = this.helper.temporalToCalendarDate(one, cacheOne);\n        const calendarTwo = this.helper.temporalToCalendarDate(two, cacheTwo);\n        const result = this.helper.untilCalendar(calendarOne, calendarTwo, largestUnit, cacheOne);\n        return result;\n    },\n    year(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.year;\n    },\n    month(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.month;\n    },\n    day(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.day;\n    },\n    era(date) {\n        if (!this.helper.hasEra)\n            return undefined;\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.era;\n    },\n    eraYear(date) {\n        if (!this.helper.hasEra)\n            return undefined;\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.eraYear;\n    },\n    monthCode(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.monthCode;\n    },\n    dayOfWeek(date) {\n        return impl['iso8601'].dayOfWeek(date);\n    },\n    dayOfYear(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.isoToCalendarDate(date, cache);\n        const startOfYear = this.helper.startOfCalendarYear(calendarDate);\n        const diffDays = this.helper.calendarDaysUntil(startOfYear, calendarDate, cache);\n        return diffDays + 1;\n    },\n    weekOfYear(date) {\n        return impl['iso8601'].weekOfYear(date);\n    },\n    daysInWeek(date) {\n        return impl['iso8601'].daysInWeek(date);\n    },\n    daysInMonth(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        // Easy case: if the helper knows the length without any heavy calculation.\n        const max = this.helper.maximumMonthLength(calendarDate);\n        const min = this.helper.minimumMonthLength(calendarDate);\n        if (max === min)\n            return max;\n        // The harder case is where months vary every year, e.g. islamic calendars.\n        // Find the answer by calculating the difference in days between the first\n        // day of the current month and the first day of the next month.\n        const startOfMonthCalendar = this.helper.startOfCalendarMonth(calendarDate);\n        const startOfNextMonthCalendar = this.helper.addMonthsCalendar(startOfMonthCalendar, 1, 'constrain', cache);\n        const result = this.helper.calendarDaysUntil(startOfMonthCalendar, startOfNextMonthCalendar, cache);\n        return result;\n    },\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const startOfYearCalendar = this.helper.startOfCalendarYear(calendarDate);\n        const startOfNextYearCalendar = this.helper.addCalendar(startOfYearCalendar, { years: 1 }, 'constrain', cache);\n        const result = this.helper.calendarDaysUntil(startOfYearCalendar, startOfNextYearCalendar, cache);\n        return result;\n    },\n    monthsInYear(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const result = this.helper.monthsInYear(calendarDate, cache);\n        return result;\n    },\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const result = this.helper.inLeapYear(calendarDate, cache);\n        return result;\n    }\n};\nfor (const Helper of [\n    HebrewHelper,\n    PersianHelper,\n    EthiopicHelper,\n    EthioaaHelper,\n    CopticHelper,\n    ChineseHelper,\n    DangiHelper,\n    RocHelper,\n    IndianHelper,\n    BuddhistHelper,\n    GregoryHelper,\n    JapaneseHelper,\n    IslamicHelper,\n    IslamicUmalquraHelper,\n    IslamicTblaHelper,\n    IslamicCivilHelper,\n    IslamicRgsaHelper,\n    IslamicCcHelper\n]) {\n    const helper = new Helper();\n    // Clone the singleton non-ISO implementation that's the same for all\n    // calendars. The `helper` property contains per-calendar logic.\n    impl[helper.id] = { ...nonIsoImpl, helper };\n}\n//# sourceMappingURL=calendar.js.map","import * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nexport class PlainDate {\n    constructor(isoYearParam, isoMonthParam, isoDayParam, calendarParam = ES.GetISO8601Calendar()) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalDateSlots. This check\n        //       exists only to improve the error message.\n        if (arguments.length < 3) {\n            throw new RangeError('missing argument: isoYear, isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalDateSlots(this, isoYear, isoMonth, isoDay, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get era() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get year() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalDateLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalDateLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalDateLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const props = ES.PrepareTemporalFields(temporalDateLike, fieldNames, 'partial');\n        if (!props) {\n            throw new TypeError('invalid date-like');\n        }\n        let fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, fieldNames, []);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarDateFromFields(calendar, fields, options);\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return new PlainDate(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), calendar);\n    }\n    add(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToTemporalDuration(temporalDurationLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarDateAdd(GetSlot(this, CALENDAR), this, duration, options);\n    }\n    subtract(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.CreateNegatedTemporalDuration(ES.ToTemporalDuration(temporalDurationLike));\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarDateAdd(GetSlot(this, CALENDAR), this, duration, options);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainDate('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainDate('since', this, other, options);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDate(otherParam);\n        for (const slot of [ISO_YEAR, ISO_MONTH, ISO_DAY]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalDateToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainDate');\n    }\n    toPlainDateTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        if (temporalTimeParam === undefined)\n            return ES.CreateTemporalDateTime(year, month, day, 0, 0, 0, 0, 0, 0, calendar);\n        const temporalTime = ES.ToTemporalTime(temporalTimeParam);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        let timeZone, temporalTime;\n        if (ES.IsObject(item)) {\n            const timeZoneLike = item.timeZone;\n            if (timeZoneLike === undefined) {\n                // The cast below is needed because it's possible here for\n                // `timeZoneLike` here to be `{ plainTime: Temporal.PlainTimeLike }`,\n                // not a TimeZoneProtocol.\n                // TODO: should we check for that shape to improve on the (bad) error\n                // message that the caller will get from ToTemporalTimeZone?\n                timeZone = ES.ToTemporalTimeZone(item);\n            }\n            else {\n                timeZone = ES.ToTemporalTimeZone(timeZoneLike);\n                temporalTime = item.plainTime;\n            }\n        }\n        else {\n            timeZone = ES.ToTemporalTimeZone(item);\n        }\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        let hour = 0, minute = 0, second = 0, millisecond = 0, microsecond = 0, nanosecond = 0;\n        if (temporalTime !== undefined) {\n            temporalTime = ES.ToTemporalTime(temporalTime);\n            hour = GetSlot(temporalTime, ISO_HOUR);\n            minute = GetSlot(temporalTime, ISO_MINUTE);\n            second = GetSlot(temporalTime, ISO_SECOND);\n            millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n            microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n            nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        }\n        const dt = ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarYearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarMonthDayFromFields(calendar, fields);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalDate(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalDate(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalDate(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalDate(oneParam);\n        const two = ES.ToTemporalDate(twoParam);\n        return ES.CompareISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY));\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainDate, 'Temporal.PlainDate');\n//# sourceMappingURL=plaindate.js.map","import * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nexport class PlainDateTime {\n    constructor(isoYearParam, isoMonthParam, isoDayParam, hourParam = 0, minuteParam = 0, secondParam = 0, millisecondParam = 0, microsecondParam = 0, nanosecondParam = 0, calendarParam = ES.GetISO8601Calendar()) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const hour = ES.ToIntegerThrowOnInfinity(hourParam);\n        const minute = ES.ToIntegerThrowOnInfinity(minuteParam);\n        const second = ES.ToIntegerThrowOnInfinity(secondParam);\n        const millisecond = ES.ToIntegerThrowOnInfinity(millisecondParam);\n        const microsecond = ES.ToIntegerThrowOnInfinity(microsecondParam);\n        const nanosecond = ES.ToIntegerThrowOnInfinity(nanosecondParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectDateTime in CreateTemporalDateTimeSlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 3) {\n            throw new RangeError('missing argument: isoYear, isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalDateTimeSlots(this, isoYear, isoMonth, isoDay, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get year() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get hour() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_NANOSECOND);\n    }\n    get era() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalDateTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalDateTimeLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalDateTimeLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const props = ES.PrepareTemporalFields(temporalDateTimeLike, fieldNames, 'partial');\n        if (!props) {\n            throw new TypeError('invalid date-time-like');\n        }\n        let fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, fieldNames, []);\n        const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.InterpretTemporalDateTimeFields(calendar, fields, options);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withPlainTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        if (temporalTimeParam === undefined)\n            return ES.CreateTemporalDateTime(year, month, day, 0, 0, 0, 0, 0, 0, calendar);\n        const temporalTime = ES.ToTemporalTime(temporalTimeParam);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withPlainDate(temporalDateParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        let calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        calendar = ES.ConsolidateCalendars(GetSlot(this, CALENDAR), calendar);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return new PlainDateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), calendar);\n    }\n    add(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainDateTime('add', this, temporalDurationLike, options);\n    }\n    subtract(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainDateTime('subtract', this, temporalDurationLike, options);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainDateTime('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainDateTime('since', this, other, options);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.GetTemporalUnit(options, 'smallestUnit', 'time', ES.REQUIRED, ['day']);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            day: 1,\n            hour: 24,\n            minute: 60,\n            second: 60,\n            millisecond: 1000,\n            microsecond: 1000,\n            nanosecond: 1000\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n        let year = GetSlot(this, ISO_YEAR);\n        let month = GetSlot(this, ISO_MONTH);\n        let day = GetSlot(this, ISO_DAY);\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode));\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, GetSlot(this, CALENDAR));\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDateTime(otherParam);\n        for (const slot of [\n            ISO_YEAR,\n            ISO_MONTH,\n            ISO_DAY,\n            ISO_HOUR,\n            ISO_MINUTE,\n            ISO_SECOND,\n            ISO_MILLISECOND,\n            ISO_MICROSECOND,\n            ISO_NANOSECOND\n        ]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return ES.TemporalDateTimeToString(this, precision, showCalendar, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToString(this, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainDateTime');\n    }\n    toZonedDateTime(temporalTimeZoneLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const timeZone = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, this, disambiguation);\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, GetSlot(this, CALENDAR));\n    }\n    toPlainDate() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToDate(this);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarYearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarMonthDayFromFields(calendar, fields);\n    }\n    toPlainTime() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToTime(this);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoHour: GetSlot(this, ISO_HOUR),\n            isoMicrosecond: GetSlot(this, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(this, ISO_MILLISECOND),\n            isoMinute: GetSlot(this, ISO_MINUTE),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoNanosecond: GetSlot(this, ISO_NANOSECOND),\n            isoSecond: GetSlot(this, ISO_SECOND),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalDateTime(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalDateTime(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalDateTime(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalDateTime(oneParam);\n        const two = ES.ToTemporalDateTime(twoParam);\n        for (const slot of [\n            ISO_YEAR,\n            ISO_MONTH,\n            ISO_DAY,\n            ISO_HOUR,\n            ISO_MINUTE,\n            ISO_SECOND,\n            ISO_MILLISECOND,\n            ISO_MICROSECOND,\n            ISO_NANOSECOND\n        ]) {\n            const val1 = GetSlot(one, slot);\n            const val2 = GetSlot(two, slot);\n            if (val1 !== val2)\n                return ES.ComparisonResult(val1 - val2);\n        }\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainDateTime, 'Temporal.PlainDateTime');\n//# sourceMappingURL=plaindatetime.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nimport JSBI from 'jsbi';\nexport class Duration {\n    constructor(yearsParam = 0, monthsParam = 0, weeksParam = 0, daysParam = 0, hoursParam = 0, minutesParam = 0, secondsParam = 0, millisecondsParam = 0, microsecondsParam = 0, nanosecondsParam = 0) {\n        const years = ES.ToIntegerWithoutRounding(yearsParam);\n        const months = ES.ToIntegerWithoutRounding(monthsParam);\n        const weeks = ES.ToIntegerWithoutRounding(weeksParam);\n        const days = ES.ToIntegerWithoutRounding(daysParam);\n        const hours = ES.ToIntegerWithoutRounding(hoursParam);\n        const minutes = ES.ToIntegerWithoutRounding(minutesParam);\n        const seconds = ES.ToIntegerWithoutRounding(secondsParam);\n        const milliseconds = ES.ToIntegerWithoutRounding(millisecondsParam);\n        const microseconds = ES.ToIntegerWithoutRounding(microsecondsParam);\n        const nanoseconds = ES.ToIntegerWithoutRounding(nanosecondsParam);\n        ES.RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n        CreateSlots(this);\n        SetSlot(this, YEARS, years);\n        SetSlot(this, MONTHS, months);\n        SetSlot(this, WEEKS, weeks);\n        SetSlot(this, DAYS, days);\n        SetSlot(this, HOURS, hours);\n        SetSlot(this, MINUTES, minutes);\n        SetSlot(this, SECONDS, seconds);\n        SetSlot(this, MILLISECONDS, milliseconds);\n        SetSlot(this, MICROSECONDS, microseconds);\n        SetSlot(this, NANOSECONDS, nanoseconds);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${ES.TemporalDurationToString(this)}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get years() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, YEARS);\n    }\n    get months() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MONTHS);\n    }\n    get weeks() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, WEEKS);\n    }\n    get days() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, DAYS);\n    }\n    get hours() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, HOURS);\n    }\n    get minutes() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MINUTES);\n    }\n    get seconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, SECONDS);\n    }\n    get milliseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MILLISECONDS);\n    }\n    get microseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MICROSECONDS);\n    }\n    get nanoseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, NANOSECONDS);\n    }\n    get sign() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.DurationSign(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS));\n    }\n    get blank() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return (ES.DurationSign(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS)) === 0);\n    }\n    with(durationLike) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        const props = ES.PrepareTemporalFields(durationLike, \n        // NOTE: Field order here is important.\n        [\n            'days',\n            'hours',\n            'microseconds',\n            'milliseconds',\n            'minutes',\n            'months',\n            'nanoseconds',\n            'seconds',\n            'weeks',\n            'years'\n        ], 'partial');\n        if (!props) {\n            throw new TypeError('invalid duration-like');\n        }\n        const { years = GetSlot(this, YEARS), months = GetSlot(this, MONTHS), weeks = GetSlot(this, WEEKS), days = GetSlot(this, DAYS), hours = GetSlot(this, HOURS), minutes = GetSlot(this, MINUTES), seconds = GetSlot(this, SECONDS), milliseconds = GetSlot(this, MILLISECONDS), microseconds = GetSlot(this, MICROSECONDS), nanoseconds = GetSlot(this, NANOSECONDS) } = props;\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    negated() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.CreateNegatedTemporalDuration(this);\n    }\n    abs() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return new Duration(Math.abs(GetSlot(this, YEARS)), Math.abs(GetSlot(this, MONTHS)), Math.abs(GetSlot(this, WEEKS)), Math.abs(GetSlot(this, DAYS)), Math.abs(GetSlot(this, HOURS)), Math.abs(GetSlot(this, MINUTES)), Math.abs(GetSlot(this, SECONDS)), Math.abs(GetSlot(this, MILLISECONDS)), Math.abs(GetSlot(this, MICROSECONDS)), Math.abs(GetSlot(this, NANOSECONDS)));\n    }\n    add(other, options = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromDuration('add', this, other, options);\n    }\n    subtract(other, options = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromDuration('subtract', this, other, options);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        let years = GetSlot(this, YEARS);\n        let months = GetSlot(this, MONTHS);\n        let weeks = GetSlot(this, WEEKS);\n        let days = GetSlot(this, DAYS);\n        let hours = GetSlot(this, HOURS);\n        let minutes = GetSlot(this, MINUTES);\n        let seconds = GetSlot(this, SECONDS);\n        let milliseconds = GetSlot(this, MILLISECONDS);\n        let microseconds = GetSlot(this, MICROSECONDS);\n        let nanoseconds = GetSlot(this, NANOSECONDS);\n        let defaultLargestUnit = ES.DefaultTemporalLargestUnit(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        let smallestUnit = ES.GetTemporalUnit(options, 'smallestUnit', 'datetime', undefined);\n        let smallestUnitPresent = true;\n        if (!smallestUnit) {\n            smallestUnitPresent = false;\n            smallestUnit = 'nanosecond';\n        }\n        defaultLargestUnit = ES.LargerOfTwoTemporalUnits(defaultLargestUnit, smallestUnit);\n        let largestUnit = ES.GetTemporalUnit(options, 'largestUnit', 'datetime', undefined, ['auto']);\n        let largestUnitPresent = true;\n        if (!largestUnit) {\n            largestUnitPresent = false;\n            largestUnit = defaultLargestUnit;\n        }\n        if (largestUnit === 'auto')\n            largestUnit = defaultLargestUnit;\n        if (!smallestUnitPresent && !largestUnitPresent) {\n            throw new RangeError('at least one of smallestUnit or largestUnit is required');\n        }\n        if (ES.LargerOfTwoTemporalUnits(largestUnit, smallestUnit) !== largestUnit) {\n            throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n        }\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        let relativeTo = ES.ToRelativeTemporalObject(options);\n        ({ years, months, weeks, days } = ES.UnbalanceDurationRelative(years, months, weeks, days, largestUnit, relativeTo));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.AdjustRoundedDurationDays(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n        ({ years, months, weeks, days } = ES.BalanceDurationRelative(years, months, weeks, days, largestUnit, relativeTo));\n        if (ES.IsTemporalZonedDateTime(relativeTo)) {\n            relativeTo = ES.MoveRelativeZonedDateTime(relativeTo, years, months, weeks, 0);\n        }\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit, relativeTo));\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    total(optionsParam) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        let years = GetSlot(this, YEARS);\n        let months = GetSlot(this, MONTHS);\n        let weeks = GetSlot(this, WEEKS);\n        let days = GetSlot(this, DAYS);\n        let hours = GetSlot(this, HOURS);\n        let minutes = GetSlot(this, MINUTES);\n        let seconds = GetSlot(this, SECONDS);\n        let milliseconds = GetSlot(this, MILLISECONDS);\n        let microseconds = GetSlot(this, MICROSECONDS);\n        let nanoseconds = GetSlot(this, NANOSECONDS);\n        if (optionsParam === undefined)\n            throw new TypeError('options argument is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('unit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const unit = ES.GetTemporalUnit(options, 'unit', 'datetime', ES.REQUIRED);\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        // Convert larger units down to days\n        ({ years, months, weeks, days } = ES.UnbalanceDurationRelative(years, months, weeks, days, unit, relativeTo));\n        // If the unit we're totalling is smaller than `days`, convert days down to that unit.\n        let intermediate;\n        if (ES.IsTemporalZonedDateTime(relativeTo)) {\n            intermediate = ES.MoveRelativeZonedDateTime(relativeTo, years, months, weeks, 0);\n        }\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, unit, intermediate));\n        // Finally, truncate to the correct unit and calculate remainder\n        const { total } = ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 1, unit, 'trunc', relativeTo);\n        return total;\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        if (precision === 'minute')\n            throw new RangeError('smallestUnit must not be \"minute\"');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return ES.TemporalDurationToString(this, precision, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDurationToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        if (typeof Intl !== 'undefined' && typeof Intl.DurationFormat !== 'undefined') {\n            return new Intl.DurationFormat(locales, options).format(this);\n        }\n        console.warn('Temporal.Duration.prototype.toLocaleString() requires Intl.DurationFormat.');\n        return ES.TemporalDurationToString(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() to compare Temporal.Duration');\n    }\n    static from(item) {\n        if (ES.IsTemporalDuration(item)) {\n            return new Duration(GetSlot(item, YEARS), GetSlot(item, MONTHS), GetSlot(item, WEEKS), GetSlot(item, DAYS), GetSlot(item, HOURS), GetSlot(item, MINUTES), GetSlot(item, SECONDS), GetSlot(item, MILLISECONDS), GetSlot(item, MICROSECONDS), GetSlot(item, NANOSECONDS));\n        }\n        return ES.ToTemporalDuration(item);\n    }\n    static compare(oneParam, twoParam, optionsParam = undefined) {\n        const one = ES.ToTemporalDuration(oneParam);\n        const two = ES.ToTemporalDuration(twoParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        const y1 = GetSlot(one, YEARS);\n        const mon1 = GetSlot(one, MONTHS);\n        const w1 = GetSlot(one, WEEKS);\n        let d1 = GetSlot(one, DAYS);\n        const h1 = GetSlot(one, HOURS);\n        const min1 = GetSlot(one, MINUTES);\n        const s1 = GetSlot(one, SECONDS);\n        const ms1 = GetSlot(one, MILLISECONDS);\n        const µs1 = GetSlot(one, MICROSECONDS);\n        let ns1 = GetSlot(one, NANOSECONDS);\n        const y2 = GetSlot(two, YEARS);\n        const mon2 = GetSlot(two, MONTHS);\n        const w2 = GetSlot(two, WEEKS);\n        let d2 = GetSlot(two, DAYS);\n        const h2 = GetSlot(two, HOURS);\n        const min2 = GetSlot(two, MINUTES);\n        const s2 = GetSlot(two, SECONDS);\n        const ms2 = GetSlot(two, MILLISECONDS);\n        const µs2 = GetSlot(two, MICROSECONDS);\n        let ns2 = GetSlot(two, NANOSECONDS);\n        const shift1 = ES.CalculateOffsetShift(relativeTo, y1, mon1, w1, d1);\n        const shift2 = ES.CalculateOffsetShift(relativeTo, y2, mon2, w2, d2);\n        if (y1 !== 0 || y2 !== 0 || mon1 !== 0 || mon2 !== 0 || w1 !== 0 || w2 !== 0) {\n            ({ days: d1 } = ES.UnbalanceDurationRelative(y1, mon1, w1, d1, 'day', relativeTo));\n            ({ days: d2 } = ES.UnbalanceDurationRelative(y2, mon2, w2, d2, 'day', relativeTo));\n        }\n        const totalNs1 = ES.TotalDurationNanoseconds(d1, h1, min1, s1, ms1, µs1, ns1, shift1);\n        const totalNs2 = ES.TotalDurationNanoseconds(d2, h2, min2, s2, ms2, µs2, ns2, shift2);\n        return ES.ComparisonResult(JSBI.toNumber(JSBI.subtract(totalNs1, totalNs2)));\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Duration, 'Temporal.Duration');\n//# sourceMappingURL=duration.js.map","import * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_MONTH, ISO_DAY, ISO_YEAR, CALENDAR, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectCreate = Object.create;\nexport class PlainMonthDay {\n    constructor(isoMonthParam, isoDayParam, calendarParam = ES.GetISO8601Calendar(), referenceISOYearParam = 1972) {\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        const referenceISOYear = ES.ToIntegerThrowOnInfinity(referenceISOYearParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalMonthDaySlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 2) {\n            throw new RangeError('missing argument: isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalMonthDaySlots(this, isoMonth, isoDay, calendar, referenceISOYear);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get calendar() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    with(temporalMonthDayLike, optionsParam = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalMonthDayLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalMonthDayLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const props = ES.PrepareTemporalFields(temporalMonthDayLike, fieldNames, 'partial');\n        if (!props) {\n            throw new TypeError('invalid month-day-like');\n        }\n        let fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, fieldNames, []);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarMonthDayFromFields(calendar, fields, options);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalMonthDay(otherParam);\n        for (const slot of [ISO_MONTH, ISO_DAY, ISO_YEAR]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalMonthDayToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalMonthDayToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use equals() to compare Temporal.PlainMonthDay');\n    }\n    toPlainDate(item) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item))\n            throw new TypeError('argument should be an object');\n        const calendar = GetSlot(this, CALENDAR);\n        const receiverFieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.PrepareTemporalFields(this, receiverFieldNames, []);\n        const inputFieldNames = ES.CalendarFields(calendar, ['year']);\n        const inputFields = ES.PrepareTemporalFields(item, inputFieldNames, []);\n        let mergedFields = ES.CalendarMergeFields(calendar, fields, inputFields);\n        // TODO: Use MergeLists abstract operation.\n        const mergedFieldNames = [...new Set([...receiverFieldNames, ...inputFieldNames])];\n        mergedFields = ES.PrepareTemporalFields(mergedFields, mergedFieldNames, []);\n        const options = ObjectCreate(null);\n        options.overflow = 'reject';\n        return ES.CalendarDateFromFields(calendar, mergedFields, options);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalMonthDay(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalMonthDay(GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR), GetSlot(item, ISO_YEAR));\n        }\n        return ES.ToTemporalMonthDay(item, options);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainMonthDay, 'Temporal.PlainMonthDay');\n//# sourceMappingURL=plainmonthday.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic } from './intrinsicclass';\nconst instant = () => {\n    const Instant = GetIntrinsic('%Temporal.Instant%');\n    return new Instant(ES.SystemUTCEpochNanoSeconds());\n};\nconst plainDateTime = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.ToTemporalCalendar(calendarLike);\n    const inst = instant();\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(tZ, inst, calendar);\n};\nconst plainDateTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.GetISO8601Calendar();\n    const inst = instant();\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(tZ, inst, calendar);\n};\nconst zonedDateTime = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.ToTemporalCalendar(calendarLike);\n    return ES.CreateTemporalZonedDateTime(ES.SystemUTCEpochNanoSeconds(), tZ, calendar);\n};\nconst zonedDateTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    return zonedDateTime(ES.GetISO8601Calendar(), temporalTimeZoneLike);\n};\nconst plainDate = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToDate(plainDateTime(calendarLike, temporalTimeZoneLike));\n};\nconst plainDateISO = (temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToDate(plainDateTimeISO(temporalTimeZoneLike));\n};\nconst plainTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToTime(plainDateTimeISO(temporalTimeZoneLike));\n};\nconst timeZone = () => {\n    return ES.SystemTimeZone();\n};\nexport const Now = {\n    instant,\n    plainDateTime,\n    plainDateTimeISO,\n    plainDate,\n    plainDateISO,\n    plainTimeISO,\n    timeZone,\n    zonedDateTime,\n    zonedDateTimeISO,\n    [Symbol.toStringTag]: 'Temporal.Now'\n};\nObject.defineProperty(Now, Symbol.toStringTag, {\n    value: 'Temporal.Now',\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\n//# sourceMappingURL=now.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectAssign = Object.assign;\nfunction TemporalTimeToString(time, precision, options = undefined) {\n    let hour = GetSlot(time, ISO_HOUR);\n    let minute = GetSlot(time, ISO_MINUTE);\n    let second = GetSlot(time, ISO_SECOND);\n    let millisecond = GetSlot(time, ISO_MILLISECOND);\n    let microsecond = GetSlot(time, ISO_MICROSECOND);\n    let nanosecond = GetSlot(time, ISO_NANOSECOND);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode));\n    }\n    const hourString = ES.ISODateTimePartString(hour);\n    const minuteString = ES.ISODateTimePartString(minute);\n    const seconds = ES.FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision);\n    return `${hourString}:${minuteString}${seconds}`;\n}\nexport class PlainTime {\n    constructor(isoHourParam = 0, isoMinuteParam = 0, isoSecondParam = 0, isoMillisecondParam = 0, isoMicrosecondParam = 0, isoNanosecondParam = 0) {\n        const isoHour = ES.ToIntegerThrowOnInfinity(isoHourParam);\n        const isoMinute = ES.ToIntegerThrowOnInfinity(isoMinuteParam);\n        const isoSecond = ES.ToIntegerThrowOnInfinity(isoSecondParam);\n        const isoMillisecond = ES.ToIntegerThrowOnInfinity(isoMillisecondParam);\n        const isoMicrosecond = ES.ToIntegerThrowOnInfinity(isoMicrosecondParam);\n        const isoNanosecond = ES.ToIntegerThrowOnInfinity(isoNanosecondParam);\n        ES.RejectTime(isoHour, isoMinute, isoSecond, isoMillisecond, isoMicrosecond, isoNanosecond);\n        CreateSlots(this);\n        SetSlot(this, ISO_HOUR, isoHour);\n        SetSlot(this, ISO_MINUTE, isoMinute);\n        SetSlot(this, ISO_SECOND, isoSecond);\n        SetSlot(this, ISO_MILLISECOND, isoMillisecond);\n        SetSlot(this, ISO_MICROSECOND, isoMicrosecond);\n        SetSlot(this, ISO_NANOSECOND, isoNanosecond);\n        SetSlot(this, CALENDAR, ES.GetISO8601Calendar());\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${TemporalTimeToString(this, 'auto')}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get calendar() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        // PlainTime's calendar isn't settable, so can't be a userland calendar\n        return GetSlot(this, CALENDAR);\n    }\n    get hour() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_NANOSECOND);\n    }\n    with(temporalTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalTimeLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalTimeLike);\n        const partialTime = ES.ToTemporalTimeRecord(temporalTimeLike, 'partial');\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        const fields = ES.ToTemporalTimeRecord(this);\n        let { hour, minute, second, millisecond, microsecond, nanosecond } = ObjectAssign(fields, partialTime);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    add(temporalDurationLike) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainTime('add', this, temporalDurationLike);\n    }\n    subtract(temporalDurationLike) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainTime('subtract', this, temporalDurationLike);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainTime('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainTime('since', this, other, options);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.GetTemporalUnit(options, 'smallestUnit', 'time', ES.REQUIRED);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const MAX_INCREMENTS = {\n            hour: 24,\n            minute: 60,\n            second: 60,\n            millisecond: 1000,\n            microsecond: 1000,\n            nanosecond: 1000\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_INCREMENTS[smallestUnit], false);\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalTime(otherParam);\n        for (const slot of [ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return true;\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return TemporalTimeToString(this, precision, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return TemporalTimeToString(this, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainTime');\n    }\n    toPlainDateTime(temporalDateParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        const calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item)) {\n            throw new TypeError('invalid argument');\n        }\n        const dateLike = item.plainDate;\n        if (dateLike === undefined) {\n            throw new TypeError('missing date property');\n        }\n        const temporalDate = ES.ToTemporalDate(dateLike);\n        const timeZoneLike = item.timeZone;\n        if (timeZoneLike === undefined) {\n            throw new TypeError('missing timeZone property');\n        }\n        const timeZone = ES.ToTemporalTimeZone(timeZoneLike);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        const calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoHour: GetSlot(this, ISO_HOUR),\n            isoMicrosecond: GetSlot(this, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(this, ISO_MILLISECOND),\n            isoMinute: GetSlot(this, ISO_MINUTE),\n            isoNanosecond: GetSlot(this, ISO_NANOSECOND),\n            isoSecond: GetSlot(this, ISO_SECOND)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        if (ES.IsTemporalTime(item)) {\n            return new PlainTime(GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND));\n        }\n        return ES.ToTemporalTime(item, overflow);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalTime(oneParam);\n        const two = ES.ToTemporalTime(twoParam);\n        for (const slot of [ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND]) {\n            const val1 = GetSlot(one, slot);\n            const val2 = GetSlot(two, slot);\n            if (val1 !== val2)\n                return ES.ComparisonResult(val1 - val2);\n        }\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainTime, 'Temporal.PlainTime');\n//# sourceMappingURL=plaintime.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { TIMEZONE_ID, EPOCHNANOSECONDS, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CreateSlots, GetSlot, SetSlot } from './slots';\nimport JSBI from 'jsbi';\nexport class TimeZone {\n    constructor(timeZoneIdentifierParam) {\n        // Note: if the argument is not passed, GetCanonicalTimeZoneIdentifier(undefined) will throw.\n        //       This check exists only to improve the error message.\n        if (arguments.length < 1) {\n            throw new RangeError('missing argument: identifier is required');\n        }\n        const timeZoneIdentifier = ES.GetCanonicalTimeZoneIdentifier(timeZoneIdentifierParam);\n        CreateSlots(this);\n        SetSlot(this, TIMEZONE_ID, timeZoneIdentifier);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${timeZoneIdentifier}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get id() {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(this);\n    }\n    getOffsetNanosecondsFor(instantParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const instant = ES.ToTemporalInstant(instantParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        if (ES.TestTimeZoneOffsetString(id)) {\n            return ES.ParseTimeZoneOffsetString(id);\n        }\n        return ES.GetIANATimeZoneOffsetNanoseconds(GetSlot(instant, EPOCHNANOSECONDS), id);\n    }\n    getOffsetStringFor(instantParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const instant = ES.ToTemporalInstant(instantParam);\n        return ES.BuiltinTimeZoneGetOffsetStringFor(this, instant);\n    }\n    getPlainDateTimeFor(instantParam, calendarParam = ES.GetISO8601Calendar()) {\n        const instant = ES.ToTemporalInstant(instantParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return ES.BuiltinTimeZoneGetPlainDateTimeFor(this, instant, calendar);\n    }\n    getInstantFor(dateTimeParam, optionsParam = undefined) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const dateTime = ES.ToTemporalDateTime(dateTimeParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        return ES.BuiltinTimeZoneGetInstantFor(this, dateTime, disambiguation);\n    }\n    getPossibleInstantsFor(dateTimeParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const dateTime = ES.ToTemporalDateTime(dateTimeParam);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        const id = GetSlot(this, TIMEZONE_ID);\n        if (ES.TestTimeZoneOffsetString(id)) {\n            const epochNs = ES.GetEpochFromISOParts(GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n            if (epochNs === null)\n                throw new RangeError('DateTime outside of supported range');\n            const offsetNs = ES.ParseTimeZoneOffsetString(id);\n            return [new Instant(JSBI.subtract(epochNs, JSBI.BigInt(offsetNs)))];\n        }\n        const possibleEpochNs = ES.GetIANATimeZoneEpochValue(id, GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n        return possibleEpochNs.map((ns) => new Instant(ns));\n    }\n    getNextTransition(startingPointParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const startingPoint = ES.ToTemporalInstant(startingPointParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        // Offset time zones or UTC have no transitions\n        if (ES.TestTimeZoneOffsetString(id) || id === 'UTC') {\n            return null;\n        }\n        let epochNanoseconds = GetSlot(startingPoint, EPOCHNANOSECONDS);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        epochNanoseconds = ES.GetIANATimeZoneNextTransition(epochNanoseconds, id);\n        return epochNanoseconds === null ? null : new Instant(epochNanoseconds);\n    }\n    getPreviousTransition(startingPointParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const startingPoint = ES.ToTemporalInstant(startingPointParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        // Offset time zones or UTC have no transitions\n        if (ES.TestTimeZoneOffsetString(id) || id === 'UTC') {\n            return null;\n        }\n        let epochNanoseconds = GetSlot(startingPoint, EPOCHNANOSECONDS);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        epochNanoseconds = ES.GetIANATimeZonePreviousTransition(epochNanoseconds, id);\n        return epochNanoseconds === null ? null : new Instant(epochNanoseconds);\n    }\n    toString() {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(GetSlot(this, TIMEZONE_ID));\n    }\n    toJSON() {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(this);\n    }\n    static from(item) {\n        return ES.ToTemporalTimeZone(item);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(TimeZone, 'Temporal.TimeZone');\n//# sourceMappingURL=timezone.js.map","import * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, CALENDAR, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectCreate = Object.create;\nexport class PlainYearMonth {\n    constructor(isoYearParam, isoMonthParam, calendarParam = ES.GetISO8601Calendar(), referenceISODayParam = 1) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        const referenceISODay = ES.ToIntegerThrowOnInfinity(referenceISODayParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalYearMonthSlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 2) {\n            throw new RangeError('missing argument: isoYear and isoMonth are required');\n        }\n        ES.CreateTemporalYearMonthSlots(this, isoYear, isoMonth, calendar, referenceISODay);\n    }\n    get year() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get calendar() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get era() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalYearMonthLike, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalYearMonthLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalYearMonthLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['month', 'monthCode', 'year']);\n        const props = ES.PrepareTemporalFields(temporalYearMonthLike, fieldNames, 'partial');\n        if (!props) {\n            throw new TypeError('invalid year-month-like');\n        }\n        let fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, fieldNames, []);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarYearMonthFromFields(calendar, fields, options);\n    }\n    add(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainYearMonth('add', this, temporalDurationLike, options);\n    }\n    subtract(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromPlainYearMonth('subtract', this, temporalDurationLike, options);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainYearMonth('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalPlainYearMonth('since', this, other, options);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalYearMonth(otherParam);\n        for (const slot of [ISO_YEAR, ISO_MONTH, ISO_DAY]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalYearMonthToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalYearMonthToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainYearMonth');\n    }\n    toPlainDate(item) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item))\n            throw new TypeError('argument should be an object');\n        const calendar = GetSlot(this, CALENDAR);\n        const receiverFieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.PrepareTemporalFields(this, receiverFieldNames, []);\n        const inputFieldNames = ES.CalendarFields(calendar, ['day']);\n        const inputFields = ES.PrepareTemporalFields(item, inputFieldNames, []);\n        let mergedFields = ES.CalendarMergeFields(calendar, fields, inputFields);\n        // TODO: Use MergeLists abstract operation.\n        const mergedFieldNames = [...new Set([...receiverFieldNames, ...inputFieldNames])];\n        mergedFields = ES.PrepareTemporalFields(mergedFields, mergedFieldNames, []);\n        const options = ObjectCreate(null);\n        options.overflow = 'reject';\n        return ES.CalendarDateFromFields(calendar, mergedFields, options);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalYearMonth(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalYearMonth(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, CALENDAR), GetSlot(item, ISO_DAY));\n        }\n        return ES.ToTemporalYearMonth(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalYearMonth(oneParam);\n        const two = ES.ToTemporalYearMonth(twoParam);\n        return ES.CompareISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY));\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainYearMonth, 'Temporal.PlainYearMonth');\n//# sourceMappingURL=plainyearmonth.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { CALENDAR, EPOCHNANOSECONDS, ISO_HOUR, INSTANT, ISO_DAY, ISO_MONTH, ISO_YEAR, ISO_MICROSECOND, ISO_MILLISECOND, ISO_MINUTE, ISO_NANOSECOND, ISO_SECOND, TIME_ZONE, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nimport JSBI from 'jsbi';\nimport { BILLION, MILLION, THOUSAND, ZERO } from './ecmascript';\nexport class ZonedDateTime {\n    constructor(epochNanosecondsParam, timeZoneParam, calendarParam = ES.GetISO8601Calendar()) {\n        // Note: if the argument is not passed, ToBigInt(undefined) will throw. This check exists only\n        //       to improve the error message.\n        //       ToTemporalTimeZone(undefined) will end up calling TimeZone.from(\"undefined\"), which\n        //       could succeed.\n        if (arguments.length < 1) {\n            throw new TypeError('missing argument: epochNanoseconds is required');\n        }\n        const epochNanoseconds = ES.ToBigInt(epochNanosecondsParam);\n        const timeZone = ES.ToTemporalTimeZone(timeZoneParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        ES.CreateTemporalZonedDateTimeSlots(this, epochNanoseconds, timeZone, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get timeZone() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, TIME_ZONE);\n    }\n    get year() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get month() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get monthCode() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get day() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get hour() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_NANOSECOND);\n    }\n    get era() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get eraYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get epochSeconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return JSBI.toNumber(JSBI.divide(value, BILLION));\n    }\n    get epochMilliseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return JSBI.toNumber(JSBI.divide(value, MILLION));\n    }\n    get epochMicroseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return ES.ToBigIntExternal(JSBI.divide(value, THOUSAND));\n    }\n    get epochNanoseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToBigIntExternal(GetSlot(this, EPOCHNANOSECONDS));\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get hoursInDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const year = GetSlot(dt, ISO_YEAR);\n        const month = GetSlot(dt, ISO_MONTH);\n        const day = GetSlot(dt, ISO_DAY);\n        const today = new DateTime(year, month, day, 0, 0, 0, 0, 0, 0);\n        const tomorrowFields = ES.AddISODate(year, month, day, 0, 0, 0, 1, 'reject');\n        const tomorrow = new DateTime(tomorrowFields.year, tomorrowFields.month, tomorrowFields.day, 0, 0, 0, 0, 0, 0);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const todayNs = GetSlot(ES.BuiltinTimeZoneGetInstantFor(timeZone, today, 'compatible'), EPOCHNANOSECONDS);\n        const tomorrowNs = GetSlot(ES.BuiltinTimeZoneGetInstantFor(timeZone, tomorrow, 'compatible'), EPOCHNANOSECONDS);\n        return JSBI.toNumber(JSBI.subtract(tomorrowNs, todayNs)) / 3.6e12;\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get offset() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.BuiltinTimeZoneGetOffsetStringFor(GetSlot(this, TIME_ZONE), GetSlot(this, INSTANT));\n    }\n    get offsetNanoseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.GetOffsetNanosecondsFor(GetSlot(this, TIME_ZONE), GetSlot(this, INSTANT));\n    }\n    with(temporalZonedDateTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalZonedDateTimeLike)) {\n            throw new TypeError('invalid zoned-date-time-like');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalZonedDateTimeLike);\n        // TODO: Reorder according to spec.\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        const offset = ES.ToTemporalOffset(options, 'prefer');\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fieldsWithOffset = ES.ArrayPush(fieldNames, 'offset');\n        const props = ES.PrepareTemporalFields(temporalZonedDateTimeLike, fieldsWithOffset, 'partial');\n        const fieldsWithTimeZoneAndOffset = ES.ArrayPush(fieldsWithOffset, 'timeZone');\n        let fields = ES.PrepareTemporalFields(this, fieldsWithTimeZoneAndOffset, ['timeZone', 'offset']);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, fieldsWithTimeZoneAndOffset, ['timeZone', 'offset']);\n        let { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.InterpretTemporalDateTimeFields(calendar, fields, options);\n        const offsetNs = ES.ParseTimeZoneOffsetString(fields.offset);\n        const epochNanoseconds = ES.InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, 'option', offsetNs, timeZone, disambiguation, offset, \n        /* matchMinute = */ false);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, GetSlot(this, TIME_ZONE), calendar);\n    }\n    withPlainDate(temporalDateParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        let calendar = GetSlot(temporalDate, CALENDAR);\n        const thisDt = dateTime(this);\n        const hour = GetSlot(thisDt, ISO_HOUR);\n        const minute = GetSlot(thisDt, ISO_MINUTE);\n        const second = GetSlot(thisDt, ISO_SECOND);\n        const millisecond = GetSlot(thisDt, ISO_MILLISECOND);\n        const microsecond = GetSlot(thisDt, ISO_MICROSECOND);\n        const nanosecond = GetSlot(thisDt, ISO_NANOSECOND);\n        calendar = ES.ConsolidateCalendars(GetSlot(this, CALENDAR), calendar);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    withPlainTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const PlainTime = GetIntrinsic('%Temporal.PlainTime%');\n        const temporalTime = temporalTimeParam === undefined ? new PlainTime() : ES.ToTemporalTime(temporalTimeParam);\n        const thisDt = dateTime(this);\n        const year = GetSlot(thisDt, ISO_YEAR);\n        const month = GetSlot(thisDt, ISO_MONTH);\n        const day = GetSlot(thisDt, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    withTimeZone(timeZoneParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const timeZone = ES.ToTemporalTimeZone(timeZoneParam);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, GetSlot(this, CALENDAR));\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), GetSlot(this, TIME_ZONE), calendar);\n    }\n    add(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromZonedDateTime('add', this, temporalDurationLike, options);\n    }\n    subtract(temporalDurationLike, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.AddDurationToOrSubtractDurationFromZonedDateTime('subtract', this, temporalDurationLike, options);\n    }\n    until(other, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalZonedDateTime('until', this, other, options);\n    }\n    since(other, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.DifferenceTemporalZonedDateTime('since', this, other, options);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.GetTemporalUnit(options, 'smallestUnit', 'time', ES.REQUIRED, ['day']);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            day: 1,\n            hour: 24,\n            minute: 60,\n            second: 60,\n            millisecond: 1000,\n            microsecond: 1000,\n            nanosecond: 1000\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n        // first, round the underlying DateTime fields\n        const dt = dateTime(this);\n        let year = GetSlot(dt, ISO_YEAR);\n        let month = GetSlot(dt, ISO_MONTH);\n        let day = GetSlot(dt, ISO_DAY);\n        let hour = GetSlot(dt, ISO_HOUR);\n        let minute = GetSlot(dt, ISO_MINUTE);\n        let second = GetSlot(dt, ISO_SECOND);\n        let millisecond = GetSlot(dt, ISO_MILLISECOND);\n        let microsecond = GetSlot(dt, ISO_MICROSECOND);\n        let nanosecond = GetSlot(dt, ISO_NANOSECOND);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const dtStart = new DateTime(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), 0, 0, 0, 0, 0, 0);\n        const instantStart = ES.BuiltinTimeZoneGetInstantFor(timeZone, dtStart, 'compatible');\n        const endNs = ES.AddZonedDateTime(instantStart, timeZone, calendar, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0);\n        const dayLengthNs = JSBI.subtract(endNs, JSBI.BigInt(GetSlot(instantStart, EPOCHNANOSECONDS)));\n        if (JSBI.equal(dayLengthNs, ZERO)) {\n            throw new RangeError('cannot round a ZonedDateTime in a calendar with zero-length days');\n        }\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode, \n        // Days are guaranteed to be shorter than Number.MAX_SAFE_INTEGER\n        // (which can hold up to 104 days in nanoseconds)\n        JSBI.toNumber(dayLengthNs)));\n        // Now reset all DateTime fields but leave the TimeZone. The offset will\n        // also be retained if the new date/time values are still OK with the old\n        // offset. Otherwise the offset will be changed to be compatible with the\n        // new date/time values. If DST disambiguation is required, the `compatible`\n        // disambiguation algorithm will be used.\n        const offsetNs = ES.GetOffsetNanosecondsFor(timeZone, GetSlot(this, INSTANT));\n        const epochNanoseconds = ES.InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, 'option', offsetNs, timeZone, 'compatible', 'prefer', \n        /* matchMinute = */ false);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, timeZone, GetSlot(this, CALENDAR));\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalZonedDateTime(otherParam);\n        const one = GetSlot(this, EPOCHNANOSECONDS);\n        const two = GetSlot(other, EPOCHNANOSECONDS);\n        if (!JSBI.equal(JSBI.BigInt(one), JSBI.BigInt(two)))\n            return false;\n        if (!ES.TimeZoneEquals(GetSlot(this, TIME_ZONE), GetSlot(other, TIME_ZONE)))\n            return false;\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const showCalendar = ES.ToShowCalendarOption(options);\n        const showTimeZone = ES.ToShowTimeZoneNameOption(options);\n        const showOffset = ES.ToShowOffsetOption(options);\n        return ES.TemporalZonedDateTimeToString(this, precision, showCalendar, showTimeZone, showOffset, {\n            unit,\n            increment,\n            roundingMode\n        });\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    toJSON() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalZonedDateTimeToString(this, 'auto');\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.ZonedDateTime');\n    }\n    startOfDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const calendar = GetSlot(this, CALENDAR);\n        const dtStart = new DateTime(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), 0, 0, 0, 0, 0, 0, calendar);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dtStart, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toInstant() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        return new TemporalInstant(GetSlot(this, EPOCHNANOSECONDS));\n    }\n    toPlainDate() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToDate(dateTime(this));\n    }\n    toPlainTime() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToTime(dateTime(this));\n    }\n    toPlainDateTime() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return dateTime(this);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarYearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.PrepareTemporalFields(this, fieldNames, []);\n        return ES.CalendarMonthDayFromFields(calendar, fields);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const tz = GetSlot(this, TIME_ZONE);\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(dt, ISO_DAY),\n            isoHour: GetSlot(dt, ISO_HOUR),\n            isoMicrosecond: GetSlot(dt, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(dt, ISO_MILLISECOND),\n            isoMinute: GetSlot(dt, ISO_MINUTE),\n            isoMonth: GetSlot(dt, ISO_MONTH),\n            isoNanosecond: GetSlot(dt, ISO_NANOSECOND),\n            isoSecond: GetSlot(dt, ISO_SECOND),\n            isoYear: GetSlot(dt, ISO_YEAR),\n            offset: ES.BuiltinTimeZoneGetOffsetStringFor(tz, GetSlot(this, INSTANT)),\n            timeZone: tz\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalZonedDateTime(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            ES.ToTemporalDisambiguation(options);\n            ES.ToTemporalOffset(options, 'reject');\n            return ES.CreateTemporalZonedDateTime(GetSlot(item, EPOCHNANOSECONDS), GetSlot(item, TIME_ZONE), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalZonedDateTime(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalZonedDateTime(oneParam);\n        const two = ES.ToTemporalZonedDateTime(twoParam);\n        const ns1 = GetSlot(one, EPOCHNANOSECONDS);\n        const ns2 = GetSlot(two, EPOCHNANOSECONDS);\n        if (JSBI.lessThan(JSBI.BigInt(ns1), JSBI.BigInt(ns2)))\n            return -1;\n        if (JSBI.greaterThan(JSBI.BigInt(ns1), JSBI.BigInt(ns2)))\n            return 1;\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(ZonedDateTime, 'Temporal.ZonedDateTime');\nfunction dateTime(zdt) {\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(zdt, TIME_ZONE), GetSlot(zdt, INSTANT), GetSlot(zdt, CALENDAR));\n}\n//# sourceMappingURL=zoneddatetime.js.map","// This entry point treats Temporal as a library, and does not polyfill it onto\n// the global object.\n// This is in order to avoid breaking the web in the future, if the polyfill\n// gains wide adoption before the API is finalized. We do not want checks such\n// as `if (typeof Temporal === 'undefined')` in the wild, until browsers start\n// shipping the finalized API.\nimport * as Temporal from './temporal';\nimport * as Intl from './intl';\nimport { toTemporalInstant } from './legacydate';\n// Work around https://github.com/babel/babel/issues/2025.\nconst types = [\n    Temporal.Instant,\n    Temporal.Calendar,\n    Temporal.PlainDate,\n    Temporal.PlainDateTime,\n    Temporal.Duration,\n    Temporal.PlainMonthDay,\n    // Temporal.Now, // plain object (not a constructor), so no `prototype`\n    Temporal.PlainTime,\n    Temporal.TimeZone,\n    Temporal.PlainYearMonth,\n    Temporal.ZonedDateTime\n];\nfor (const type of types) {\n    const descriptor = Object.getOwnPropertyDescriptor(type, 'prototype');\n    if (descriptor.configurable || descriptor.enumerable || descriptor.writable) {\n        descriptor.configurable = false;\n        descriptor.enumerable = false;\n        descriptor.writable = false;\n        Object.defineProperty(type, 'prototype', descriptor);\n    }\n}\nexport { Temporal, Intl, toTemporalInstant };\n//# sourceMappingURL=index.js.map","/**\n * a map of the IDs used in DHIS2 to the standard identifiers used by Temporal\n */\nexport const dhis2CalendarsMap = {\n  ethiopian: 'ethiopic',\n  coptic: 'coptic',\n  gregorian: 'gregory',\n  islamic: 'islamic',\n  iso8601: 'iso8601',\n  // 'Julian': 'julian', // this is not supported by Temporal\n  nepali: 'nepali',\n  thai: 'buddhist',\n  persian: 'persian'\n};","const calendarLocalisations = {\n  nepali: {\n    // these locales should follow lang-Country (lang from https://icu4c-demos.unicode.org/icu-bin/locexp and countryCode from https://www.iso.org/obp/ui/#search)\n    'ne-NP': {\n      monthNames: ['बैशाख', 'जेठ', 'असार', 'साउन', 'भदौ', 'असोज', 'कार्तिक', 'मंसिर', 'पौष', 'माघ', 'फागुन', 'चैत'],\n      // starting from Monday\n      dayNamesShort: ['सोम', 'मंगल', 'बुध', 'बिही', 'शुक्र', 'शनि', 'आइत'],\n      numbers: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९', '१०', '११', '१२', '१३', '१४', '१५', '१६', '१७', '१८', '१९', '२०', '२१', '२२', '२३', '२४', '२५', '२६', '२७', '२८', '२९', '३०', '३१', '३२']\n    },\n    'en-NP': {\n      monthNames: ['Baisakh', 'Jestha', 'Ashadh', 'Shrawan', 'Bhadra', 'Ashwin', 'Kartik', 'Mangsir', 'Paush', 'Mangh', 'Falgun', 'Chaitra'],\n      dayNamesShort: ['Som', 'Mangl', 'Budha', 'Bihi', 'Shukra', 'Shani', 'Aaita'],\n      monthNamesShort: ['Bai', 'Je', 'As', 'Shra', 'Bha', 'Ash', 'Kar', 'Mang', 'Pau', 'Ma', 'Fal', 'Chai'],\n      dayNames: ['Aaitabaar', 'Sombaar', 'Manglbaar', 'Budhabaar', 'Bihibaar', 'Shukrabaar', 'Shanibaar'],\n      dayNamesMin: ['Aai', 'So', 'Man', 'Bu', 'Bi', 'Shu', 'Sha']\n    }\n  }\n};\nexport default calendarLocalisations;","/**\n * Data for the nepali calendar.\n *\n * - The key (1970...) is the Nepali year.\n * - The first colummn is what day does the year starts on Paush.\n *    - The year always starts in Paush (the 9th month) but it is somewhere between 17 to 19th of Paush.\n * - The other 12 columns show how many days are in each month.\n *\n * The data starts from 1970 (1913 in gregorian calendar) to 2100 (2044 in gregorian calendar)\n */\nexport const NEPALI_CALENDAR_DATA = {\n  // This data are from http://www.ashesh.com.np\n  1970: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1971: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\n  1972: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  1973: [19, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  1974: [19, 31, 31, 32, 30, 31, 31, 30, 29, 30, 29, 30, 30],\n  1975: [18, 31, 31, 32, 32, 30, 31, 30, 29, 30, 29, 30, 30],\n  1976: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  1977: [18, 31, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\n  1978: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1979: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  1980: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  1981: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  1982: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1983: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  1984: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  1985: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  1986: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1987: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  1988: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  1989: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  1990: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1991: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  // These data are from http://nepalicalendar.rat32.com/index.php\n  1992: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  1993: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  1994: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1995: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  1996: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  1997: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1998: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  1999: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2000: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2001: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2002: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2003: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2004: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2005: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2006: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2007: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2008: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\n  2009: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2010: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2011: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2012: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  2013: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2014: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2015: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2016: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  2017: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2018: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2019: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2020: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2021: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2022: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  2023: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2024: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2025: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2026: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2027: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2028: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2029: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\n  2030: [17, 31, 32, 31, 32, 31, 30, 30, 30, 30, 30, 30, 31],\n  2031: [17, 31, 32, 31, 32, 31, 31, 31, 31, 31, 31, 31, 31],\n  2032: [17, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],\n  2033: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2034: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2035: [17, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\n  2036: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2037: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2038: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2039: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  2040: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2041: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2042: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2043: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  2044: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2045: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2046: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2047: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2048: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2049: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  2050: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2051: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2052: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2053: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  2054: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2055: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 29, 30],\n  2056: [17, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\n  2057: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2058: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2059: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2060: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2061: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2062: [17, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\n  2063: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2064: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2065: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2066: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\n  2067: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2068: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2069: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2070: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\n  2071: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2072: [17, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2073: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\n  2074: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2075: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2076: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  2077: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2078: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\n  2079: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\n  2080: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\n  // These data are from http://www.ashesh.com.np/nepali-calendar/\n  2081: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\n  2082: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2083: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\n  2084: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\n  2085: [17, 31, 32, 31, 32, 31, 31, 30, 30, 29, 30, 30, 30],\n  2086: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2087: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\n  2088: [16, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],\n  2089: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2090: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2091: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\n  2092: [16, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2093: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2094: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\n  2095: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30],\n  2096: [17, 30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\n  2097: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\n  2098: [17, 31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 30, 31],\n  2099: [17, 31, 31, 32, 31, 31, 31, 30, 29, 29, 30, 30, 30],\n  2100: [17, 31, 32, 31, 32, 30, 31, 30, 29, 30, 29, 30, 30]\n};","import { Temporal } from '@js-temporal/polyfill';\nimport { NEPALI_CALENDAR_DATA } from './nepaliCalendarData';\n/**\n * https://tc39.es/proposal-temporal/docs/calendar.html\n *\n * This implementation is based on World-Calendars library by Keith Wood:\n * https://github.com/kbwood/world-calendars\n */\nclass NepaliCalendar extends Temporal.Calendar {\n  constructor() {\n    super('iso8601');\n  }\n  toString() {\n    return 'nepali';\n  }\n\n  /**\n   * The methods year, month, day return the Nepali date\n   *\n   * A custom implementation of these methods is used to convert the ISO calendar date to the calendar-space arguments.\n   */\n  year(date) {\n    var _isoToNepali2;\n    const {\n      isoYear: year,\n      isoMonth: month,\n      isoDay: day\n    } = date.getISOFields();\n    const nepaliYear = (_isoToNepali2 = _isoToNepali({\n      year,\n      month,\n      day\n    })) === null || _isoToNepali2 === void 0 ? void 0 : _isoToNepali2.year;\n    return nepaliYear;\n  }\n  eraYear(date) {\n    return this.year(date);\n  }\n  daysInMonth(date) {\n    const {\n      year,\n      month\n    } = date;\n    return NEPALI_CALENDAR_DATA[year][month];\n  }\n  month(date) {\n    var _isoToNepali3;\n    const {\n      isoYear: year,\n      isoMonth: month,\n      isoDay: day\n    } = date.getISOFields();\n    return (_isoToNepali3 = _isoToNepali({\n      year,\n      month,\n      day\n    })) === null || _isoToNepali3 === void 0 ? void 0 : _isoToNepali3.month;\n  }\n  monthCode(date) {\n    const {\n      month\n    } = date;\n    return buildMonthCode(month);\n  }\n  day(date) {\n    const {\n      isoYear: year,\n      isoMonth: month,\n      isoDay: day\n    } = date.getISOFields();\n    const {\n      day: nepaliDay\n    } = _isoToNepali({\n      year,\n      month,\n      day\n    });\n    return nepaliDay;\n  }\n  /**\n   * The methods dateFromFields, yearMonthFromFields, monthDayFromFields convert from nepali to iso\n   *\n   * A custom implementation of these methods is used to convert the calendar-space arguments to the ISO calendar.\n   */\n  dateFromFields(fields, options) {\n    const {\n      year,\n      day,\n      month\n    } = _nepaliToIso({\n      year: fields.year,\n      month: fields.month,\n      day: fields.day\n    }, options);\n    return new Temporal.PlainDate(year, month, day, this);\n  }\n  yearMonthFromFields(fields) {\n    const {\n      year,\n      day,\n      month\n    } = _nepaliToIso({\n      year: fields.year,\n      month: fields.month,\n      day: fields.day\n    });\n    return new Temporal.PlainYearMonth(year, month, this, day);\n  }\n  monthDayFromFields(fields) {\n    const {\n      year,\n      day,\n      month\n    } = _nepaliToIso({\n      year: fields.year,\n      month: fields.month,\n      day: fields.day\n    });\n    return new Temporal.PlainMonthDay(day, month, this, year);\n  }\n}\nconst supportedNepaliYears = Object.keys(NEPALI_CALENDAR_DATA);\nconst firstSupportedNepaliYear = Number(supportedNepaliYears[0]);\nconst lastSupportedNepaliYear = Number(supportedNepaliYears[supportedNepaliYears.length - 1]);\nconst _nepaliToIso = function (fields) {\n  let {\n    overflow\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let {\n    year: nepaliYear\n  } = fields;\n  if (nepaliYear < firstSupportedNepaliYear || nepaliYear > lastSupportedNepaliYear) {\n    throw new Error(`Conversions are only possible between ${firstSupportedNepaliYear} and ${lastSupportedNepaliYear} in Nepali calendar`);\n  }\n  const {\n    month: nepaliMonth,\n    day: nepaliDay = 1\n  } = fields;\n  if (overflow === 'reject' && (nepaliMonth < 1 || nepaliMonth > 12 || nepaliDay > NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth])) {\n    throw new Error('Invalid date in Nepali calendar');\n  }\n  let gregorianDayOfYear = 0;\n  let monthCounter = nepaliMonth;\n  const gregorianYear = nepaliYear - (nepaliMonth > 9 || monthCounter === 9 && nepaliDay >= NEPALI_CALENDAR_DATA[nepaliYear][0] ? 56 : 57);\n\n  // First we add the amount of days in the actual Nepali month as the day of year in the\n  // Gregorian one because at least these days are gone since the 1st Jan.\n  if (nepaliMonth !== 9) {\n    gregorianDayOfYear = nepaliDay;\n    monthCounter--;\n  }\n\n  // Now we loop through all Nepali months and add the amount of days to gregorianDayOfYear\n  // we do this till we reach Paush (9th month). 1st January always falls in this month.\n  while (monthCounter !== 9) {\n    if (monthCounter <= 0) {\n      monthCounter = 12;\n      nepaliYear--;\n    }\n    gregorianDayOfYear += NEPALI_CALENDAR_DATA[nepaliYear][monthCounter];\n    monthCounter--;\n  }\n\n  // If the date that has to be converted is in Paush (month no. 9) we have to do some other calculation\n  if (nepaliMonth === 9) {\n    // Add the days that are passed since the first day of Paush and substract the\n    // amount of days that lie between 1st Jan and 1st Paush\n    gregorianDayOfYear += nepaliDay - NEPALI_CALENDAR_DATA[nepaliYear][0];\n    // For the first days of Paush we are now in negative values,\n    // because in the end of the Gregorian year we substract\n    // 365 / 366 days (P.S. remember math in school + - gives -)\n    if (gregorianDayOfYear < 0) {\n      gregorianDayOfYear += Temporal.PlainDate.from({\n        year: gregorianYear,\n        day: 1,\n        month: 1\n      }).daysInYear;\n    }\n  } else {\n    gregorianDayOfYear += NEPALI_CALENDAR_DATA[nepaliYear][9] - NEPALI_CALENDAR_DATA[nepaliYear][0];\n  }\n  const result = Temporal.PlainDate.from({\n    year: gregorianYear,\n    month: 1,\n    day: 1\n  }).add({\n    days: gregorianDayOfYear\n  });\n  return {\n    year: result.year,\n    month: result.month,\n    monthCode: buildMonthCode(result.month),\n    day: result.day\n  };\n};\nconst _isoToNepali = isoDate => {\n  // make sure this is iso8601\n  const gregorianDate = Temporal.PlainDate.from({\n    year: isoDate.year,\n    month: isoDate.month,\n    day: isoDate.day\n  });\n  const gregorianYear = gregorianDate.year;\n  const gregorianDayOfYear = gregorianDate.dayOfYear;\n  let nepaliYear = gregorianYear + 56; // this is not final, it could be also +57 but +56 is always true for 1st Jan.\n\n  if (!NEPALI_CALENDAR_DATA[nepaliYear]) {\n    throw new Error(`Conversions are only possible between ${firstSupportedNepaliYear} and ${lastSupportedNepaliYear} in Nepali calendar`);\n  }\n  let nepaliMonth = 9; // Jan 1 always fall in Nepali month Paush which is the 9th month of Nepali calendar.\n  // Get the Nepali day in Paush (month 9) of 1st January\n\n  const dayOfFirstJanInPaush = NEPALI_CALENDAR_DATA[nepaliYear][0];\n  // Check how many days are left of Paush.\n  // Days calculated from 1st Jan till the end of the actual Nepali month,\n  // we use this value to check if the Gregorian date is in the actual Nepali month.\n  let daysSinceJanFirstToEndOfNepaliMonth = NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] - dayOfFirstJanInPaush + 1;\n\n  // If the Gregorian day-of-year is smaller than or equal to the sum of days between the 1st January and\n  // the end of the actual Nepali month we have found the correct Nepali month.\n  // Example:\n  // The 4th February 2011 is the gregorianDayOfYear 35 (31 days of January + 4)\n  // 1st January 2011 is in the Nepali year 2067, where 1st January is the 17th day of Paush (9th month).\n  // In 2067 Paush has 30 days, which means (30-17+1=14) there are 14 days between 1st January and end of Paush\n  // (including 17th January).\n  // The gregorianDayOfYear (35) is bigger than 14, so we check the next month.\n  // The next Nepali month (Mangh) has 29 days\n  // 29+14=43, this is bigger than gregorianDayOfYear (35) so, we have found the correct Nepali month.\n  while (gregorianDayOfYear > daysSinceJanFirstToEndOfNepaliMonth) {\n    var _NEPALI_CALENDAR_DATA;\n    nepaliMonth++;\n    if (nepaliMonth > 12) {\n      nepaliMonth = 1;\n      nepaliYear++;\n    }\n    daysSinceJanFirstToEndOfNepaliMonth += (_NEPALI_CALENDAR_DATA = NEPALI_CALENDAR_DATA[nepaliYear]) === null || _NEPALI_CALENDAR_DATA === void 0 ? void 0 : _NEPALI_CALENDAR_DATA[nepaliMonth];\n  }\n  if (!NEPALI_CALENDAR_DATA[nepaliYear]) {\n    throw new Error(`Conversions are only possible between ${firstSupportedNepaliYear} and ${lastSupportedNepaliYear} in Nepali calendar`);\n  }\n  // The last step is to calculate the Nepali day-of-month.\n  // To continue our example from before:\n  // we calculated there are 43 days from 1st January (17 Paush) till end of Mangh (29 days).\n  // When we subtract from this 43 days the day-of-year of the the Gregorian date (35),\n  // we know how far the searched day is away from the end of the Nepali month.\n  // So we simply subtract this number from the amount of days in this month (30).\n  const nepaliDayOfMonth = NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] - (daysSinceJanFirstToEndOfNepaliMonth - gregorianDayOfYear);\n  return {\n    year: nepaliYear,\n    month: nepaliMonth,\n    day: nepaliDayOfMonth\n  };\n};\nfunction buildMonthCode(month) {\n  return `M${month.toString().padStart(2, '0')}`;\n}\nexport { NepaliCalendar };","import calendarLocalisations from './calendarLocalisations';\nimport { NepaliCalendar } from './nepaliCalendar';\nexport const customCalendars = {\n  nepali: {\n    calendar: new NepaliCalendar(),\n    locales: calendarLocalisations.nepali,\n    defaultLocale: 'en-NP'\n  }\n};","//Match for dates in dd-mm-yyyy & yyyy-mm-dd formats\nexport const dateStringRegExp = /^(?:(\\d{4})([-./])(\\d{2})(\\2)(\\d{2})|(\\d{2})([-./])(\\d{2})(\\7)(\\d{4}))$/;","import i18n from '@dhis2/d2-i18n';\nimport { dateStringRegExp } from './date-string-regexp';\nexport function extractDatePartsFromDateString(dateString, format) {\n  const parts = dateString.match(dateStringRegExp);\n  if (!parts) {\n    throw new Error(i18n.t(`Date string is invalid, received \"{{dateString}}\"`, {\n      dateString\n    }));\n  }\n  let yearStr, monthStr, dayStr, detectedFormat;\n  if (parts[1]) {\n    // Match for YYYY-MM-DD\n    yearStr = parts[1];\n    monthStr = parts[3];\n    dayStr = parts[5];\n    detectedFormat = 'YYYY-MM-DD';\n  } else {\n    // Match for DD-MM-YYYY\n    dayStr = parts[6];\n    monthStr = parts[8];\n    yearStr = parts[10];\n    detectedFormat = 'DD-MM-YYYY';\n  }\n  if (format && detectedFormat !== format.toUpperCase()) {\n    throw new Error(i18n.t(`Date string format does not match the specified format. Expected {{format}} but got {{detectedFormat}}.`, {\n      format,\n      detectedFormat\n    }));\n  }\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const day = parseInt(dayStr, 10);\n  return {\n    year,\n    month,\n    day,\n    format: detectedFormat\n  };\n}","import { Temporal } from '@js-temporal/polyfill';\nimport { dhis2CalendarsMap } from '../constants/dhis2CalendarsMap';\nimport { getCustomCalendarIfExists, isCustomCalendar } from '../utils/helpers';\n\n/**\n * Gets the Now DateTime in the specified calendar and timeZone\n *\n * @param calendarToUse the calendar to use\n * @param timeZone the timeZone to use\n * @returns Temporal.ZoneDateTime which can be destructured to .year, .month, .day, .hour etc... (returning the values in the specified calendar) or can .getISOFields() to return the underlying iso8601 date\n */\nconst getNowInCalendar = function () {\n  var _Intl, _Intl$DateTimeFormat, _Intl$DateTimeFormat$, _Intl$DateTimeFormat$2, _Intl$DateTimeFormat$3, _dhis2CalendarsMap;\n  let calendarToUse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'gregory';\n  let timeZone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ((_Intl = Intl) === null || _Intl === void 0 ? void 0 : (_Intl$DateTimeFormat = _Intl.DateTimeFormat) === null || _Intl$DateTimeFormat === void 0 ? void 0 : (_Intl$DateTimeFormat$ = (_Intl$DateTimeFormat$2 = _Intl$DateTimeFormat.call(_Intl)).resolvedOptions) === null || _Intl$DateTimeFormat$ === void 0 ? void 0 : (_Intl$DateTimeFormat$3 = _Intl$DateTimeFormat$.call(_Intl$DateTimeFormat$2)) === null || _Intl$DateTimeFormat$3 === void 0 ? void 0 : _Intl$DateTimeFormat$3.timeZone) || 'UTC';\n  const gregorianDate = Temporal.Now.zonedDateTime('gregory', timeZone);\n  let calendar = (_dhis2CalendarsMap = dhis2CalendarsMap[calendarToUse]) !== null && _dhis2CalendarsMap !== void 0 ? _dhis2CalendarsMap : calendarToUse;\n  if (isCustomCalendar(calendar)) {\n    calendar = getCustomCalendarIfExists(calendar);\n  }\n  const result = Temporal.ZonedDateTime.from(gregorianDate).withCalendar(calendar);\n  return result;\n};\nexport default getNowInCalendar;","import i18n from '@dhis2/d2-i18n';\nimport { Temporal } from '@js-temporal/polyfill';\nimport { dhis2CalendarsMap } from '../constants/dhis2CalendarsMap';\nimport { extractDatePartsFromDateString } from './extract-date-parts-from-date-string';\nimport { getCustomCalendarIfExists, isCustomCalendar } from './helpers';\nexport let DateValidationResult;\n(function (DateValidationResult) {\n  DateValidationResult[\"INVALID_DATE_IN_CALENDAR\"] = \"INVALID_DATE_IN_CALENDAR\";\n  DateValidationResult[\"WRONG_FORMAT\"] = \"WRONG_FORMAT\";\n  DateValidationResult[\"LESS_THAN_MIN\"] = \"LESS_THAN_MIN\";\n  DateValidationResult[\"MORE_THAN_MAX\"] = \"INVALID_DATE_MORE_THAN_MAX\";\n})(DateValidationResult || (DateValidationResult = {}));\nexport const validateDateString = function (dateString) {\n  var _dhis2CalendarsMap$ca;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    calendar = 'gregory',\n    minDateString,\n    maxDateString,\n    strictValidation = true,\n    format\n  } = options;\n  const resolvedCalendar = getCustomCalendarIfExists((_dhis2CalendarsMap$ca = dhis2CalendarsMap[calendar]) !== null && _dhis2CalendarsMap$ca !== void 0 ? _dhis2CalendarsMap$ca : calendar);\n\n  // Will throw if the format of the date is incorrect\n  if (!dateString) {\n    return {\n      valid: false,\n      error: true,\n      validationCode: DateValidationResult.WRONG_FORMAT,\n      validationText: i18n.t(`Date is not given`)\n    };\n  }\n  let dateParts;\n  try {\n    dateParts = extractDatePartsFromDateString(dateString, format);\n  } catch (e) {\n    return {\n      valid: false,\n      error: true,\n      validationCode: DateValidationResult.WRONG_FORMAT,\n      validationText: e === null || e === void 0 ? void 0 : e.message\n    };\n  }\n  let date;\n\n  // Will throw if the year, month or day is out of range\n  try {\n    date = isCustomCalendar(resolvedCalendar) ? Temporal.Calendar.from(resolvedCalendar).dateFromFields(dateParts, {\n      overflow: 'reject'\n    }) // need to be handled separately for custom calendars\n    : Temporal.PlainDate.from({\n      ...dateParts,\n      calendar: resolvedCalendar\n    }, {\n      overflow: 'reject'\n    });\n  } catch (err) {\n    return {\n      valid: false,\n      error: true,\n      validationCode: DateValidationResult.INVALID_DATE_IN_CALENDAR,\n      validationText: i18n.t('Invalid date in specified calendar')\n    };\n  }\n  const validationType = strictValidation ? {\n    error: true,\n    valid: false\n  } : {\n    warning: true,\n    valid: true\n  };\n  if (minDateString) {\n    const minDateParts = extractDatePartsFromDateString(minDateString);\n    const minDate = Temporal.PlainDate.from({\n      ...minDateParts,\n      calendar: resolvedCalendar\n    });\n    if (Temporal.PlainDate.compare(date, minDate) < 0) {\n      const result = {\n        ...validationType,\n        validationCode: DateValidationResult.LESS_THAN_MIN,\n        validationText: i18n.t(`Date {{dateString}} is less than the minimum allowed date {{minDateString}}.`, {\n          dateString,\n          minDateString\n        })\n      };\n      return result;\n    }\n  }\n  if (maxDateString) {\n    const maxDateParts = extractDatePartsFromDateString(maxDateString);\n    const maxDate = Temporal.PlainDate.from({\n      ...maxDateParts,\n      calendar: resolvedCalendar\n    });\n    if (Temporal.PlainDate.compare(date, maxDate) > 0) {\n      const result = {\n        ...validationType,\n        validationCode: DateValidationResult.MORE_THAN_MAX,\n        validationText: i18n.t(`Date {{dateString}} is greater than the maximum allowed date {{maxDateString}}.`, {\n          dateString,\n          maxDateString\n        })\n      };\n      return result;\n    }\n  }\n  return {\n    valid: true,\n    error: false,\n    warning: false\n  };\n};","import { customCalendars } from '../custom-calendars';\nimport { extractDatePartsFromDateString } from './extract-date-parts-from-date-string';\nimport getNowInCalendar from './getNowInCalendar';\nimport { validateDateString } from './validate-date-string';\nexport const isCustomCalendar = calendar => !!customCalendars[calendar];\nexport const padWithZeroes = function (number) {\n  let count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return String(number).padStart(count, '0');\n};\nexport const formatDate = (date, dayType, format) => {\n  var _date$eraYear;\n  const year = (_date$eraYear = date.eraYear) !== null && _date$eraYear !== void 0 ? _date$eraYear : date.year;\n  const month = padWithZeroes(date.month);\n  let day = date.day;\n  if (dayType === 'endOfMonth') {\n    day = date.daysInMonth;\n  } else if (dayType === 'startOfMonth') {\n    day = 1;\n  }\n  const dayString = padWithZeroes(day);\n  return format === 'DD-MM-YYYY' ? `${dayString}-${month}-${year}` : `${year}-${month}-${dayString}`;\n};\n\n// capitalize method taking into account locales that have different way of lower/upper case\n// based on https://stackoverflow.com/a/53930826\nexport const capitalize = function (_ref) {\n  let [firstLetter = '', ...rest] = _ref;\n  let locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n  return [firstLetter.toLocaleUpperCase(locale), ...rest].join('');\n};\nexport const getCustomCalendarIfExists = calendar => {\n  var _customCalendars;\n  const isCustom = isCustomCalendar(calendar);\n  if (!isCustom) {\n    return calendar;\n  }\n  const customCalendar = (_customCalendars = customCalendars[calendar]) === null || _customCalendars === void 0 ? void 0 : _customCalendars.calendar;\n  if (!customCalendar) {\n    throw new Error(`No implemenation found for custom calendar ${calendar}`);\n  }\n  return customCalendar;\n};\nexport const extractAndValidateDateString = (date, options) => {\n  if (!date) {\n    return getCurrentDateResult(options);\n  }\n  const validation = validateDateString(date, options);\n  if (!validation.error) {\n    return getValidDateResult(date, options);\n  } else {\n    return getInvalidDateResult(options);\n  }\n};\nconst getCurrentDateResult = options => {\n  const {\n    year,\n    month,\n    day\n  } = getNowInCalendar(options.calendar, options.timeZone);\n  return {\n    year,\n    month,\n    day,\n    isValid: true\n  };\n};\nconst getValidDateResult = (date, options) => {\n  const {\n    year,\n    month,\n    day,\n    format\n  } = extractDatePartsFromDateString(date);\n  let result = {\n    year,\n    month,\n    day,\n    format\n  };\n  if (options.calendar === 'ethiopic') {\n    result = adjustForEthiopicCalendar(result);\n  }\n  return result;\n};\nconst getInvalidDateResult = options => {\n  const {\n    year,\n    month,\n    day\n  } = getNowInCalendar(options.calendar, options.timeZone);\n  return {\n    year,\n    month,\n    day\n  };\n};\nconst adjustForEthiopicCalendar = result => {\n  result.era = 'era1';\n  result.eraYear = result.year;\n  delete result.year;\n  return result;\n};","export const numberingSystems = ['adlm',\n// Adlam digits\n'ahom',\n// Ahom digits\n'arab',\n// Arabic-Indic digits\n'arabext',\n// Extended Arabic-Indic digits\n'armn',\n// Armenian upper case numerals — algorithmic\n'armnlow',\n// Armenian lower case numerals — algorithmic\n'bali',\n// Balinese digits\n'beng',\n// Bengali digits\n'bhks',\n// Bhaiksuki digits\n'brah',\n// Brahmi digits\n'cakm',\n// Chakma digits\n'cham',\n// Cham digits\n'cyrl',\n// Cyrillic numerals — algorithmic\n'deva',\n// Devanagari digits\n'ethi',\n// Ethiopic numerals — algorithmic\n'finance',\n// Financial numerals — may be algorithmic\n'fullwide',\n// Full width digits\n'geor',\n// Georgian numerals — algorithmic\n'gong',\n// Gunjala Gondi digits\n'gonm',\n// Masaram Gondi digits\n'grek',\n// Greek upper case numerals — algorithmic\n'greklow',\n// Greek lower case numerals — algorithmic\n'gujr',\n// Gujarati digits\n'guru',\n// Gurmukhi digits\n'hanidays',\n// Han-character day-of-month numbering for lunar/other traditional calendars\n'hanidec',\n// Positional decimal system using Chinese number ideographs as digits\n'hans',\n// Simplified Chinese numerals — algorithmic\n'hansfin',\n// Simplified Chinese financial numerals — algorithmic\n'hant',\n// Traditional Chinese numerals — algorithmic\n'hantfin',\n// Traditional Chinese financial numerals — algorithmic\n'hebr',\n// Hebrew numerals — algorithmic\n'hmng',\n// Pahawh Hmong digits\n'hmnp',\n// Nyiakeng Puachue Hmong digits\n'java',\n// Javanese digits\n'jpan',\n// Japanese numerals — algorithmic\n'jpanfin',\n// Japanese financial numerals — algorithmic\n'jpanyear',\n// Japanese first-year Gannen numbering for Japanese calendar\n'kali',\n// Kayah Li digits\n'khmr',\n// Khmer digits\n'knda',\n// Kannada digits\n'lana',\n// Tai Tham Hora (secular) digits\n'lanatham',\n// Tai Tham (ecclesiastical) digits\n'laoo',\n// Lao digits\n'latn',\n// Latin digits\n'lepc',\n// Lepcha digits\n'limb',\n// Limbu digits\n'mathbold',\n// Mathematical bold digits\n'mathdbl',\n// Mathematical double-struck digits\n'mathmono',\n// Mathematical monospace digits\n'mathsanb',\n// Mathematical sans-serif bold digits\n'mathsans',\n// Mathematical sans-serif digits\n'mlym',\n// Malayalam digits\n'modi',\n// Modi digits\n'mong',\n// Mongolian digits\n'mroo',\n// Mro digits\n'mtei',\n// Meetei Mayek digits\n'mymr',\n// Myanmar digits\n'mymrshan',\n// Myanmar Shan digits\n'mymrtlng',\n// Myanmar Tai Laing digits\n'native',\n// Native digits\n'newa',\n// Newa digits\n'nkoo',\n// N'Ko digits\n'olck',\n// Ol Chiki digits\n'orya',\n// Oriya digits\n'osma',\n// Osmanya digits\n'rohg',\n// Hanifi Rohingya digits\n'roman',\n// Roman upper case numerals — algorithmic\n'romanlow',\n// Roman lowercase numerals — algorithmic\n'saur',\n// Saurashtra digits\n'shrd',\n// Sharada digits\n'sind',\n// Khudawadi digits\n'sinh',\n// Sinhala Lith digits\n'sora',\n// Sora_Sompeng digits\n'sund',\n// Sundanese digits\n'takr',\n// Takri digits\n'talu',\n// New Tai Lue digits\n'taml',\n// Tamil numerals — algorithmic\n'tamldec',\n// Modern Tamil decimal digits\n'telu',\n// Telugu digits\n'thai',\n// Thai digits\n'tirh',\n// Tirhuta digits\n'tibt',\n// Tibetan digits\n'traditio',\n// Traditional numerals — may be algorithmic\n'vaii',\n// Vai digits\n'wara',\n// Warang Citi digits\n'wcho' // Wancho digits\n];","import { Temporal } from '@js-temporal/polyfill';\nimport { numberingSystems } from '../constants';\nimport { customCalendars } from '../custom-calendars';\nimport { formatDate, isCustomCalendar } from './helpers';\nconst getPartialLocaleMatch = (availableLocales, locale) => {\n  // try to see if there is a language match (even if the region doesn't match)\n  const partialLocaleMatch = Object.keys(availableLocales).find(supportedLocale => {\n    var _supportedLocale$spli, _supportedLocale$spli2;\n    return ((_supportedLocale$spli = supportedLocale.split('-')) === null || _supportedLocale$spli === void 0 ? void 0 : (_supportedLocale$spli2 = _supportedLocale$spli[0]) === null || _supportedLocale$spli2 === void 0 ? void 0 : _supportedLocale$spli2.toLowerCase()) === locale;\n  });\n  if (partialLocaleMatch) {\n    return availableLocales[partialLocaleMatch];\n  }\n};\nconst getCustomCalendarLocale = (calendar, locale) => {\n  var _ref, _ref2;\n  const customCalendar = customCalendars[calendar];\n  if (!customCalendar) {\n    return undefined;\n  }\n  const customLocalisations = customCalendar.locales || {};\n  const result = (_ref = (_ref2 = locale && (customLocalisations === null || customLocalisations === void 0 ? void 0 : customLocalisations[locale])) !== null && _ref2 !== void 0 ? _ref2 : getPartialLocaleMatch(customLocalisations, locale)) !== null && _ref !== void 0 ? _ref : customLocalisations === null || customLocalisations === void 0 ? void 0 : customLocalisations[customCalendar.defaultLocale];\n  if (!result) {\n    throw new Error(`no localisation found for custom calendar ${calendar}. Requested locale: ${locale}, Default locale ${customCalendar.defaultLocale}`);\n  }\n  return result;\n};\nconst localiseDateLabel = function (selectedDateZdt, localeOptions) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    dateStyle: 'full'\n  };\n  if (!localeOptions.calendar) {\n    throw new Error('no calendar provided to localise function');\n  }\n  if (!selectedDateZdt) {\n    throw new Error('a date must be provided to localiseDateLabel');\n  }\n  const isCustom = isCustomCalendar(localeOptions.calendar);\n  const nonCustomDate = selectedDateZdt instanceof Temporal.ZonedDateTime ? selectedDateZdt === null || selectedDateZdt === void 0 ? void 0 : selectedDateZdt.toPlainDate() : selectedDateZdt;\n  return isCustom ? formatDate(selectedDateZdt) : nonCustomDate.toLocaleString(localeOptions.locale, {\n    calendar: localeOptions.calendar,\n    dateStyle: options.dateStyle\n  }).toString();\n};\nconst localiseWeekLabel = (zdt, localeOptions) => {\n  var _customLocale$numbers;\n  if (!localeOptions.calendar) {\n    throw new Error('no calendar provided to localise function');\n  }\n  const isCustom = isCustomCalendar(localeOptions.calendar);\n  const customLocale = getCustomCalendarLocale(localeOptions.calendar, localeOptions.locale);\n  return isCustom ? (customLocale === null || customLocale === void 0 ? void 0 : (_customLocale$numbers = customLocale.numbers) === null || _customLocale$numbers === void 0 ? void 0 : _customLocale$numbers[zdt.day]) || zdt.day : zdt.toPlainDate().toLocaleString(localeOptions.locale, {\n    calendar: localeOptions.calendar,\n    numberingSystem: numberingSystems.includes(localeOptions.numberingSystem) ? localeOptions.numberingSystem : undefined,\n    day: 'numeric'\n  });\n};\nconst localiseMonth = (zdt, localeOptions, format) => {\n  if (!localeOptions.calendar) {\n    throw new Error('no calendar provided to localise function');\n  }\n  const isCustom = isCustomCalendar(localeOptions.calendar);\n  const customLocale = getCustomCalendarLocale(localeOptions.calendar, localeOptions.locale);\n  return isCustom ? customLocale === null || customLocale === void 0 ? void 0 : customLocale.monthNames[zdt.month - 1] : zdt.toLocaleString(localeOptions.locale, format);\n};\nexport const localiseWeekDayLabel = (zdt, localeOptions) => {\n  if (!localeOptions.calendar) {\n    throw new Error('no calendar provided to localise function');\n  }\n  const isCustom = isCustomCalendar(localeOptions.calendar);\n  const customCalendar = getCustomCalendarLocale(localeOptions.calendar, localeOptions.locale);\n  const customDayString = customCalendar === null || customCalendar === void 0 ? void 0 : customCalendar.dayNamesShort[zdt.dayOfWeek - 1]; // dayOfWeek is 1-based\n\n  return isCustom && customDayString ? customDayString : zdt.toPlainDate().toLocaleString(localeOptions.locale, {\n    weekday: localeOptions.weekDayFormat,\n    calendar: localeOptions.calendar\n  });\n};\nexport const localiseYear = (zdt, localeOptions, format) => {\n  if (!localeOptions.calendar) {\n    throw new Error('no calendar provided to localise function');\n  }\n  const isCustom = isCustomCalendar(localeOptions.calendar);\n  return isCustom ? zdt.year : zdt.toPlainYearMonth().toLocaleString(localeOptions.locale, format);\n};\nconst localisationHelpers = {\n  localiseYear,\n  localiseDateLabel,\n  localiseWeekLabel,\n  localiseMonth,\n  localiseWeekDayLabel\n};\nexport default localisationHelpers;","import { Temporal } from '@js-temporal/polyfill';\nimport { useMemo } from 'react';\nconst groupByWeek = (acc, day) => {\n  if (day.dayOfWeek === 1) {\n    acc.push([]);\n  }\n  const currentWeekArray = acc[acc.length - 1];\n  currentWeekArray.push(day);\n  return acc;\n};\n\n/**\n * internal hook used by useDatePicker hook to return the week days numbers in a calendar\n *\n * @param dayZdt\n * @returns an array of array of days (each top-level array is a week)\n */\nexport const useCalendarWeekDays = dayZdt => {\n  return useMemo(() => {\n    const dateInfo = {\n      year: dayZdt.year,\n      month: dayZdt.month,\n      day: dayZdt.day,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      calendar: dayZdt.calendar,\n      timeZone: dayZdt.timeZone\n    };\n\n    // get first day of the month\n    const firstDayOfMonth = Temporal.ZonedDateTime.from({\n      ...dateInfo,\n      day: 1\n    });\n    // get first day of first week to display\n    const firstDayToDisplay = firstDayOfMonth.subtract({\n      days: firstDayOfMonth.dayOfWeek - 1\n    });\n\n    // get last day of month\n    const lastDayOfMonth = Temporal.ZonedDateTime.from({\n      ...dateInfo,\n      day: dayZdt.daysInMonth\n    });\n\n    // get last day of last week of month\n    const lastDayToDisplay = lastDayOfMonth.add({\n      days: 7 - lastDayOfMonth.dayOfWeek\n    });\n    const numberOfDaysInCalendar = lastDayToDisplay.toPlainDate().since(firstDayToDisplay.toPlainDate()).days;\n    let date = Temporal.ZonedDateTime.from(firstDayToDisplay);\n    const allDates = [];\n    for (let i = 0; i <= numberOfDaysInCalendar; i++) {\n      allDates.push(date);\n      date = date.add({\n        days: 1\n      });\n    }\n    return allDates.reduce(groupByWeek, []);\n  }, [dayZdt]);\n};","/**\n * This method ensures that a locale is valid and supported by browser, and returns it if it is.\n *\n * It used Intl.DateTimeFormat.supportedLocalesOf to decide whether the locale is valid or not.\n * Intl.DateTimeFormat.supportedLocalesOf takes a locale (or a list of locales) and returns:\n * - an array with the locale if it's valid\n * - an empty array if it's valid but not supported\n * - throws an error if it's not valid\n * @param locale locale to validate and return\n * @returns the locale if it's valid, otherwise undefined\n */\nconst getValidLocale = function () {\n  let requestedLocale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  // this \"replace\" is to cater for DHIS2 locales using underscore as Java allows both hyphens and underscores\n  // while JavaScript expects a hyphen (which is the correct way according to RFC-5646 that both rely on)\n  const [lng, region, script] = requestedLocale.replace(/_/g, '-').split('-');\n  let locale = lng;\n  if (script) {\n    locale = `${locale}-${script}`;\n  }\n  if (region) {\n    locale = `${locale}-${region}`;\n  }\n  try {\n    const result = Intl.DateTimeFormat.supportedLocalesOf(locale);\n    if (result && result.length === 1) {\n      return locale;\n    } else {\n      return undefined;\n    }\n  } catch (err) {\n    return undefined;\n  }\n};\nexport default getValidLocale;","import { Intl } from '@js-temporal/polyfill';\nimport { useMemo } from 'react';\nimport getValidLocale from '../../utils/getValidLocale';\nimport { isCustomCalendar } from '../../utils/helpers';\n/**\n * A hook that returns the locale and locale options to be used by the calendar.\n *\n * The order of precedence of how the options are resolved should be:\n *\n * - Prop-values passed to the hook/component\n * - Properties available from the system/user settings resource* (in the future)\n * - Values coming from Intl.DateTimeFormat().resolvedOptions()\n * - Some hardcoded defaults\n *\n * @param options\n * @returns\n */\nexport const useResolvedLocaleOptions = userOptions => {\n  // validate that the passed locale is valid, use it if valid, otherwise, keep it undefined\n  const locale = getValidLocale(userOptions.locale);\n  return useMemo(() => {\n    var _Intl$DateTimeFormat, _Intl$DateTimeFormat$, _Intl$DateTimeFormat$2, _defaultDateTimeOptio, _defaultDateTimeOptio2, _defaultDateTimeOptio3, _defaultDateTimeOptio4;\n    /**\n     * If no options are provided this will use the values of the user browser\n     * If a locale identifier is provided it will use that to populate options\n     * If any options are provided these will override the options for the\n     * specified locale identifier or browser settings\n     */\n    const {\n      locale: resolvedLocale,\n      ...resolvedOptions\n    } = new Intl.DateTimeFormat(locale, {\n      calendar: userOptions.calendar,\n      timeZone: userOptions.timeZone,\n      numberingSystem: userOptions.numberingSystem,\n      weekday: userOptions.weekDayFormat\n    }).resolvedOptions();\n    const defaultDateTimeOptions = Intl === null || Intl === void 0 ? void 0 : (_Intl$DateTimeFormat = Intl.DateTimeFormat) === null || _Intl$DateTimeFormat === void 0 ? void 0 : (_Intl$DateTimeFormat$ = (_Intl$DateTimeFormat$2 = _Intl$DateTimeFormat.call(Intl)).resolvedOptions) === null || _Intl$DateTimeFormat$ === void 0 ? void 0 : _Intl$DateTimeFormat$.call(_Intl$DateTimeFormat$2);\n    const defaultUserOptions = {\n      calendar: 'gregory',\n      timeZone: (_defaultDateTimeOptio = defaultDateTimeOptions === null || defaultDateTimeOptions === void 0 ? void 0 : defaultDateTimeOptions.timeZone) !== null && _defaultDateTimeOptio !== void 0 ? _defaultDateTimeOptio : 'UTC',\n      numberingSystem: (_defaultDateTimeOptio2 = defaultDateTimeOptions === null || defaultDateTimeOptions === void 0 ? void 0 : defaultDateTimeOptions.numberingSystem) !== null && _defaultDateTimeOptio2 !== void 0 ? _defaultDateTimeOptio2 : 'latn',\n      locale: (_defaultDateTimeOptio3 = defaultDateTimeOptions === null || defaultDateTimeOptions === void 0 ? void 0 : defaultDateTimeOptions.locale) !== null && _defaultDateTimeOptio3 !== void 0 ? _defaultDateTimeOptio3 : 'en',\n      weekDayFormat: (_defaultDateTimeOptio4 = defaultDateTimeOptions === null || defaultDateTimeOptions === void 0 ? void 0 : defaultDateTimeOptions.weekday) !== null && _defaultDateTimeOptio4 !== void 0 ? _defaultDateTimeOptio4 : 'narrow'\n    };\n    let localeToUse = resolvedLocale || defaultUserOptions.locale;\n    // This step is necessary for custom locales where we have our own localisation values (like ne-NP)\n    // otherwise they can be overridden by  Intl.DateTimeFormat().resolvedOptions()\n    if (userOptions.calendar && userOptions.locale && isCustomCalendar(userOptions.calendar)) {\n      localeToUse = userOptions.locale;\n    }\n    return {\n      calendar: userOptions.calendar || defaultUserOptions.calendar,\n      locale: localeToUse,\n      timeZone: resolvedOptions.timeZone || defaultUserOptions.timeZone,\n      numberingSystem: resolvedOptions.numberingSystem || defaultUserOptions.numberingSystem,\n      weekDayFormat: userOptions.weekDayFormat || defaultUserOptions.weekDayFormat\n    };\n  }, [locale, userOptions]);\n};","import { Temporal } from '@js-temporal/polyfill';\nimport { useMemo } from 'react';\nimport localisationHelpers from '../../utils/localisationHelpers';\nexport const useWeekDayLabels = localeOptions => useMemo(() => {\n  if (!localeOptions.calendar) {\n    throw new Error('a calendar must be provided to useWeekDayLabels');\n  }\n  const today = Temporal.Now.zonedDateTime(localeOptions.calendar).startOfDay();\n  const startOfWeek = today.subtract({\n    days: today.dayOfWeek - 1\n  }); // dayOfWeek is 1-based, where 1 is Monday\n\n  const labels = [];\n  for (let i = 0; i < today.daysInWeek; i++) {\n    const currentDate = startOfWeek.add({\n      days: i\n    });\n    const weekDayString = getWeekDayString(currentDate, localeOptions);\n    labels.push(weekDayString);\n  }\n  return labels;\n}, [localeOptions]);\nconst getWeekDayString = (date, localeOptions) => {\n  return localisationHelpers.localiseWeekDayLabel(date, localeOptions);\n};","import { Temporal } from '@js-temporal/polyfill';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { dhis2CalendarsMap } from '../constants/dhis2CalendarsMap';\nimport { getNowInCalendar } from '../index';\nimport { formatDate, getCustomCalendarIfExists, extractAndValidateDateString } from '../utils/helpers';\nimport localisationHelpers from '../utils/localisationHelpers';\nimport { useCalendarWeekDays } from './internal/useCalendarWeekDays';\nimport { useNavigation } from './internal/useNavigation';\nimport { useResolvedLocaleOptions } from './internal/useResolvedLocaleOptions';\nimport { useWeekDayLabels } from './internal/useWeekDayLabels';\nexport const useDatePicker = _ref => {\n  let {\n    onDateSelect,\n    date: dateString,\n    minDate,\n    maxDate,\n    format,\n    strictValidation,\n    options\n  } = _ref;\n  const optionsWithCustomerCalendar = useMemo(() => {\n    var _dhis2CalendarsMap, _options$calendar;\n    const calendar = getCustomCalendarIfExists((_dhis2CalendarsMap = dhis2CalendarsMap[(_options$calendar = options.calendar) !== null && _options$calendar !== void 0 ? _options$calendar : 'gregorian']) !== null && _dhis2CalendarsMap !== void 0 ? _dhis2CalendarsMap : options.calendar);\n    return {\n      ...options,\n      calendar\n    };\n  }, [options]);\n  const resolvedOptions = useResolvedLocaleOptions(optionsWithCustomerCalendar);\n  const prevDateStringRef = useRef(dateString);\n  const todayZdt = useMemo(() => getNowInCalendar(resolvedOptions.calendar, resolvedOptions.timeZone).startOfDay(), [resolvedOptions]);\n  const date = useMemo(() => extractAndValidateDateString(dateString, {\n    ...resolvedOptions,\n    minDateString: minDate,\n    maxDateString: maxDate,\n    strictValidation,\n    format\n  }), [minDate, maxDate, strictValidation, format, resolvedOptions, dateString]);\n  date.format = !date.format ? format : date.format;\n  const temporalCalendar = useMemo(() => Temporal.Calendar.from(resolvedOptions.calendar), [resolvedOptions.calendar]);\n  const temporalTimeZone = useMemo(() => Temporal.TimeZone.from(resolvedOptions.timeZone), [resolvedOptions.timeZone]);\n  const selectedDateZdt = dateString ? Temporal.Calendar.from(temporalCalendar).dateFromFields(date).toZonedDateTime({\n    timeZone: temporalTimeZone\n  }) : null;\n  const [firstZdtOfVisibleMonth, setFirstZdtOfVisibleMonth] = useState(() => {\n    const zdt = selectedDateZdt || todayZdt;\n    return zdt.with({\n      day: 1\n    });\n  });\n  const localeOptions = useMemo(() => ({\n    locale: resolvedOptions.locale,\n    calendar: temporalCalendar,\n    timeZone: temporalTimeZone,\n    weekDayFormat: resolvedOptions.weekDayFormat,\n    numberingSystem: resolvedOptions.numberingSystem\n  }), [resolvedOptions, temporalCalendar, temporalTimeZone]);\n  const weekDayLabels = useWeekDayLabels(localeOptions);\n  const navigation = useNavigation(firstZdtOfVisibleMonth.withCalendar(localeOptions.calendar), setFirstZdtOfVisibleMonth, localeOptions);\n  const selectDate = useCallback(zdt => {\n    onDateSelect({\n      calendarDateString: formatDate(zdt, undefined, date.format)\n    });\n  }, [onDateSelect, date.format]);\n  const calendarWeekDaysZdts = useCalendarWeekDays(firstZdtOfVisibleMonth);\n  useEffect(() => {\n    if (dateString === prevDateStringRef.current) {\n      return;\n    }\n    prevDateStringRef.current = dateString;\n    const zdt = Temporal.Calendar.from(temporalCalendar).dateFromFields(date).toZonedDateTime({\n      timeZone: temporalTimeZone\n    });\n    if ((firstZdtOfVisibleMonth.year !== zdt.year || firstZdtOfVisibleMonth.month !== zdt.month) && !calendarWeekDaysZdts.some(week => week.some(day => day.equals(zdt)))) {\n      setFirstZdtOfVisibleMonth(zdt.subtract({\n        days: zdt.day - 1\n      }));\n    }\n  }, [date, dateString, firstZdtOfVisibleMonth, calendarWeekDaysZdts, temporalCalendar, temporalTimeZone]);\n  const result = {\n    calendarWeekDays: calendarWeekDaysZdts.map(week => week.map(weekDayZdt => ({\n      dateValue: formatDate(weekDayZdt, undefined, format),\n      label: localisationHelpers.localiseWeekLabel(weekDayZdt.withCalendar(localeOptions.calendar), localeOptions),\n      onClick: () => selectDate(weekDayZdt),\n      isSelected: selectedDateZdt ? selectedDateZdt === null || selectedDateZdt === void 0 ? void 0 : selectedDateZdt.withCalendar('iso8601').equals(weekDayZdt.withCalendar('iso8601')) : false,\n      isToday: todayZdt && weekDayZdt.equals(todayZdt),\n      isInCurrentMonth: firstZdtOfVisibleMonth && weekDayZdt.month === firstZdtOfVisibleMonth.month\n    }))),\n    ...navigation,\n    weekDayLabels\n  };\n  return result;\n};","import { useMemo } from 'react';\nimport localisationHelpers from '../../utils/localisationHelpers';\n/**\n * internal hook used by useDatePicker to build the navigation of the calendar\n *\n * @param options\n * @returns\n */\nexport const useNavigation = (firstZdtOfVisibleMonth, setFirstZdtOfVisibleMonth, localeOptions) => {\n  return useMemo(() => {\n    const prevYear = firstZdtOfVisibleMonth.subtract({\n      years: 1\n    });\n    const nextYear = firstZdtOfVisibleMonth.add({\n      years: 1\n    });\n\n    // Setting the day to the 14th is guaranteed to get the next month correctly\n    // according to our defintion, which considers adding one month to be the equivalent\n    // of adding 1 to the current month, while Temporal does the arithmetic in iso8601\n    // then converts to the custom calendar, which could end up in the same month.\n    // (for example in Nepali where current date + 30 can end up in the same month for a month that has 32 days)\n    // todo: clarify the expected behaviour with the Temporal team\n    const prevMonth = firstZdtOfVisibleMonth.with({\n      day: 14\n    }).subtract({\n      months: 1\n    });\n    const nextMonth = firstZdtOfVisibleMonth.with({\n      day: 14\n    }).add({\n      months: 1\n    });\n    const options = {\n      locale: localeOptions.locale,\n      calendar: localeOptions.calendar,\n      numberingSystem: localeOptions.numberingSystem\n    };\n    const yearNumericFormat = {\n      ...options,\n      year: 'numeric'\n    };\n    const monthFormat = {\n      ...options,\n      month: 'long'\n    };\n    return {\n      prevYear: {\n        label: localisationHelpers.localiseYear(prevYear, localeOptions, yearNumericFormat),\n        navigateTo: () => setFirstZdtOfVisibleMonth(prevYear)\n      },\n      currYear: {\n        label: localisationHelpers.localiseYear(firstZdtOfVisibleMonth, localeOptions, yearNumericFormat)\n      },\n      nextYear: {\n        label: localisationHelpers.localiseYear(nextYear, localeOptions, yearNumericFormat),\n        navigateTo: () => setFirstZdtOfVisibleMonth(nextYear)\n      },\n      prevMonth: {\n        label: localisationHelpers.localiseMonth(prevMonth, localeOptions, monthFormat),\n        navigateTo: () => setFirstZdtOfVisibleMonth(prevMonth)\n      },\n      currMonth: {\n        label: localisationHelpers.localiseMonth(firstZdtOfVisibleMonth, localeOptions, monthFormat)\n      },\n      nextMonth: {\n        label: localisationHelpers.localiseMonth(nextMonth, localeOptions, monthFormat),\n        navigateTo: () => setFirstZdtOfVisibleMonth(nextMonth)\n      }\n    };\n  }, [firstZdtOfVisibleMonth, localeOptions, setFirstZdtOfVisibleMonth]);\n};","import { Temporal } from '@js-temporal/polyfill';\nimport { dhis2CalendarsMap } from '../constants/dhis2CalendarsMap';\nimport { extractDatePartsFromDateString } from './extract-date-parts-from-date-string';\nimport { getCustomCalendarIfExists } from './helpers';\n/**\n * converts from an iso8601 (gregorian) date to a specific calendar\n *\n * @param date string in the format yyyy-MM-dd\n * @param userCalendar the calendar to covert to\n * @returns an object representing the date\n *\n * NOTE: the returned object contains two properties year and eraYear\n * to be consistent with the default behaviour of Temporal. This only affects\n * ethiopic calendar in practice. When accessing year, consumers should be defensive\n * and do: `const yearToUse = result.eraYear ?? result.year` for example.\n *\n * @see https://github.com/tc39/ecma402/issues/534 for more details\n */\nexport const convertFromIso8601 = (date, userCalendar) => {\n  var _dhis2CalendarsMap$us;\n  const calendar = getCustomCalendarIfExists((_dhis2CalendarsMap$us = dhis2CalendarsMap[userCalendar]) !== null && _dhis2CalendarsMap$us !== void 0 ? _dhis2CalendarsMap$us : userCalendar);\n  const {\n    eraYear,\n    year,\n    month,\n    day\n  } = Temporal.PlainDate.from(date).withCalendar(calendar);\n  return {\n    eraYear,\n    year,\n    month,\n    day\n  };\n};\n\n/**\n * converts from a specific calendar (i.e. ethiopic or nepali) to iso8601 (gregorian)\n *\n * @param date calendar date in the format yyyy-MM-dd\n * @param userCalendar the calendar to convert from\n * @returns an object representing the iso8601 date\n */\nexport const convertToIso8601 = (date, userCalendar) => {\n  var _dhis2CalendarsMap$us2;\n  const calendar = getCustomCalendarIfExists((_dhis2CalendarsMap$us2 = dhis2CalendarsMap[userCalendar]) !== null && _dhis2CalendarsMap$us2 !== void 0 ? _dhis2CalendarsMap$us2 : userCalendar);\n  const dateParts = typeof date === 'string' ? extractDatePartsFromDateString(date) : date;\n\n  // this is a workaround for the ethiopic calendar being in a different\n  // era by default. There is a discussion on Temporal on which should be\n  // considered the default era. For us, we need to manually set it to era1\n  // https://github.com/js-temporal/temporal-polyfill/blob/8fd0dead40de7c31398f4d2d41e145466ca57a16/lib/calendar.ts#L2010\n  if (calendar === 'ethiopic') {\n    dateParts.eraYear = dateParts.year;\n    dateParts.era = 'era1';\n    delete dateParts.year;\n  }\n  dateParts.calendar = calendar;\n  const {\n    year,\n    month,\n    day\n  } = Temporal.PlainDate.from(dateParts).withCalendar('iso8601');\n  return {\n    year,\n    month,\n    day\n  };\n};","export const periodTypes = ['DAILY', 'WEEKLY', 'WEEKLYMON', 'WEEKLYTUE', 'WEEKLYWED', 'WEEKLYTHU', 'WEEKLYFRI', 'WEEKLYSAT', 'WEEKLYSUN', 'BIWEEKLY', 'MONTHLY', 'BIMONTHLY', 'QUARTERLY', 'QUARTERLYJAN', 'QUARTERLYFEB', 'QUARTERLYMAR', 'QUARTERLYAPR', 'QUARTERLYMAY', 'QUARTERLYJUN', 'QUARTERLYJUL', 'QUARTERLYAUG', 'QUARTERLYSEP', 'QUARTERLYOCT', 'QUARTERLYNOV', 'QUARTERLYDEC', 'SIXMONTHLY', 'SIXMONTHLYJAN', 'SIXMONTHLYFEB', 'SIXMONTHLYMAR', 'SIXMONTHLYAPR', 'SIXMONTHLYMAY', 'SIXMONTHLYJUN', 'SIXMONTHLYJUL', 'SIXMONTHLYAUG', 'SIXMONTHLYSEP', 'SIXMONTHLYOCT', 'SIXMONTHLYNOV', 'SIXMONTHLYDEC', 'YEARLY', 'FYJAN', 'FYFEB', 'FYMAR', 'FYAPR', 'FYMAY', 'FYJUN', 'FYJUL', 'FYAUG', 'FYSEP', 'FYOCT', 'FYNOV', 'FYDEC'];","import { periodTypes } from './period-types';\nexport const weeklyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/WEEKLY/));\nexport const monthlyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/MONTHLY|QUARTERLY|SIXMONTHLY/));\nexport const quarterlyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/QUARTERLY/));\nexport const sixmonthlyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/SIXMONTHLY/));\nexport const monthlyStandardFixedPeriodTypes = ['MONTHLY', 'BIMONTHLY', 'QUARTERLY', 'QUARTERLYJAN', 'SIXMONTHLY', 'SIXMONTHLYJAN'];\nexport const monthlyOffsetFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/(QUARTERLY|SIXMONTHLY)[A-Z]/));\nexport const multiMonthFixedPeriodTypes = monthlyFixedPeriodTypes.filter(periodType => periodType !== 'MONTHLY');\nexport const yearlyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/^(YEARLY|FY[A-Z]{3})/));\nexport const financialYearFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/^FY[A-Z]{3}$/));\nexport const januaryFixedPeriodTypes = [...monthlyStandardFixedPeriodTypes, ...periodTypes.filter(periodType => periodType.match(/JAN$/))];\nexport const februaryFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/FEB$/));\nexport const marchFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/MAR$/));\nexport const aprilFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/APR$/));\nexport const mayFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/MAY$/));\nexport const juneFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/JUN$/));\nexport const julyFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/JUL$/));\nexport const augustFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/AUG$/));\nexport const septemberFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/SEP$/));\nexport const octoberFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/OCT$/));\nexport const novemberFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/NOV$/));\nexport const decemberFixedPeriodTypes = periodTypes.filter(periodType => periodType.match(/DEC/));","import { formatDate, localisationHelpers } from '../../utils/index';\nconst {\n  localiseDateLabel\n} = localisationHelpers;\nconst buildDailyFixedPeriod = _ref => {\n  let {\n    date,\n    calendar,\n    locale\n  } = _ref;\n  const year = date.year;\n  const nextDayMonthLabel = String(date.month).padStart(2, '0');\n  const nextDayLabel = String(date.day).padStart(2, '0');\n  const value = `${year}${nextDayMonthLabel}${nextDayLabel}`;\n  const displayName = localiseDateLabel(date, {\n    calendar,\n    locale\n  }, {\n    dateStyle: 'long'\n  });\n  return {\n    periodType: 'DAILY',\n    id: value,\n    iso: value,\n    displayName,\n    name: formatDate(date),\n    startDate: formatDate(date),\n    endDate: formatDate(date)\n  };\n};\nexport default buildDailyFixedPeriod;","const monthNumbers = {\n  JAN: {\n    value: 1,\n    name: 'January'\n  },\n  FEB: {\n    value: 2,\n    name: 'February'\n  },\n  MAR: {\n    value: 3,\n    name: 'March'\n  },\n  APR: {\n    value: 4,\n    name: 'April'\n  },\n  MAY: {\n    value: 5,\n    name: 'May'\n  },\n  JUN: {\n    value: 6,\n    name: 'June'\n  },\n  JUL: {\n    value: 7,\n    name: 'July'\n  },\n  AUG: {\n    value: 8,\n    name: 'August'\n  },\n  SEP: {\n    value: 9,\n    name: 'September'\n  },\n  OCT: {\n    value: 10,\n    name: 'October'\n  },\n  NOV: {\n    value: 11,\n    name: 'November'\n  },\n  DEC: {\n    value: 12,\n    name: 'December'\n  }\n};\nexport default monthNumbers;","const yearlyMonthValueKeys = {\n  1: '',\n  2: 'Feb',\n  3: 'March',\n  // some keys are full month-names, some are short ... for some reason\n  4: 'April',\n  5: 'May',\n  6: 'Jun',\n  7: 'July',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nexport default yearlyMonthValueKeys;","import monthNumbers from '../month-numbers';\nimport { yearlyMonthValueKeys } from '../yearly-periods/index';\nconst FinancialYearlyMonths = Object.values(yearlyMonthValueKeys).slice(1).join('|');\nconst yearlyRegExp = new RegExp(`^[0-9]{4}(${FinancialYearlyMonths})?$`);\nexport const isAnyYearlyPeriodId = periodId => yearlyRegExp.test(periodId);\nconst monthNames = Object.values(monthNumbers).map(_ref => {\n  let {\n    name\n  } = _ref;\n  return name;\n}).join('|');\nconst monthlyRegExps = ['^[0-9]{6}$', '^[0-9]{6}B$', `^[0-9]{4}(${monthNames})?Q[0-9]$`, `^[0-9]{4}(${monthNames})?S[0-9]$`].join('|');\nconst monthlyRegExp = new RegExp(monthlyRegExps);\nexport const isAnyMonthlyPeriodId = periodId => monthlyRegExp.test(periodId);\nexport const isAnyWeeklyPeriodId = periodId => /^[0-9]{4}([A-Z][a-z]{2}|Bi)?W[0-9]+$/.test(periodId);\nexport const isDailyPeriodId = periodId => /^[0-9]{8}$/.test(periodId);","import { dhis2CalendarsMap } from '../../constants/dhis2CalendarsMap';\nimport { getCustomCalendarIfExists } from '../../utils/index';\nimport { weeklyFixedPeriodTypes, monthlyFixedPeriodTypes, yearlyFixedPeriodTypes } from '../period-type-groups';\nimport getAdjacentDailyFixedPeriods from './get-adjacent-daily-fixed-periods';\nimport getAdjacentMonthlyFixedPeriods from './get-adjacent-monthly-fixed-periods';\nimport getAdjacentWeeklyFixedPeriods from './get-adjacent-weekly-fixed-periods';\nimport getAdjacentYearlyFixedPeriods from './get-adjacent-yearly-fixed-periods';\nconst getAdjacentFixedPeriods = _ref => {\n  var _dhis2CalendarsMap$re;\n  let {\n    period,\n    calendar: requestedCalendar,\n    steps = 1,\n    locale = 'en'\n  } = _ref;\n  const calendar = getCustomCalendarIfExists((_dhis2CalendarsMap$re = dhis2CalendarsMap[requestedCalendar]) !== null && _dhis2CalendarsMap$re !== void 0 ? _dhis2CalendarsMap$re : requestedCalendar);\n  const {\n    periodType\n  } = period;\n  const payload = {\n    period,\n    calendar,\n    steps,\n    locale\n  };\n  if (steps === 0) {\n    throw new Error('Can not generate zero fixed periods, please choose either a negative or positive value for \"steps\"');\n  }\n  if (periodType === 'DAILY') {\n    return getAdjacentDailyFixedPeriods(payload);\n  }\n  if (weeklyFixedPeriodTypes.includes(periodType)) {\n    return getAdjacentWeeklyFixedPeriods(payload);\n  }\n  if (monthlyFixedPeriodTypes.includes(periodType)) {\n    return getAdjacentMonthlyFixedPeriods(payload);\n  }\n  if (yearlyFixedPeriodTypes.includes(periodType)) {\n    return getAdjacentYearlyFixedPeriods(payload);\n  }\n  throw new Error(`Can not generate following fixed period for unrecognised period type \"${periodType}\"`);\n};\nexport default getAdjacentFixedPeriods;","import _JSXStyle from \"styled-jsx/style\";\nimport { colors } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nexport const CalendarTableCell = _ref => {\n  let {\n    day,\n    cellSize,\n    selectedDate\n  } = _ref;\n  const dayHoverBackgroundColor = colors.grey200;\n  const selectedDayBackgroundColor = colors.teal700;\n  return /*#__PURE__*/React.createElement(\"td\", {\n    \"data-test\": day === null || day === void 0 ? void 0 : day.dateValue,\n    onClick: day.onClick,\n    className: _JSXStyle.dynamic([[\"2052411850\", [cellSize, cellSize, cellSize, cellSize, colors.grey900, dayHoverBackgroundColor, colors.grey300, selectedDayBackgroundColor, colors.teal600, colors.teal200, colors.grey600]]])\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"day\",\n    className: _JSXStyle.dynamic([[\"2052411850\", [cellSize, cellSize, cellSize, cellSize, colors.grey900, dayHoverBackgroundColor, colors.grey300, selectedDayBackgroundColor, colors.teal600, colors.teal200, colors.grey600]]]) + \" \" + (cx('day', {\n      isSelected: selectedDate === (day === null || day === void 0 ? void 0 : day.dateValue),\n      isToday: day.isToday,\n      otherMonth: !day.isInCurrentMonth\n    }) || \"\")\n  }, day.label), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2052411850\",\n    dynamic: [cellSize, cellSize, cellSize, cellSize, colors.grey900, dayHoverBackgroundColor, colors.grey300, selectedDayBackgroundColor, colors.teal600, colors.teal200, colors.grey600]\n  }, [`td.__jsx-style-dynamic-selector{width:${cellSize};height:100%;height:${cellSize};text-align:center;border:2px solid transparent;padding:0;}`, \"td.__jsx-style-dynamic-selector span.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;padding:2px 2px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border:2px solid transparent;min-width:16px;}\", `button.__jsx-style-dynamic-selector{border:0;overflow:hidden;width:${cellSize};height:${cellSize};border:2px solid transparent;border-radius:3px;background:none;color:${colors.grey900};}`, `button.__jsx-style-dynamic-selector:hover{background-color:${dayHoverBackgroundColor};-webkit-text-decoration:underline;text-decoration:underline;cursor:pointer;}`, `button.__jsx-style-dynamic-selector:active{background-color:${colors.grey300};}`, `button.isSelected.__jsx-style-dynamic-selector,button.otherMonth.isSelected.__jsx-style-dynamic-selector{background-color:${selectedDayBackgroundColor};color:white;}`, \"button.isToday.__jsx-style-dynamic-selector{position:relative;}\", `button.isToday.__jsx-style-dynamic-selector::after{content:'';position:absolute;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);height:4px;width:4px;bottom:2px;left:50%;border-radius:100%;background-color:${colors.teal600};}`, `button.isSelected.isToday.__jsx-style-dynamic-selector::after{background-color:${colors.teal200};}`, `button.otherMonth.__jsx-style-dynamic-selector{color:${colors.grey600};}`]));\n};\nCalendarTableCell.propTypes = {\n  cellSize: PropTypes.string,\n  day: PropTypes.shape({\n    dateValue: PropTypes.string,\n    isInCurrentMonth: PropTypes.bool,\n    isSelected: PropTypes.bool,\n    isToday: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onClick: PropTypes.func\n  }),\n  selectedDate: PropTypes.string\n};","import _JSXStyle from \"styled-jsx/style\";\nimport { colors } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nexport const CalendarTableDaysHeader = _ref => {\n  let {\n    weekDayLabels\n  } = _ref;\n  const dayNamesColor = colors.grey700;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"thead\", {\n    className: _JSXStyle.dynamic([[\"1577512909\", [dayNamesColor]]])\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: _JSXStyle.dynamic([[\"1577512909\", [dayNamesColor]]])\n  }, weekDayLabels.map((label, i) => /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    key: `weekday-${i}`,\n    className: _JSXStyle.dynamic([[\"1577512909\", [dayNamesColor]]])\n  }, label)))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1577512909\",\n    dynamic: [dayNamesColor]\n  }, [`th.__jsx-style-dynamic-selector{color:${dayNamesColor};font-weight:300;font-style:normal;padding:8px 8px;background:none;font-size:0.85em;border:none;cursor:default;}`, \"tr.__jsx-style-dynamic-selector{border:none;}\"]));\n};\nCalendarTableDaysHeader.propTypes = {\n  weekDayLabels: PropTypes.arrayOf(PropTypes.string)\n};","import _JSXStyle from \"styled-jsx/style\";\nimport { spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CalendarTableCell } from './calendar-table-cell.js';\nimport { CalendarTableDaysHeader } from './calendar-table-days-header.js';\nexport const CalendarTable = _ref => {\n  let {\n    weekDayLabels,\n    calendarWeekDays,\n    width,\n    cellSize,\n    selectedDate\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"452536960\", [spacers.dp4, spacers.dp4]]]) + \" \" + \"calendar-table-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: _JSXStyle.dynamic([[\"452536960\", [spacers.dp4, spacers.dp4]]]) + \" \" + \"calendar-table\"\n  }, /*#__PURE__*/React.createElement(CalendarTableDaysHeader, {\n    weekDayLabels: weekDayLabels\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: _JSXStyle.dynamic([[\"452536960\", [spacers.dp4, spacers.dp4]]])\n  }, calendarWeekDays.map((week, weekIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: `week-${weekIndex + 1}`,\n    className: _JSXStyle.dynamic([[\"452536960\", [spacers.dp4, spacers.dp4]]])\n  }, week.map(day => /*#__PURE__*/React.createElement(CalendarTableCell, {\n    selectedDate: selectedDate,\n    day: day,\n    key: day === null || day === void 0 ? void 0 : day.dateValue,\n    cellSize: cellSize,\n    width: width\n  })))))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"452536960\",\n    dynamic: [spacers.dp4, spacers.dp4]\n  }, [`.calendar-table.__jsx-style-dynamic-selector{border:none;border-collapse:collapse;width:100%;margin-block:${spacers.dp4};}`, \".calendar-table.__jsx-style-dynamic-selector tr.__jsx-style-dynamic-selector,.calendar-table.__jsx-style-dynamic-selector td.__jsx-style-dynamic-selector{border:none;}\", `.calendar-table-wrapper.__jsx-style-dynamic-selector{padding-inline:${spacers.dp4};}`]));\n};\nexport const CalendarTableProps = {\n  calendarWeekDays: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    calendarDate: PropTypes.string,\n    isInCurrentMonth: PropTypes.bool,\n    isSelected: PropTypes.bool,\n    isToday: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    zdt: PropTypes.object,\n    onClick: PropTypes.func\n  }).isRequired).isRequired).isRequired,\n  cellSize: PropTypes.string,\n  selectedDate: PropTypes.string,\n  weekDayLabels: PropTypes.arrayOf(PropTypes.string),\n  width: PropTypes.string\n};\nCalendarTable.propTypes = CalendarTableProps;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport enTranslations from './en/translations.json';\nconst namespace = 'default';\ni18n.addResources('en', namespace, enTranslations);\nexport default i18n;","import _JSXStyle from \"styled-jsx/style\";\nimport { colors, spacers } from '@dhis2/ui-constants';\nimport { IconChevronLeft16, IconChevronRight16 } from '@dhis2/ui-icons';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../locales/index.js';\nconst wrapperBorderColor = colors.grey300;\nconst headerBackground = colors.grey050;\nexport const NavigationContainer = _ref => {\n  var _currYear$label;\n  let {\n    languageDirection,\n    currMonth,\n    currYear,\n    nextMonth,\n    nextYear,\n    prevMonth,\n    prevYear\n  } = _ref;\n  const PreviousIcon = languageDirection === 'ltr' ? IconChevronLeft16 : IconChevronRight16;\n  const NextIcon = languageDirection === 'ltr' ? IconChevronRight16 : IconChevronLeft16;\n\n  // Ethiopic years - when localised to English - add the era (i.e. 2015 ERA1), which is redundant in practice (like writing AD for gregorian years)\n  // there is an ongoing discussion in JS-Temporal polyfill whether the era should be included or not, but for our case, it's safer to remove it\n  const currentYearLabel = (_currYear$label = currYear.label) === null || _currYear$label === void 0 ? void 0 : _currYear$label.toString().replace(/ERA1/, '');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"navigation-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"month\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"prev\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevMonth.navigateTo,\n    name: \"previous-month\",\n    \"data-test\": \"calendar-previous-month\",\n    \"aria-label\": `${i18n.t(`Go to ${prevMonth.label}`)}`,\n    type: \"button\",\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }, /*#__PURE__*/React.createElement(PreviousIcon, {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"curr\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"label\"\n  }, currMonth.label)), /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"next\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextMonth.navigateTo,\n    \"data-test\": \"calendar-next-month\",\n    name: \"next-month\",\n    \"aria-label\": `${i18n.t(`Go to ${nextMonth.label}`)}`,\n    type: \"button\",\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }, /*#__PURE__*/React.createElement(NextIcon, {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"year\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"prev\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevYear.navigateTo,\n    name: \"previous-year\",\n    \"aria-label\": `${i18n.t('Go to previous year')}`,\n    type: \"button\",\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }, /*#__PURE__*/React.createElement(PreviousIcon, {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"curr\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test\": \"calendar-current-year\",\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"label\"\n  }, currentYearLabel)), /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]]) + \" \" + \"next\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextYear.navigateTo,\n    name: \"next-year\",\n    \"aria-label\": `${i18n.t('Go to next year')}`,\n    type: \"button\",\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }, /*#__PURE__*/React.createElement(NextIcon, {\n    className: _JSXStyle.dynamic([[\"1327991300\", [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]]])\n  }))))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1327991300\",\n    dynamic: [spacers.dp4, wrapperBorderColor, headerBackground, spacers.dp4, colors.grey600, colors.grey200, colors.grey900, colors.grey300, spacers.dp4, spacers.dp8]\n  }, [`.navigation-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:${spacers.dp4};border-bottom:1px solid ${wrapperBorderColor};background-color:${headerBackground};font-size:1.08em;}`, \".month.__jsx-style-dynamic-selector,.year.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:50%;}\", \".prev.__jsx-style-dynamic-selector,.next.__jsx-style-dynamic-selector,.curr.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".prev.__jsx-style-dynamic-selector,.next.__jsx-style-dynamic-selector{width:24px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}\", \".curr.__jsx-style-dynamic-selector{-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;overflow:hidden;}\", `button.__jsx-style-dynamic-selector{background:none;border:0;padding:${spacers.dp4};height:24px;width:24px;color:${colors.grey600};border-radius:3px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}`, `button.__jsx-style-dynamic-selector:hover{background-color:${colors.grey200};color:${colors.grey900};cursor:pointer;}`, `button.__jsx-style-dynamic-selector:active{background-color:${colors.grey300};}`, `.label.__jsx-style-dynamic-selector{padding:${spacers.dp4} ${spacers.dp8};white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center;max-width:100%;}`]));\n};\nexport const NavigationContainerProps = {\n  currMonth: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  currYear: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  languageDirection: PropTypes.oneOf(['ltr', 'rtl']),\n  nextMonth: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    navigateTo: PropTypes.func\n  }),\n  nextYear: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    navigateTo: PropTypes.func\n  }),\n  prevMonth: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    navigateTo: PropTypes.func\n  }),\n  prevYear: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    navigateTo: PropTypes.func\n  })\n};\nNavigationContainer.propTypes = NavigationContainerProps;","import _JSXStyle from \"styled-jsx/style\";\nimport { colors } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { CalendarTable, CalendarTableProps } from './calendar-table.js';\nimport { NavigationContainer, NavigationContainerProps } from './navigation-container.js';\nconst wrapperBorderColor = colors.grey300;\nconst backgroundColor = 'none';\nexport const CalendarContainer = /*#__PURE__*/React.memo(function CalendarContainer(_ref) {\n  let {\n    date,\n    width = '240px',\n    cellSize = '32px',\n    calendarWeekDays,\n    weekDayLabels,\n    currMonth,\n    currYear,\n    nextMonth,\n    nextYear,\n    prevMonth,\n    prevYear,\n    languageDirection,\n    calendarRef\n  } = _ref;\n  const navigationProps = useMemo(() => {\n    return {\n      currMonth,\n      currYear,\n      nextMonth,\n      nextYear,\n      prevMonth,\n      prevYear,\n      languageDirection\n    };\n  }, [currMonth, currYear, languageDirection, nextMonth, nextYear, prevMonth, prevYear]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"2823859047\", [backgroundColor, wrapperBorderColor, width]]])\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dir: languageDirection,\n    \"data-test\": \"calendar\",\n    className: _JSXStyle.dynamic([[\"2823859047\", [backgroundColor, wrapperBorderColor, width]]]) + \" \" + \"calendar-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: calendarRef,\n    className: _JSXStyle.dynamic([[\"2823859047\", [backgroundColor, wrapperBorderColor, width]]])\n  }, /*#__PURE__*/React.createElement(NavigationContainer, navigationProps), /*#__PURE__*/React.createElement(CalendarTable, {\n    selectedDate: date,\n    calendarWeekDays: calendarWeekDays,\n    weekDayLabels: weekDayLabels,\n    cellSize: cellSize,\n    width: width\n  }))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2823859047\",\n    dynamic: [backgroundColor, wrapperBorderColor, width]\n  }, [`.calendar-wrapper.__jsx-style-dynamic-selector{font-family:Roboto,sans-serif;font-weight:400;font-size:14px;background-color:${backgroundColor};display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid ${wrapperBorderColor};border-radius:3px;min-width:${width};width:-webkit-max-content;width:-moz-max-content;width:max-content;box-shadow:0px 4px 6px -2px #2129340d;box-shadow:0px 10px 15px -3px #2129341a;}`]));\n});\nCalendarContainer.propTypes = {\n  /** the currently selected date using an iso-like format YYYY-MM-DD, in the calendar system provided (not iso8601) */\n  date: PropTypes.string,\n  ...CalendarTableProps,\n  ...NavigationContainerProps\n};","import _JSXStyle from \"styled-jsx/style\";\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport { useDatePicker, useResolvedDirection, validateDateString } from '@dhis2/multi-calendar-dates';\nimport { Button } from '@dhis2-ui/button';\nimport { Card } from '@dhis2-ui/card';\nimport { InputField } from '@dhis2-ui/input';\nimport { Layer } from '@dhis2-ui/layer';\nimport { Popper } from '@dhis2-ui/popper';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState, useMemo, useEffect } from 'react';\nimport { CalendarContainer } from '../calendar/calendar-container.js';\nimport i18n from '../locales/index.js';\nconst offsetModifier = {\n  name: 'offset',\n  options: {\n    offset: [0, 2]\n  }\n};\nexport const CalendarInput = function () {\n  let {\n    onDateSelect: parentOnDateSelect,\n    calendar,\n    date,\n    dir,\n    locale,\n    numberingSystem,\n    weekDayFormat = 'narrow',\n    width = '300px',\n    cellSize = '32px',\n    clearable,\n    minDate,\n    maxDate,\n    format,\n    strictValidation,\n    inputWidth,\n    dataTest = 'dhis2-uiwidgets-calendar-inputfield',\n    ...rest\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const ref = useRef();\n  const calendarRef = useRef();\n  const [open, setOpen] = useState(false);\n  const [partialDate, setPartialDate] = useState(date);\n  useEffect(() => setPartialDate(date), [date]);\n  const useDatePickerOptions = useMemo(() => ({\n    calendar,\n    locale,\n    numberingSystem,\n    weekDayFormat\n  }), [calendar, locale, numberingSystem, weekDayFormat]);\n  const onChooseDate = (date, validationOptions) => {\n    if (!date) {\n      parentOnDateSelect === null || parentOnDateSelect === void 0 ? void 0 : parentOnDateSelect({\n        calendarDateString: null,\n        validation: {\n          valid: true\n        }\n      });\n      return;\n    }\n    const validation = validateDateString(date, validationOptions);\n    parentOnDateSelect === null || parentOnDateSelect === void 0 ? void 0 : parentOnDateSelect({\n      calendarDateString: date,\n      validation\n    });\n  };\n  const validationOptions = useMemo(() => ({\n    calendar,\n    format,\n    minDateString: minDate,\n    maxDateString: maxDate,\n    strictValidation\n  }), [calendar, format, maxDate, minDate, strictValidation]);\n  const pickerResults = useDatePicker({\n    onDateSelect: result => {\n      onChooseDate(result.calendarDateString, validationOptions);\n      setOpen(false);\n    },\n    date,\n    ...validationOptions,\n    options: useDatePickerOptions\n  });\n  const handleChange = e => {\n    setOpen(false);\n    setPartialDate(e.value);\n  };\n  const handleBlur = (_, e) => {\n    var _calendarRef$current;\n    if (e.relatedTarget && (_calendarRef$current = calendarRef.current) !== null && _calendarRef$current !== void 0 && _calendarRef$current.contains(e.relatedTarget)) {\n      return;\n    }\n    onChooseDate(partialDate, validationOptions);\n    setOpen(false);\n  };\n  const onFocus = () => {\n    var _rest$onFocus;\n    setOpen(true);\n    rest === null || rest === void 0 ? void 0 : (_rest$onFocus = rest.onFocus) === null || _rest$onFocus === void 0 ? void 0 : _rest$onFocus.call(rest);\n  };\n  const languageDirection = useResolvedDirection(dir, locale);\n  const calendarProps = useMemo(() => ({\n    date,\n    width,\n    cellSize,\n    isValid: pickerResults.isValid,\n    calendarWeekDays: pickerResults.calendarWeekDays,\n    weekDayLabels: pickerResults.weekDayLabels,\n    currMonth: pickerResults.currMonth,\n    currYear: pickerResults.currYear,\n    nextMonth: pickerResults.nextMonth,\n    nextYear: pickerResults.nextYear,\n    prevMonth: pickerResults.prevMonth,\n    prevYear: pickerResults.prevYear,\n    languageDirection\n  }), [cellSize, date, pickerResults, width, languageDirection]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: _JSXStyle.dynamic([[\"423137534\", [inputWidth, rest.error || rest.warning ? '36px' : '6px']]]) + \" \" + \"calendar-input-wrapper\"\n  }, /*#__PURE__*/React.createElement(InputField, _extends({\n    label: i18n.t('Pick a date')\n  }, rest, {\n    dataTest: dataTest,\n    type: \"text\",\n    onFocus: onFocus,\n    value: partialDate,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    inputWidth: inputWidth\n  })), clearable && /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"423137534\", [inputWidth, rest.error || rest.warning ? '36px' : '6px']]]) + \" \" + (cx('calendar-clear-button', {\n      'with-icon': rest.valid || rest.error || rest.warning || rest.loading,\n      'with-dense-wrapper': rest.dense\n    }) || \"\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: \"calendar-clear-button\",\n    secondary: true,\n    small: true,\n    onClick: () => onChooseDate(null),\n    type: \"button\"\n  }, i18n.t('Clear')))), open && /*#__PURE__*/React.createElement(Layer, {\n    onBackdropClick: () => setOpen(false)\n  }, /*#__PURE__*/React.createElement(Popper, {\n    reference: ref,\n    placement: \"bottom-start\",\n    modifiers: [offsetModifier]\n  }, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CalendarContainer, _extends({}, calendarProps, {\n    calendarRef: calendarRef\n  }))))), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"423137534\",\n    dynamic: [inputWidth, rest.error || rest.warning ? '36px' : '6px']\n  }, [`.calendar-input-wrapper.__jsx-style-dynamic-selector{position:relative;width:${inputWidth};}`, `.calendar-clear-button.__jsx-style-dynamic-selector{position:absolute;inset-inline-end:${rest.error || rest.warning ? '36px' : '6px'};-webkit-inset-block-start:27px;-ms-intb-rlock-start:27px;inset-block-start:27px;}`, \".calendar-clear-button.with-icon.__jsx-style-dynamic-selector{inset-inline-end:36px;}\", \".calendar-clear-button.with-dense-wrapper.__jsx-style-dynamic-selector{-webkit-inset-block-start:23px;-ms-intb-rlock-start:23px;inset-block-start:23px;}\"]));\n};\nCalendarInput.propTypes = {\n  /** the calendar to use such gregory, ethiopic, nepali - full supported list here: https://github.com/dhis2/multi-calendar-dates/blob/main/src/constants/calendars.ts  */\n  calendar: PropTypes.any.isRequired,\n  /** Called with signature `(null)` \\|\\| `({ dateCalendarString: string, validation: { error: boolean, warning: boolean, validationText: string} })` with `dateCalendarString` being the stringified date in the specified calendar in the format `yyyy-MM-dd` */\n  onDateSelect: PropTypes.func.isRequired,\n  /** the size of a single cell in the table forming the calendar */\n  cellSize: PropTypes.string,\n  /** Whether the clear button is displayed */\n  clearable: PropTypes.bool,\n  /** 'data-test' attribute of `InputField` component */\n  dataTest: PropTypes.string,\n  /** the currently selected date using an iso-like format YYYY-MM-DD, in the calendar system provided (not iso8601) */\n  date: PropTypes.string,\n  /** the direction of the library - internally the library will use rtl for rtl-languages but this can be overridden here for more control */\n  dir: PropTypes.oneOf(['ltr', 'rtl']),\n  /** The date format to use either `YYYY-MM-DD` or `DD-MM-YYYY` */\n  format: PropTypes.oneOf(['YYYY-MM-DD', 'DD-MM-YYYY']),\n  /** the width of input field */\n  inputWidth: PropTypes.string,\n  /** any valid locale -  if none provided, the internal library will fallback to the user locale (more info here: https://github.com/dhis2/multi-calendar-dates/blob/main/src/hooks/internal/useResolvedLocaleOptions.ts#L15) */\n  locale: PropTypes.string,\n  /** The maximum selectable date */\n  maxDate: PropTypes.string,\n  /** The minimum selectable date */\n  minDate: PropTypes.string,\n  /** numbering system to use - full list here https://github.com/dhis2/multi-calendar-dates/blob/main/src/constants/numberingSystems.ts */\n  numberingSystem: PropTypes.string,\n  /** Whether to use strict validation by showing errors for out-of-range dates when enabled (default), and warnings when disabled */\n  strictValidation: PropTypes.bool,\n  /** the format to display for the week day, i.e. Monday (long), Mon (short), M (narrow) */\n  weekDayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n  /** the width of the calendar component */\n  width: PropTypes.string\n};","// Copyright 2018 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the “License”);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// <https://apache.org/licenses/LICENSE-2.0>.\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an “AS IS” BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass JSBI extends Array {\n    constructor(length, sign) {\n        super(length);\n        this.sign = sign;\n        // Explicitly set the prototype as per\n        // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, JSBI.prototype);\n        if (length > JSBI.__kMaxLength) {\n            throw new RangeError('Maximum BigInt size exceeded');\n        }\n    }\n    static BigInt(arg) {\n        if (typeof arg === 'number') {\n            if (arg === 0)\n                return JSBI.__zero();\n            if (JSBI.__isOneDigitInt(arg)) {\n                if (arg < 0) {\n                    return JSBI.__oneDigit(-arg, true);\n                }\n                return JSBI.__oneDigit(arg, false);\n            }\n            if (!Number.isFinite(arg) || Math.floor(arg) !== arg) {\n                throw new RangeError('The number ' + arg + ' cannot be converted to ' +\n                    'BigInt because it is not an integer');\n            }\n            return JSBI.__fromDouble(arg);\n        }\n        else if (typeof arg === 'string') {\n            const result = JSBI.__fromString(arg);\n            if (result === null) {\n                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');\n            }\n            return result;\n        }\n        else if (typeof arg === 'boolean') {\n            if (arg === true) {\n                return JSBI.__oneDigit(1, false);\n            }\n            return JSBI.__zero();\n        }\n        else if (typeof arg === 'object') {\n            if (arg.constructor === JSBI)\n                return arg;\n            const primitive = JSBI.__toPrimitive(arg);\n            return JSBI.BigInt(primitive);\n        }\n        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');\n    }\n    toDebugString() {\n        const result = ['BigInt['];\n        for (const digit of this) {\n            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');\n        }\n        result.push(']');\n        return result.join('');\n    }\n    toString(radix = 10) {\n        if (radix < 2 || radix > 36) {\n            throw new RangeError('toString() radix argument must be between 2 and 36');\n        }\n        if (this.length === 0)\n            return '0';\n        if ((radix & (radix - 1)) === 0) {\n            return JSBI.__toStringBasePowerOfTwo(this, radix);\n        }\n        return JSBI.__toStringGeneric(this, radix, false);\n    }\n    valueOf() {\n        throw new Error('Convert JSBI instances to native numbers using `toNumber`.');\n    }\n    // Equivalent of \"Number(my_bigint)\" in the native implementation.\n    // TODO: add more tests\n    static toNumber(x) {\n        const xLength = x.length;\n        if (xLength === 0)\n            return 0;\n        if (xLength === 1) {\n            const value = x.__unsignedDigit(0);\n            return x.sign ? -value : value;\n        }\n        const xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        if (xBitLength > 1024)\n            return x.sign ? -Infinity : Infinity;\n        let exponent = xBitLength - 1;\n        let currentDigit = xMsd;\n        let digitIndex = xLength - 1;\n        const shift = msdLeadingZeros + 3;\n        let mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;\n        mantissaHigh >>>= 12;\n        const mantissaHighBitsUnset = shift - 12;\n        let mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));\n        let mantissaLowBitsUnset = 20 + shift;\n        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            mantissaHigh |= (currentDigit >>> (30 - mantissaHighBitsUnset));\n            mantissaLow = currentDigit << mantissaHighBitsUnset + 2;\n            mantissaLowBitsUnset = mantissaHighBitsUnset + 2;\n        }\n        while (mantissaLowBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            if (mantissaLowBitsUnset >= 30) {\n                mantissaLow |= (currentDigit << (mantissaLowBitsUnset - 30));\n            }\n            else {\n                mantissaLow |= (currentDigit >>> (30 - mantissaLowBitsUnset));\n            }\n            mantissaLowBitsUnset -= 30;\n        }\n        const rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);\n        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {\n            mantissaLow = (mantissaLow + 1) >>> 0;\n            if (mantissaLow === 0) {\n                // Incrementing mantissaLow overflowed.\n                mantissaHigh++;\n                if ((mantissaHigh >>> 20) !== 0) {\n                    // Incrementing mantissaHigh overflowed.\n                    mantissaHigh = 0;\n                    exponent++;\n                    if (exponent > 1023) {\n                        // Incrementing the exponent overflowed.\n                        return x.sign ? -Infinity : Infinity;\n                    }\n                }\n            }\n        }\n        const signBit = x.sign ? (1 << 31) : 0;\n        exponent = (exponent + 0x3FF) << 20;\n        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;\n        JSBI.__kBitConversionInts[0] = mantissaLow;\n        return JSBI.__kBitConversionDouble[0];\n    }\n    // Operations.\n    static unaryMinus(x) {\n        if (x.length === 0)\n            return x;\n        const result = x.__copy();\n        result.sign = !x.sign;\n        return result;\n    }\n    static bitwiseNot(x) {\n        if (x.sign) {\n            // ~(-x) == ~(~(x-1)) == x-1\n            return JSBI.__absoluteSubOne(x).__trim();\n        }\n        // ~x == -x-1 == -(x+1)\n        return JSBI.__absoluteAddOne(x, true);\n    }\n    static exponentiate(x, y) {\n        if (y.sign) {\n            throw new RangeError('Exponent must be positive');\n        }\n        if (y.length === 0) {\n            return JSBI.__oneDigit(1, false);\n        }\n        if (x.length === 0)\n            return x;\n        if (x.length === 1 && x.__digit(0) === 1) {\n            // (-1) ** even_number == 1.\n            if (x.sign && (y.__digit(0) & 1) === 0) {\n                return JSBI.unaryMinus(x);\n            }\n            // (-1) ** odd_number == -1, 1 ** anything == 1.\n            return x;\n        }\n        // For all bases >= 2, very large exponents would lead to unrepresentable\n        // results.\n        if (y.length > 1)\n            throw new RangeError('BigInt too big');\n        let expValue = y.__unsignedDigit(0);\n        if (expValue === 1)\n            return x;\n        if (expValue >= JSBI.__kMaxLengthBits) {\n            throw new RangeError('BigInt too big');\n        }\n        if (x.length === 1 && x.__digit(0) === 2) {\n            // Fast path for 2^n.\n            const neededDigits = 1 + ((expValue / 30) | 0);\n            const sign = x.sign && ((expValue & 1) !== 0);\n            const result = new JSBI(neededDigits, sign);\n            result.__initializeDigits();\n            // All bits are zero. Now set the n-th bit.\n            const msd = 1 << (expValue % 30);\n            result.__setDigit(neededDigits - 1, msd);\n            return result;\n        }\n        let result = null;\n        let runningSquare = x;\n        // This implicitly sets the result's sign correctly.\n        if ((expValue & 1) !== 0)\n            result = x;\n        expValue >>= 1;\n        for (; expValue !== 0; expValue >>= 1) {\n            runningSquare = JSBI.multiply(runningSquare, runningSquare);\n            if ((expValue & 1) !== 0) {\n                if (result === null) {\n                    result = runningSquare;\n                }\n                else {\n                    result = JSBI.multiply(result, runningSquare);\n                }\n            }\n        }\n        // TODO see if there's a way for tsc to infer this will always happen?\n        return result;\n    }\n    static multiply(x, y) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return y;\n        let resultLength = x.length + y.length;\n        if (x.__clzmsd() + y.__clzmsd() >= 30) {\n            resultLength--;\n        }\n        const result = new JSBI(resultLength, x.sign !== y.sign);\n        result.__initializeDigits();\n        for (let i = 0; i < x.length; i++) {\n            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);\n        }\n        return result.__trim();\n    }\n    static divide(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return JSBI.__zero();\n        const resultSign = x.sign !== y.sign;\n        const divisor = y.__unsignedDigit(0);\n        let quotient;\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1) {\n                return resultSign === x.sign ? x : JSBI.unaryMinus(x);\n            }\n            quotient = JSBI.__absoluteDivSmall(x, divisor, null);\n        }\n        else {\n            quotient = JSBI.__absoluteDivLarge(x, y, true, false);\n        }\n        quotient.sign = resultSign;\n        return quotient.__trim();\n    }\n    static remainder(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return x;\n        const divisor = y.__unsignedDigit(0);\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1)\n                return JSBI.__zero();\n            const remainderDigit = JSBI.__absoluteModSmall(x, divisor);\n            if (remainderDigit === 0)\n                return JSBI.__zero();\n            return JSBI.__oneDigit(remainderDigit, x.sign);\n        }\n        const remainder = JSBI.__absoluteDivLarge(x, y, false, true);\n        remainder.sign = x.sign;\n        return remainder.__trim();\n    }\n    static add(x, y) {\n        const sign = x.sign;\n        if (sign === y.sign) {\n            // x + y == x + y\n            // -x + -y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x + -y == x - y == -(y - x)\n        // -x + y == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static subtract(x, y) {\n        const sign = x.sign;\n        if (sign !== y.sign) {\n            // x - (-y) == x + y\n            // (-x) - y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static leftShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__rightShiftByAbsolute(x, y);\n        return JSBI.__leftShiftByAbsolute(x, y);\n    }\n    static signedRightShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__leftShiftByAbsolute(x, y);\n        return JSBI.__rightShiftByAbsolute(x, y);\n    }\n    static unsignedRightShift() {\n        throw new TypeError('BigInts have no unsigned right shift; use >> instead');\n    }\n    static lessThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) < 0;\n    }\n    static lessThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) <= 0;\n    }\n    static greaterThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) > 0;\n    }\n    static greaterThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) >= 0;\n    }\n    static equal(x, y) {\n        if (x.sign !== y.sign)\n            return false;\n        if (x.length !== y.length)\n            return false;\n        for (let i = 0; i < x.length; i++) {\n            if (x.__digit(i) !== y.__digit(i))\n                return false;\n        }\n        return true;\n    }\n    static notEqual(x, y) {\n        return !JSBI.equal(x, y);\n    }\n    static bitwiseAnd(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteAnd(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            const resultLength = Math.max(x.length, y.length) + 1;\n            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))\n            // == -(((x-1) | (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteOr(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x & (-y) == x & ~(y-1) == x &~ (y-1)\n        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();\n    }\n    static bitwiseXor(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteXor(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)\n            const resultLength = Math.max(x.length, y.length);\n            const result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            return JSBI.__absoluteXor(result, y1, result).__trim();\n        }\n        const resultLength = Math.max(x.length, y.length) + 1;\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteXor(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static bitwiseOr(x, y) {\n        const resultLength = Math.max(x.length, y.length);\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteOr(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))\n            // == -(((x-1) & (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteAnd(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteAndNot(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static asIntN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} has less than {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const topDigit = x.__unsignedDigit(neededLength - 1);\n        const compareDigit = 1 << ((n - 1) % 30);\n        if (x.length === neededLength && topDigit < compareDigit)\n            return x;\n        // Otherwise truncate and simulate two's complement.\n        const hasBit = (topDigit & compareDigit) === compareDigit;\n        if (!hasBit)\n            return JSBI.__truncateToNBits(n, x);\n        if (!x.sign)\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);\n        if ((topDigit & (compareDigit - 1)) === 0) {\n            for (let i = neededLength - 2; i >= 0; i--) {\n                if (x.__digit(i) !== 0) {\n                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n                }\n            }\n            if (x.length === neededLength && topDigit === compareDigit)\n                return x;\n            return JSBI.__truncateToNBits(n, x);\n        }\n        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n    }\n    static asUintN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} is negative, simulate two's complement representation.\n        if (x.sign) {\n            if (n > JSBI.__kMaxLengthBits) {\n                throw new RangeError('BigInt too big');\n            }\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n        }\n        // If {x} is positive and has up to {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const bitsInTopDigit = n % 30;\n        if (x.length == neededLength) {\n            if (bitsInTopDigit === 0)\n                return x;\n            const topDigit = x.__digit(neededLength - 1);\n            if ((topDigit >>> bitsInTopDigit) === 0)\n                return x;\n        }\n        // Otherwise, truncate.\n        return JSBI.__truncateToNBits(n, x);\n    }\n    // Operators.\n    static ADD(x, y) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string') {\n            if (typeof y !== 'string')\n                y = y.toString();\n            return x + y;\n        }\n        if (typeof y === 'string') {\n            return x.toString() + y;\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {\n            return JSBI.add(x, y);\n        }\n        if (typeof x === 'number' && typeof y === 'number') {\n            return x + y;\n        }\n        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');\n    }\n    static LT(x, y) {\n        return JSBI.__compare(x, y, 0);\n    }\n    static LE(x, y) {\n        return JSBI.__compare(x, y, 1);\n    }\n    static GT(x, y) {\n        return JSBI.__compare(x, y, 2);\n    }\n    static GE(x, y) {\n        return JSBI.__compare(x, y, 3);\n    }\n    static EQ(x, y) {\n        while (true) {\n            if (JSBI.__isBigInt(x)) {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.equal(x, y);\n                return JSBI.EQ(y, x);\n            }\n            else if (typeof x === 'number') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'string') {\n                if (JSBI.__isBigInt(y)) {\n                    x = JSBI.__fromString(x);\n                    if (x === null)\n                        return false;\n                    return JSBI.equal(x, y);\n                }\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'boolean') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, +x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'symbol') {\n                if (JSBI.__isBigInt(y))\n                    return false;\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'object') {\n                if (typeof y === 'object' && y.constructor !== JSBI)\n                    return x == y;\n                x = JSBI.__toPrimitive(x);\n            }\n            else {\n                return x == y;\n            }\n        }\n    }\n    static NE(x, y) {\n        return !JSBI.EQ(x, y);\n    }\n    // DataView-related functionality.\n    static DataViewGetBigInt64(dataview, byteOffset, littleEndian = false) {\n        return JSBI.asIntN(64, JSBI.DataViewGetBigUint64(dataview, byteOffset, littleEndian));\n    }\n    static DataViewGetBigUint64(dataview, byteOffset, littleEndian = false) {\n        const [h, l] = littleEndian ? [4, 0] : [0, 4];\n        const high = dataview.getUint32(byteOffset + h, littleEndian);\n        const low = dataview.getUint32(byteOffset + l, littleEndian);\n        const result = new JSBI(3, false);\n        result.__setDigit(0, low & 0x3FFFFFFF);\n        result.__setDigit(1, ((high & 0xFFFFFFF) << 2) | (low >>> 30));\n        result.__setDigit(2, high >>> 28);\n        return result.__trim();\n    }\n    static DataViewSetBigInt64(dataview, byteOffset, value, littleEndian = false) {\n        JSBI.DataViewSetBigUint64(dataview, byteOffset, value, littleEndian);\n    }\n    static DataViewSetBigUint64(dataview, byteOffset, value, littleEndian = false) {\n        value = JSBI.asUintN(64, value);\n        let high = 0;\n        let low = 0;\n        if (value.length > 0) {\n            low = value.__digit(0);\n            if (value.length > 1) {\n                const d1 = value.__digit(1);\n                low = low | d1 << 30;\n                high = d1 >>> 2;\n                if (value.length > 2) {\n                    high = high | (value.__digit(2) << 28);\n                }\n            }\n        }\n        const [h, l] = littleEndian ? [4, 0] : [0, 4];\n        dataview.setUint32(byteOffset + h, high, littleEndian);\n        dataview.setUint32(byteOffset + l, low, littleEndian);\n    }\n    // Helpers.\n    static __zero() {\n        return new JSBI(0, false);\n    }\n    static __oneDigit(value, sign) {\n        const result = new JSBI(1, sign);\n        result.__setDigit(0, value);\n        return result;\n    }\n    __copy() {\n        const result = new JSBI(this.length, this.sign);\n        for (let i = 0; i < this.length; i++) {\n            result[i] = this[i];\n        }\n        return result;\n    }\n    __trim() {\n        let newLength = this.length;\n        let last = this[newLength - 1];\n        while (last === 0) {\n            newLength--;\n            last = this[newLength - 1];\n            this.pop();\n        }\n        if (newLength === 0)\n            this.sign = false;\n        return this;\n    }\n    __initializeDigits() {\n        for (let i = 0; i < this.length; i++) {\n            this[i] = 0;\n        }\n    }\n    static __decideRounding(x, mantissaBitsUnset, digitIndex, currentDigit) {\n        if (mantissaBitsUnset > 0)\n            return -1;\n        let topUnconsumedBit;\n        if (mantissaBitsUnset < 0) {\n            topUnconsumedBit = -mantissaBitsUnset - 1;\n        }\n        else {\n            // {currentDigit} fit the mantissa exactly; look at the next digit.\n            if (digitIndex === 0)\n                return -1;\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            topUnconsumedBit = 29;\n        }\n        // If the most significant remaining bit is 0, round down.\n        let mask = 1 << topUnconsumedBit;\n        if ((currentDigit & mask) === 0)\n            return -1;\n        // If any other remaining bit is set, round up.\n        mask -= 1;\n        if ((currentDigit & mask) !== 0)\n            return 1;\n        while (digitIndex > 0) {\n            digitIndex--;\n            if (x.__digit(digitIndex) !== 0)\n                return 1;\n        }\n        return 0;\n    }\n    static __fromDouble(value) {\n        const sign = value < 0;\n        JSBI.__kBitConversionDouble[0] = value;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        const exponent = rawExponent - 0x3FF;\n        const digits = ((exponent / 30) | 0) + 1;\n        const result = new JSBI(digits, sign);\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        // 0-indexed position of most significant bit in most significant digit.\n        const msdTopBit = exponent % 30;\n        // Number of unused bits in the mantissa. We'll keep them shifted to the\n        // left (i.e. most significant part).\n        let remainingMantissaBits = 0;\n        // Next digit under construction.\n        let digit;\n        // First, build the MSD by shifting the mantissa appropriately.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            digit = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            digit = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        result.__setDigit(digits - 1, digit);\n        // Then fill in the rest of the digits.\n        for (let digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                digit = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                digit = 0;\n            }\n            result.__setDigit(digitIndex, digit);\n        }\n        return result.__trim();\n    }\n    static __isWhitespace(c) {\n        if (c <= 0x0D && c >= 0x09)\n            return true;\n        if (c <= 0x9F)\n            return c === 0x20;\n        if (c <= 0x01FFFF) {\n            return c === 0xA0 || c === 0x1680;\n        }\n        if (c <= 0x02FFFF) {\n            c &= 0x01FFFF;\n            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||\n                c === 0x5F || c === 0x1000;\n        }\n        return c === 0xFEFF;\n    }\n    static __fromString(string, radix = 0) {\n        let sign = 0;\n        let leadingZero = false;\n        const length = string.length;\n        let cursor = 0;\n        if (cursor === length)\n            return JSBI.__zero();\n        let current = string.charCodeAt(cursor);\n        // Skip whitespace.\n        while (JSBI.__isWhitespace(current)) {\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Detect radix.\n        if (current === 0x2B) { // '+'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = 1;\n        }\n        else if (current === 0x2D) { // '-'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = -1;\n        }\n        if (radix === 0) {\n            radix = 10;\n            if (current === 0x30) { // '0'\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    radix = 16;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'\n                    radix = 8;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'\n                    radix = 2;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        else if (radix === 16) {\n            if (current === 0x30) { // '0'\n                // Allow \"0x\" prefix.\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        if (sign !== 0 && radix !== 10)\n            return null;\n        // Skip leading zeros.\n        while (current === 0x30) {\n            leadingZero = true;\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Allocate result.\n        const chars = length - cursor;\n        let bitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        let roundup = JSBI.__kBitsPerCharTableMultiplier - 1;\n        if (chars > (1 << 30) / bitsPerChar)\n            return null;\n        const bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;\n        const resultLength = ((bitsMin + 29) / 30) | 0;\n        const result = new JSBI(resultLength, false);\n        // Parse.\n        const limDigit = radix < 10 ? radix : 10;\n        const limAlpha = radix > 10 ? radix - 10 : 0;\n        if ((radix & (radix - 1)) === 0) {\n            // Power-of-two radix.\n            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;\n            const parts = [];\n            const partsBits = [];\n            let done = false;\n            do {\n                let part = 0;\n                let bits = 0;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    bits += bitsPerChar;\n                    part = (part << bitsPerChar) | d;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                    if (bits + bitsPerChar > 30)\n                        break;\n                }\n                parts.push(part);\n                partsBits.push(bits);\n            } while (!done);\n            JSBI.__fillFromParts(result, parts, partsBits);\n        }\n        else {\n            result.__initializeDigits();\n            let done = false;\n            let charsSoFar = 0;\n            do {\n                let part = 0;\n                let multiplier = 1;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    const m = multiplier * radix;\n                    if (m > 0x3FFFFFFF)\n                        break;\n                    multiplier = m;\n                    part = part * radix + d;\n                    charsSoFar++;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                }\n                roundup = JSBI.__kBitsPerCharTableMultiplier * 30 - 1;\n                const digitsSoFar = (((bitsPerChar * charsSoFar + roundup) >>>\n                    JSBI.__kBitsPerCharTableShift) / 30) | 0;\n                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);\n            } while (!done);\n        }\n        if (cursor !== length) {\n            if (!JSBI.__isWhitespace(current))\n                return null;\n            for (cursor++; cursor < length; cursor++) {\n                current = string.charCodeAt(cursor);\n                if (!JSBI.__isWhitespace(current))\n                    return null;\n            }\n        }\n        // Get result.\n        result.sign = (sign === -1);\n        return result.__trim();\n    }\n    static __fillFromParts(result, parts, partsBits) {\n        let digitIndex = 0;\n        let digit = 0;\n        let bitsInDigit = 0;\n        for (let i = parts.length - 1; i >= 0; i--) {\n            const part = parts[i];\n            const partBits = partsBits[i];\n            digit |= (part << bitsInDigit);\n            bitsInDigit += partBits;\n            if (bitsInDigit === 30) {\n                result.__setDigit(digitIndex++, digit);\n                bitsInDigit = 0;\n                digit = 0;\n            }\n            else if (bitsInDigit > 30) {\n                result.__setDigit(digitIndex++, digit & 0x3FFFFFFF);\n                bitsInDigit -= 30;\n                digit = part >>> (partBits - bitsInDigit);\n            }\n        }\n        if (digit !== 0) {\n            if (digitIndex >= result.length)\n                throw new Error('implementation bug');\n            result.__setDigit(digitIndex++, digit);\n        }\n        for (; digitIndex < result.length; digitIndex++) {\n            result.__setDigit(digitIndex, 0);\n        }\n    }\n    static __toStringBasePowerOfTwo(x, radix) {\n        const length = x.length;\n        let bits = radix - 1;\n        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);\n        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);\n        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);\n        const bitsPerChar = bits;\n        const charMask = radix - 1;\n        const msd = x.__digit(length - 1);\n        const msdLeadingZeros = JSBI.__clz30(msd);\n        const bitLength = length * 30 - msdLeadingZeros;\n        let charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;\n        if (x.sign)\n            charsRequired++;\n        if (charsRequired > (1 << 28))\n            throw new Error('string too long');\n        const result = new Array(charsRequired);\n        let pos = charsRequired - 1;\n        let digit = 0;\n        let availableBits = 0;\n        for (let i = 0; i < length - 1; i++) {\n            const newDigit = x.__digit(i);\n            const current = (digit | (newDigit << availableBits)) & charMask;\n            result[pos--] = JSBI.__kConversionChars[current];\n            const consumedBits = bitsPerChar - availableBits;\n            digit = newDigit >>> consumedBits;\n            availableBits = 30 - consumedBits;\n            while (availableBits >= bitsPerChar) {\n                result[pos--] = JSBI.__kConversionChars[digit & charMask];\n                digit >>>= bitsPerChar;\n                availableBits -= bitsPerChar;\n            }\n        }\n        const current = (digit | (msd << availableBits)) & charMask;\n        result[pos--] = JSBI.__kConversionChars[current];\n        digit = msd >>> (bitsPerChar - availableBits);\n        while (digit !== 0) {\n            result[pos--] = JSBI.__kConversionChars[digit & charMask];\n            digit >>>= bitsPerChar;\n        }\n        if (x.sign)\n            result[pos--] = '-';\n        if (pos !== -1)\n            throw new Error('implementation bug');\n        return result.join('');\n    }\n    static __toStringGeneric(x, radix, isRecursiveCall) {\n        const length = x.length;\n        if (length === 0)\n            return '';\n        if (length === 1) {\n            let result = x.__unsignedDigit(0).toString(radix);\n            if (isRecursiveCall === false && x.sign) {\n                result = '-' + result;\n            }\n            return result;\n        }\n        const bitLength = length * 30 - JSBI.__clz30(x.__digit(length - 1));\n        const maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        const minBitsPerChar = maxBitsPerChar - 1;\n        let charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;\n        charsRequired += minBitsPerChar - 1;\n        charsRequired = (charsRequired / minBitsPerChar) | 0;\n        const secondHalfChars = (charsRequired + 1) >> 1;\n        // Divide-and-conquer: split by a power of {radix} that's approximately\n        // the square root of {x}, then recurse.\n        const conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));\n        let quotient;\n        let secondHalf;\n        const divisor = conqueror.__unsignedDigit(0);\n        if (conqueror.length === 1 && divisor <= 0x7FFF) {\n            quotient = new JSBI(x.length, false);\n            quotient.__initializeDigits();\n            let remainder = 0;\n            for (let i = x.length * 2 - 1; i >= 0; i--) {\n                const input = (remainder << 15) | x.__halfDigit(i);\n                quotient.__setHalfDigit(i, (input / divisor) | 0);\n                remainder = (input % divisor) | 0;\n            }\n            secondHalf = remainder.toString(radix);\n        }\n        else {\n            const divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);\n            quotient = divisionResult.quotient;\n            const remainder = divisionResult.remainder.__trim();\n            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);\n        }\n        quotient.__trim();\n        let firstHalf = JSBI.__toStringGeneric(quotient, radix, true);\n        while (secondHalf.length < secondHalfChars) {\n            secondHalf = '0' + secondHalf;\n        }\n        if (isRecursiveCall === false && x.sign) {\n            firstHalf = '-' + firstHalf;\n        }\n        return firstHalf + secondHalf;\n    }\n    static __unequalSign(leftNegative) {\n        return leftNegative ? -1 : 1;\n    }\n    static __absoluteGreater(bothNegative) {\n        return bothNegative ? -1 : 1;\n    }\n    static __absoluteLess(bothNegative) {\n        return bothNegative ? 1 : -1;\n    }\n    static __compareToBigInt(x, y) {\n        const xSign = x.sign;\n        if (xSign !== y.sign)\n            return JSBI.__unequalSign(xSign);\n        const result = JSBI.__absoluteCompare(x, y);\n        if (result > 0)\n            return JSBI.__absoluteGreater(xSign);\n        if (result < 0)\n            return JSBI.__absoluteLess(xSign);\n        return 0;\n    }\n    static __compareToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            const xSign = x.sign;\n            const ySign = (y < 0);\n            if (xSign !== ySign)\n                return JSBI.__unequalSign(xSign);\n            if (x.length === 0) {\n                if (ySign)\n                    throw new Error('implementation bug');\n                return y === 0 ? 0 : -1;\n            }\n            // Any multi-digit BigInt is bigger than an int32.\n            if (x.length > 1)\n                return JSBI.__absoluteGreater(xSign);\n            const yAbs = Math.abs(y);\n            const xDigit = x.__unsignedDigit(0);\n            if (xDigit > yAbs)\n                return JSBI.__absoluteGreater(xSign);\n            if (xDigit < yAbs)\n                return JSBI.__absoluteLess(xSign);\n            return 0;\n        }\n        return JSBI.__compareToDouble(x, y);\n    }\n    static __compareToDouble(x, y) {\n        if (y !== y)\n            return y; // NaN.\n        if (y === Infinity)\n            return -1;\n        if (y === -Infinity)\n            return 1;\n        const xSign = x.sign;\n        const ySign = (y < 0);\n        if (xSign !== ySign)\n            return JSBI.__unequalSign(xSign);\n        if (y === 0) {\n            throw new Error('implementation bug: should be handled elsewhere');\n        }\n        if (x.length === 0)\n            return -1;\n        JSBI.__kBitConversionDouble[0] = y;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        if (rawExponent === 0x7FF) {\n            throw new Error('implementation bug: handled elsewhere');\n        }\n        const exponent = rawExponent - 0x3FF;\n        if (exponent < 0) {\n            // The absolute value of y is less than 1. Only 0n has an absolute\n            // value smaller than that, but we've already covered that case.\n            return JSBI.__absoluteGreater(xSign);\n        }\n        const xLength = x.length;\n        let xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        const yBitLength = exponent + 1;\n        if (xBitLength < yBitLength)\n            return JSBI.__absoluteLess(xSign);\n        if (xBitLength > yBitLength)\n            return JSBI.__absoluteGreater(xSign);\n        // Same sign, same bit length. Shift mantissa to align with x and compare\n        // bit for bit.\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        const msdTopBit = 29 - msdLeadingZeros;\n        if (msdTopBit !== (((xBitLength - 1) % 30) | 0)) {\n            throw new Error('implementation bug');\n        }\n        let compareMantissa; // Shifted chunk of mantissa.\n        let remainingMantissaBits = 0;\n        // First, compare most significant digit against beginning of mantissa.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            compareMantissa = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            compareMantissa = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            compareMantissa =\n                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        xMsd = xMsd >>> 0;\n        compareMantissa = compareMantissa >>> 0;\n        if (xMsd > compareMantissa)\n            return JSBI.__absoluteGreater(xSign);\n        if (xMsd < compareMantissa)\n            return JSBI.__absoluteLess(xSign);\n        // Then, compare additional digits against remaining mantissa bits.\n        for (let digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                compareMantissa = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                compareMantissa = 0;\n            }\n            const digit = x.__unsignedDigit(digitIndex);\n            if (digit > compareMantissa)\n                return JSBI.__absoluteGreater(xSign);\n            if (digit < compareMantissa)\n                return JSBI.__absoluteLess(xSign);\n        }\n        // Integer parts are equal; check whether {y} has a fractional part.\n        if (mantissaHigh !== 0 || mantissaLow !== 0) {\n            if (remainingMantissaBits === 0)\n                throw new Error('implementation bug');\n            return JSBI.__absoluteLess(xSign);\n        }\n        return 0;\n    }\n    static __equalToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            if (y === 0)\n                return x.length === 0;\n            // Any multi-digit BigInt is bigger than an int32.\n            return (x.length === 1) && (x.sign === (y < 0)) &&\n                (x.__unsignedDigit(0) === Math.abs(y));\n        }\n        return JSBI.__compareToDouble(x, y) === 0;\n    }\n    // Comparison operations, chosen such that \"op ^ 2\" reverses direction:\n    // 0 - lessThan\n    // 1 - lessThanOrEqual\n    // 2 - greaterThan\n    // 3 - greaterThanOrEqual\n    static __comparisonResultToBool(result, op) {\n        switch (op) {\n            case 0: return result < 0;\n            case 1: return result <= 0;\n            case 2: return result > 0;\n            case 3: return result >= 0;\n        }\n    }\n    static __compare(x, y, op) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string' && typeof y === 'string') {\n            switch (op) {\n                case 0: return x < y;\n                case 1: return x <= y;\n                case 2: return x > y;\n                case 3: return x >= y;\n            }\n        }\n        if (JSBI.__isBigInt(x) && typeof y === 'string') {\n            y = JSBI.__fromString(y);\n            if (y === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        if (typeof x === 'string' && JSBI.__isBigInt(y)) {\n            x = JSBI.__fromString(x);\n            if (x === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x)) {\n            if (JSBI.__isBigInt(y)) {\n                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n            }\n            if (typeof y !== 'number')\n                throw new Error('implementation bug');\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);\n        }\n        if (typeof x !== 'number')\n            throw new Error('implementation bug');\n        if (JSBI.__isBigInt(y)) {\n            // Note that \"op ^ 2\" reverses the op's direction.\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));\n        }\n        if (typeof y !== 'number')\n            throw new Error('implementation bug');\n        switch (op) {\n            case 0: return x < y;\n            case 1: return x <= y;\n            case 2: return x > y;\n            case 3: return x >= y;\n        }\n    }\n    __clzmsd() {\n        return JSBI.__clz30(this.__digit(this.length - 1));\n    }\n    static __absoluteAdd(x, y, resultSign) {\n        if (x.length < y.length)\n            return JSBI.__absoluteAdd(y, x, resultSign);\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        let resultLength = x.length;\n        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {\n            resultLength++;\n        }\n        const result = new JSBI(resultLength, resultSign);\n        let carry = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) + y.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (i < result.length) {\n            result.__setDigit(i, carry);\n        }\n        return result.__trim();\n    }\n    static __absoluteSub(x, y, resultSign) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        const result = new JSBI(x.length, resultSign);\n        let borrow = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) - y.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        return result.__trim();\n    }\n    static __absoluteAddOne(x, sign, result = null) {\n        const inputLength = x.length;\n        if (result === null) {\n            result = new JSBI(inputLength, sign);\n        }\n        else {\n            result.sign = sign;\n        }\n        let carry = 1;\n        for (let i = 0; i < inputLength; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (carry !== 0) {\n            result.__setDigitGrow(inputLength, 1);\n        }\n        return result;\n    }\n    static __absoluteSubOne(x, resultLength) {\n        const length = x.length;\n        resultLength = resultLength || length;\n        const result = new JSBI(resultLength, false);\n        let borrow = 1;\n        for (let i = 0; i < length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (borrow !== 0)\n            throw new Error('implementation bug');\n        for (let i = length; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAnd(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = numPairs;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & y.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAndNot(x, y, result = null) {\n        const xLength = x.length;\n        const yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteOr(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) | y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteXor(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteCompare(x, y) {\n        const diff = x.length - y.length;\n        if (diff !== 0)\n            return diff;\n        let i = x.length - 1;\n        while (i >= 0 && x.__digit(i) === y.__digit(i))\n            i--;\n        if (i < 0)\n            return 0;\n        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;\n    }\n    static __multiplyAccumulate(multiplicand, multiplier, accumulator, accumulatorIndex) {\n        if (multiplier === 0)\n            return;\n        const m2Low = multiplier & 0x7FFF;\n        const m2High = multiplier >>> 15;\n        let carry = 0;\n        let high = 0;\n        for (let i = 0; i < multiplicand.length; i++, accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            const m1 = multiplicand.__digit(i);\n            const m1Low = m1 & 0x7FFF;\n            const m1High = m1 >>> 15;\n            const rLow = JSBI.__imul(m1Low, m2Low);\n            const rMid1 = JSBI.__imul(m1Low, m2High);\n            const rMid2 = JSBI.__imul(m1High, m2Low);\n            const rHigh = JSBI.__imul(m1High, m2High);\n            acc += high + rLow + carry;\n            carry = acc >>> 30;\n            acc &= 0x3FFFFFFF;\n            acc += ((rMid1 & 0x7FFF) << 15) + ((rMid2 & 0x7FFF) << 15);\n            carry += acc >>> 30;\n            high = rHigh + (rMid1 >>> 15) + (rMid2 >>> 15);\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n        for (; carry !== 0 || high !== 0; accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            acc += carry + high;\n            high = 0;\n            carry = acc >>> 30;\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n    }\n    static __internalMultiplyAdd(source, factor, summand, n, result) {\n        let carry = summand;\n        let high = 0;\n        for (let i = 0; i < n; i++) {\n            const digit = source.__digit(i);\n            const rx = JSBI.__imul(digit & 0x7FFF, factor);\n            const ry = JSBI.__imul(digit >>> 15, factor);\n            const r = rx + ((ry & 0x7FFF) << 15) + high + carry;\n            carry = r >>> 30;\n            high = ry >>> 15;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (result.length > n) {\n            result.__setDigit(n++, carry + high);\n            while (n < result.length) {\n                result.__setDigit(n++, 0);\n            }\n        }\n        else {\n            if (carry + high !== 0)\n                throw new Error('implementation bug');\n        }\n    }\n    __inplaceMultiplyAdd(multiplier, summand, length) {\n        if (length > this.length)\n            length = this.length;\n        const mLow = multiplier & 0x7FFF;\n        const mHigh = multiplier >>> 15;\n        let carry = 0;\n        let high = summand;\n        for (let i = 0; i < length; i++) {\n            const d = this.__digit(i);\n            const dLow = d & 0x7FFF;\n            const dHigh = d >>> 15;\n            const pLow = JSBI.__imul(dLow, mLow);\n            const pMid1 = JSBI.__imul(dLow, mHigh);\n            const pMid2 = JSBI.__imul(dHigh, mLow);\n            const pHigh = JSBI.__imul(dHigh, mHigh);\n            let result = high + pLow + carry;\n            carry = result >>> 30;\n            result &= 0x3FFFFFFF;\n            result += ((pMid1 & 0x7FFF) << 15) + ((pMid2 & 0x7FFF) << 15);\n            carry += result >>> 30;\n            high = pHigh + (pMid1 >>> 15) + (pMid2 >>> 15);\n            this.__setDigit(i, result & 0x3FFFFFFF);\n        }\n        if (carry !== 0 || high !== 0) {\n            throw new Error('implementation bug');\n        }\n    }\n    static __absoluteDivSmall(x, divisor, quotient = null) {\n        if (quotient === null)\n            quotient = new JSBI(x.length, false);\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i -= 2) {\n            let input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            const upperHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            input = ((remainder << 15) | x.__halfDigit(i - 1)) >>> 0;\n            const lowerHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            quotient.__setDigit(i >>> 1, (upperHalf << 15) | lowerHalf);\n        }\n        return quotient;\n    }\n    static __absoluteModSmall(x, divisor) {\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i--) {\n            const input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            remainder = (input % divisor) | 0;\n        }\n        return remainder;\n    }\n    static __absoluteDivLarge(dividend, divisor, wantQuotient, wantRemainder) {\n        const n = divisor.__halfDigitLength();\n        const n2 = divisor.length;\n        const m = dividend.__halfDigitLength() - n;\n        let q = null;\n        if (wantQuotient) {\n            q = new JSBI((m + 2) >>> 1, false);\n            q.__initializeDigits();\n        }\n        const qhatv = new JSBI((n + 2) >>> 1, false);\n        qhatv.__initializeDigits();\n        // D1.\n        const shift = JSBI.__clz15(divisor.__halfDigit(n - 1));\n        if (shift > 0) {\n            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);\n        }\n        const u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);\n        // D2.\n        const vn1 = divisor.__halfDigit(n - 1);\n        let halfDigitBuffer = 0;\n        for (let j = m; j >= 0; j--) {\n            // D3.\n            let qhat = 0x7FFF;\n            const ujn = u.__halfDigit(j + n);\n            if (ujn !== vn1) {\n                const input = ((ujn << 15) | u.__halfDigit(j + n - 1)) >>> 0;\n                qhat = (input / vn1) | 0;\n                let rhat = (input % vn1) | 0;\n                const vn2 = divisor.__halfDigit(n - 2);\n                const ujn2 = u.__halfDigit(j + n - 2);\n                while ((JSBI.__imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {\n                    qhat--;\n                    rhat += vn1;\n                    if (rhat > 0x7FFF)\n                        break;\n                }\n            }\n            // D4.\n            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);\n            let c = u.__inplaceSub(qhatv, j, n + 1);\n            if (c !== 0) {\n                c = u.__inplaceAdd(divisor, j, n);\n                u.__setHalfDigit(j + n, (u.__halfDigit(j + n) + c) & 0x7FFF);\n                qhat--;\n            }\n            if (wantQuotient) {\n                if (j & 1) {\n                    halfDigitBuffer = qhat << 15;\n                }\n                else {\n                    // TODO make this statically determinable\n                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);\n                }\n            }\n        }\n        if (wantRemainder) {\n            u.__inplaceRightShift(shift);\n            if (wantQuotient) {\n                return { quotient: q, remainder: u };\n            }\n            return u;\n        }\n        if (wantQuotient)\n            return q;\n        // TODO find a way to make this statically unreachable?\n        throw new Error('unreachable');\n    }\n    static __clz15(value) {\n        return JSBI.__clz30(value) - 15;\n    }\n    // TODO: work on full digits, like __inplaceSub?\n    __inplaceAdd(summand, startIndex, halfDigits) {\n        let carry = 0;\n        for (let i = 0; i < halfDigits; i++) {\n            const sum = this.__halfDigit(startIndex + i) +\n                summand.__halfDigit(i) +\n                carry;\n            carry = sum >>> 15;\n            this.__setHalfDigit(startIndex + i, sum & 0x7FFF);\n        }\n        return carry;\n    }\n    __inplaceSub(subtrahend, startIndex, halfDigits) {\n        const fullSteps = (halfDigits - 1) >>> 1;\n        let borrow = 0;\n        if (startIndex & 1) {\n            // this:   [..][..][..]\n            // subtr.:   [..][..]\n            startIndex >>= 1;\n            let current = this.__digit(startIndex);\n            let r0 = current & 0x7FFF;\n            let i = 0;\n            for (; i < fullSteps; i++) {\n                const sub = subtrahend.__digit(i);\n                const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - (sub >>> 15) - borrow;\n                borrow = (r0 >>> 15) & 1;\n            }\n            // Unrolling the last iteration gives a 5% performance benefit!\n            const sub = subtrahend.__digit(i);\n            const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n            borrow = (r15 >>> 15) & 1;\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            const subTop = sub >>> 15;\n            if (startIndex + i + 1 >= this.length) {\n                throw new RangeError('out of bounds');\n            }\n            if ((halfDigits & 1) === 0) {\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - subTop - borrow;\n                borrow = (r0 >>> 15) & 1;\n                this.__setDigit(startIndex + subtrahend.length, (current & 0x3FFF8000) | (r0 & 0x7FFF));\n            }\n        }\n        else {\n            startIndex >>= 1;\n            let i = 0;\n            for (; i < subtrahend.length - 1; i++) {\n                const current = this.__digit(startIndex + i);\n                const sub = subtrahend.__digit(i);\n                const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n                borrow = (r0 >>> 15) & 1;\n                const r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            }\n            const current = this.__digit(startIndex + i);\n            const sub = subtrahend.__digit(i);\n            const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n            borrow = (r0 >>> 15) & 1;\n            let r15 = 0;\n            if ((halfDigits & 1) === 0) {\n                r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n            }\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n        }\n        return borrow;\n    }\n    __inplaceRightShift(shift) {\n        if (shift === 0)\n            return;\n        let carry = this.__digit(0) >>> shift;\n        const last = this.length - 1;\n        for (let i = 0; i < last; i++) {\n            const d = this.__digit(i + 1);\n            this.__setDigit(i, ((d << (30 - shift)) & 0x3FFFFFFF) | carry);\n            carry = d >>> shift;\n        }\n        this.__setDigit(last, carry);\n    }\n    static __specialLeftShift(x, shift, addDigit) {\n        const n = x.length;\n        const resultLength = n + addDigit;\n        const result = new JSBI(resultLength, false);\n        if (shift === 0) {\n            for (let i = 0; i < n; i++)\n                result.__setDigit(i, x.__digit(i));\n            if (addDigit > 0)\n                result.__setDigit(n, 0);\n            return result;\n        }\n        let carry = 0;\n        for (let i = 0; i < n; i++) {\n            const d = x.__digit(i);\n            result.__setDigit(i, ((d << shift) & 0x3FFFFFFF) | carry);\n            carry = d >>> (30 - shift);\n        }\n        if (addDigit > 0) {\n            result.__setDigit(n, carry);\n        }\n        return result;\n    }\n    static __leftShiftByAbsolute(x, y) {\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            throw new RangeError('BigInt too big');\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        const length = x.length;\n        const grow = bitsShift !== 0 &&\n            (x.__digit(length - 1) >>> (30 - bitsShift)) !== 0;\n        const resultLength = length + digitShift + (grow ? 1 : 0);\n        const result = new JSBI(resultLength, x.sign);\n        if (bitsShift === 0) {\n            let i = 0;\n            for (; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (; i < resultLength; i++) {\n                result.__setDigit(i, x.__digit(i - digitShift));\n            }\n        }\n        else {\n            let carry = 0;\n            for (let i = 0; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (let i = 0; i < length; i++) {\n                const d = x.__digit(i);\n                result.__setDigit(i + digitShift, ((d << bitsShift) & 0x3FFFFFFF) | carry);\n                carry = d >>> (30 - bitsShift);\n            }\n            if (grow) {\n                result.__setDigit(length + digitShift, carry);\n            }\n            else {\n                if (carry !== 0)\n                    throw new Error('implementation bug');\n            }\n        }\n        return result.__trim();\n    }\n    static __rightShiftByAbsolute(x, y) {\n        const length = x.length;\n        const sign = x.sign;\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        let resultLength = length - digitShift;\n        if (resultLength <= 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        // For negative numbers, round down if any bit was shifted out (so that\n        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen\n        // and whether itc an cause overflow into a new digit. If we allocate the\n        // result large enough up front, it avoids having to do grow it later.\n        let mustRoundDown = false;\n        if (sign) {\n            const mask = (1 << bitsShift) - 1;\n            if ((x.__digit(digitShift) & mask) !== 0) {\n                mustRoundDown = true;\n            }\n            else {\n                for (let i = 0; i < digitShift; i++) {\n                    if (x.__digit(i) !== 0) {\n                        mustRoundDown = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // If bitsShift is non-zero, it frees up bits, preventing overflow.\n        if (mustRoundDown && bitsShift === 0) {\n            // Overflow cannot happen if the most significant digit has unset bits.\n            const msd = x.__digit(length - 1);\n            const roundingCanOverflow = ~msd === 0;\n            if (roundingCanOverflow)\n                resultLength++;\n        }\n        let result = new JSBI(resultLength, sign);\n        if (bitsShift === 0) {\n            // Zero out any overflow digit (see \"roundingCanOverflow\" above).\n            result.__setDigit(resultLength - 1, 0);\n            for (let i = digitShift; i < length; i++) {\n                result.__setDigit(i - digitShift, x.__digit(i));\n            }\n        }\n        else {\n            let carry = x.__digit(digitShift) >>> bitsShift;\n            const last = length - digitShift - 1;\n            for (let i = 0; i < last; i++) {\n                const d = x.__digit(i + digitShift + 1);\n                result.__setDigit(i, ((d << (30 - bitsShift)) & 0x3FFFFFFF) | carry);\n                carry = d >>> bitsShift;\n            }\n            result.__setDigit(last, carry);\n        }\n        if (mustRoundDown) {\n            // Since the result is negative, rounding down means adding one to its\n            // absolute value. This cannot overflow.\n            result = JSBI.__absoluteAddOne(result, true, result);\n        }\n        return result.__trim();\n    }\n    static __rightShiftByMaximum(sign) {\n        if (sign) {\n            return JSBI.__oneDigit(1, true);\n        }\n        return JSBI.__zero();\n    }\n    static __toShiftAmount(x) {\n        if (x.length > 1)\n            return -1;\n        const value = x.__unsignedDigit(0);\n        if (value > JSBI.__kMaxLengthBits)\n            return -1;\n        return value;\n    }\n    static __toPrimitive(obj, hint = 'default') {\n        if (typeof obj !== 'object')\n            return obj;\n        if (obj.constructor === JSBI)\n            return obj;\n        if (typeof Symbol !== 'undefined' &&\n            typeof Symbol.toPrimitive === 'symbol') {\n            const exoticToPrim = obj[Symbol.toPrimitive];\n            if (exoticToPrim) {\n                const primitive = exoticToPrim(hint);\n                if (typeof primitive !== 'object')\n                    return primitive;\n                throw new TypeError('Cannot convert object to primitive value');\n            }\n        }\n        const valueOf = obj.valueOf;\n        if (valueOf) {\n            const primitive = valueOf.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        const toString = obj.toString;\n        if (toString) {\n            const primitive = toString.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        throw new TypeError('Cannot convert object to primitive value');\n    }\n    static __toNumeric(value) {\n        if (JSBI.__isBigInt(value))\n            return value;\n        return +value;\n    }\n    static __isBigInt(value) {\n        return typeof value === 'object' && value !== null &&\n            value.constructor === JSBI;\n    }\n    static __truncateToNBits(n, x) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, x.sign);\n        const last = neededDigits - 1;\n        for (let i = 0; i < last; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        let msd = x.__digit(last);\n        if ((n % 30) !== 0) {\n            const drop = 32 - (n % 30);\n            msd = (msd << drop) >>> drop;\n        }\n        result.__setDigit(last, msd);\n        return result.__trim();\n    }\n    static __truncateAndSubFromPowerOfTwo(n, x, resultSign) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, resultSign);\n        let i = 0;\n        const last = neededDigits - 1;\n        let borrow = 0;\n        const limit = Math.min(last, x.length);\n        for (; i < limit; i++) {\n            const r = 0 - x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < last; i++) {\n            result.__setDigit(i, (-borrow & 0x3FFFFFFF) | 0);\n        }\n        let msd = last < x.length ? x.__digit(last) : 0;\n        const msdBitsConsumed = n % 30;\n        let resultMsd;\n        if (msdBitsConsumed === 0) {\n            resultMsd = 0 - msd - borrow;\n            resultMsd &= 0x3FFFFFFF;\n        }\n        else {\n            const drop = 32 - msdBitsConsumed;\n            msd = (msd << drop) >>> drop;\n            const minuendMsd = 1 << (32 - drop);\n            resultMsd = minuendMsd - msd - borrow;\n            resultMsd &= (minuendMsd - 1);\n        }\n        result.__setDigit(last, resultMsd);\n        return result.__trim();\n    }\n    // Digit helpers.\n    __digit(i) {\n        return this[i];\n    }\n    __unsignedDigit(i) {\n        return this[i] >>> 0;\n    }\n    __setDigit(i, digit) {\n        this[i] = digit | 0;\n    }\n    __setDigitGrow(i, digit) {\n        this[i] = digit | 0;\n    }\n    __halfDigitLength() {\n        const len = this.length;\n        if (this.__unsignedDigit(len - 1) <= 0x7FFF)\n            return len * 2 - 1;\n        return len * 2;\n    }\n    __halfDigit(i) {\n        return (this[i >>> 1] >>> ((i & 1) * 15)) & 0x7FFF;\n    }\n    __setHalfDigit(i, value) {\n        const digitIndex = i >>> 1;\n        const previous = this.__digit(digitIndex);\n        const updated = (i & 1) ? (previous & 0x7FFF) | (value << 15)\n            : (previous & 0x3FFF8000) | (value & 0x7FFF);\n        this.__setDigit(digitIndex, updated);\n    }\n    static __digitPow(base, exponent) {\n        let result = 1;\n        while (exponent > 0) {\n            if (exponent & 1)\n                result *= base;\n            exponent >>>= 1;\n            base *= base;\n        }\n        return result;\n    }\n    static __isOneDigitInt(x) {\n        return (x & 0x3FFFFFFF) === x;\n    }\n}\nJSBI.__kMaxLength = 1 << 25;\nJSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;\n// Lookup table for the maximum number of bits required per character of a\n// base-N string representation of a number. To increase accuracy, the array\n// value is the actual value multiplied by 32. To generate this table:\n//\n// for (let i = 0; i <= 36; i++) {\n//   console.log(Math.ceil(Math.log2(i) * 32) + ',');\n// }\nJSBI.__kMaxBitsPerChar = [\n    0, 0, 32, 51, 64, 75, 83, 90, 96,\n    102, 107, 111, 115, 119, 122, 126, 128,\n    131, 134, 136, 139, 141, 143, 145, 147,\n    149, 151, 153, 154, 156, 158, 159, 160,\n    162, 163, 165, 166, // 33..36\n];\nJSBI.__kBitsPerCharTableShift = 5;\nJSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;\nJSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nJSBI.__kBitConversionBuffer = new ArrayBuffer(8);\nJSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);\nJSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);\n// For IE11 compatibility.\n// Note that the custom replacements are tailored for JSBI's needs, and as\n// such are not reusable as general-purpose polyfills.\nJSBI.__clz30 = Math.clz32 ? function (x) {\n    return Math.clz32(x) - 2;\n} : function (x) {\n    if (x === 0)\n        return 30;\n    return 29 - (Math.log(x >>> 0) / Math.LN2 | 0) | 0;\n};\nJSBI.__imul = Math.imul || function (a, b) {\n    return (a * b) | 0;\n};\nexport default JSBI;\n//# sourceMappingURL=jsbi.js.map"],"names":["namespace","i18n","addResources","arTranslations","csTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","loTranslations","nbTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","siTranslations","ukTranslations","urTranslations","uz_UZ_CyrlTranslations","uz_UZ_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","rtlLocales","Set","t","MakeIntrinsicClass","e","Object","defineProperty","prototype","Symbol","toStringTag","value","writable","enumerable","configurable","getOwnPropertyNames","r","getOwnPropertyDescriptor","DefineIntrinsic","o","Error","GetIntrinsic","n","a","i","s","l","d","m","c","h","u","T","p","f","y","S","w","g","I","D","G","v","O","C","E","WeakMap","CreateSlots","set","create","GetSlots","get","HasSlot","_len","arguments","length","Array","_key","reduce","GetSlot","TypeError","SetSlot","b","M","RegExp","source","R","Z","P","F","Y","j","$","B","N","k","A","U","L","x","H","q","W","z","includes","_","push","J","globalThis","Intl","DateTimeFormat","V","Math","min","X","max","K","abs","Q","floor","ee","sign","te","trunc","re","Number","isNaN","oe","isFinite","ne","ae","String","ie","MAX_SAFE_INTEGER","se","assign","le","de","me","is","ce","Reflect","apply","he","ue","Te","pe","fe","ye","Se","we","ge","Ie","De","Ge","ve","Oe","Ce","IsInteger","IsObject","ToNumber","ToInteger","ToString","ToIntegerThrowOnInfinity","RangeError","ToPositiveInteger","ToIntegerWithoutRounding","divmod","quotient","remainder","ArrayPush","_len2","_key2","Ee","Map","be","Me","Re","map","Ze","_ref","Pe","_ref2","Fe","from","keys","sort","Ye","getIntlDateTimeFormatEnUsForTimeZone","timeZone","hour12","era","year","month","day","hour","minute","second","IsTemporalInstant","IsTemporalTimeZone","IsTemporalCalendar","IsTemporalDuration","IsTemporalDate","IsTemporalTime","IsTemporalDateTime","IsTemporalYearMonth","IsTemporalMonthDay","IsTemporalZonedDateTime","RejectObjectWithCalendarOrTimeZone","calendar","ParseTemporalTimeZone","ianaName","offset","GetCanonicalTimeZoneIdentifier","toString","ParseISODateTime","FormatCalendarAnnotation","exec","slice","endsWith","RejectDateTime","hasTime","millisecond","microsecond","nanosecond","ParseTemporalYearMonthString","referenceISODay","ParseTemporalMonthDayString","referenceISOYear","RegulateISODate","RejectISODate","ConstrainISODate","RegulateTime","RejectTime","ConstrainToRange","ToTemporalDurationRecord","every","minutes","seconds","milliseconds","microseconds","nanoseconds","forEach","RejectDuration","years","months","weeks","days","hours","ParseTemporalDurationString","ToTemporalOverflow","GetOption","ToTemporalDisambiguation","ToTemporalRoundingMode","NegateTemporalRoundingMode","ToTemporalOffset","ToShowCalendarOption","ToTemporalRoundingIncrement","ToTemporalDateTimeRoundingIncrement","week","ToSecondsStringPrecision","GetTemporalUnit","_ref3","join","precision","unit","increment","fractionalSecondDigits","je","undefined","has","ToRelativeTemporalObject","relativeTo","TemporalDateTimeToDate","GetTemporalCalendarWithISODefault","PrepareTemporalFields","CalendarFields","overflow","InterpretTemporalDateTimeFields","GetISO8601Calendar","ToTemporalCalendar","ToTemporalTimeZone","ParseTimeZoneOffsetString","CreateTemporalZonedDateTime","InterpretISODateTimeOffset","CreateTemporalDate","DefaultTemporalLargestUnit","LargerOfTwoTemporalUnits","indexOf","MergeLargestUnitOption","largestUnit","emptySourceErrorMessage","call","eraYear","ToTemporalTimeRecord","ToTemporalDate","BuiltinTimeZoneGetPlainDateTimeFor","CalendarDateFromFields","ToTemporalDateTime","CreateTemporalDateTime","ToTemporalDuration","ToTemporalInstant","BalanceISODateTime","GetEpochFromISOParts","ParseTemporalInstant","ToTemporalMonthDay","monthCode","CalendarMonthDayFromFields","CreateTemporalMonthDay","ToTemporalTime","test","ToTemporalYearMonth","CalendarYearMonthFromFields","CreateTemporalYearMonth","BuiltinTimeZoneGetInstantFor","GetPossibleInstantsFor","GetOffsetNanosecondsFor","RoundNumberToIncrement","FormatTimeZoneOffsetString","DisambiguatePossibleInstants","ToTemporalZonedDateTime","CreateTemporalDateSlots","RejectDateRange","CreateTemporalDateTimeSlots","RejectDateTimeRange","CreateTemporalMonthDaySlots","CreateTemporalYearMonthSlots","RejectToRange","CreateTemporalZonedDateTimeSlots","ValidateEpochNanoseconds","fields","CalendarMergeFields","mergeFields","CalendarDateAdd","dateAdd","CalendarDateUntil","dateUntil","CalendarYear","CalendarMonth","CalendarMonthCode","CalendarDay","CalendarEra","CalendarEraYear","CalendarDayOfWeek","dayOfWeek","CalendarDayOfYear","dayOfYear","CalendarWeekOfYear","weekOfYear","CalendarDaysInWeek","daysInWeek","CalendarDaysInMonth","daysInMonth","CalendarDaysInYear","daysInYear","CalendarMonthsInYear","monthsInYear","CalendarInLeapYear","inLeapYear","IsBuiltinCalendar","CalendarEquals","ConsolidateCalendars","dateFromFields","yearMonthFromFields","monthDayFromFields","TimeZoneEquals","TemporalDateTimeToTime","getOffsetNanosecondsFor","BuiltinTimeZoneGetOffsetStringFor","GetISOPartsFromEpoch","AddDateTime","getPossibleInstantsFor","ISOYearString","ISODateTimePartString","FormatSecondsStringPart","padStart","TemporalInstantToString","FormatISOTimeZoneOffsetString","TemporalDurationToString","formatNumber","DurationSign","roundingMode","RoundDuration","TotalDurationNanoseconds","unshift","TemporalDateToString","TemporalDateTimeToString","RoundISODateTime","TemporalMonthDayToString","TemporalYearMonthToString","TemporalZonedDateTimeToString","RoundInstant","TestTimeZoneOffsetString","Be","resolvedOptions","GetIANATimeZoneOffsetNanoseconds","GetIANATimeZoneDateTimeParts","Date","setUTCHours","setUTCFullYear","getTime","epochMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","split","toUpperCase","format","maxJSBI","afterLatestPossibleTzdbRuleChange","$e","GetIANATimeZonePreviousTransition","bisect","LeapYear","ISODaysInMonth","standard","leapyear","DayOfWeek","DayOfYear","BalanceISOYearMonth","BalanceISODate","deltaDays","BalanceTime","NonNegativeModulo","NanosecondsToDays","dayLengthNs","DifferenceISODateTime","AddZonedDateTime","BalanceDuration","UnbalanceDurationRelative","MoveRelativeDate","CalculateOffsetShift","CreateNegatedTemporalDuration","DifferenceISODate","CompareISODate","AddISODate","DifferenceTime","DifferenceInstant","Ne","DifferenceZonedDateTime","DifferenceTemporalInstant","GetOptionsObject","DifferenceTemporalPlainDate","DifferenceTemporalPlainDateTime","DifferenceTemporalPlainTime","DifferenceTemporalPlainYearMonth","_ref4","DifferenceTemporalZonedDateTime","AdjustRoundedDurationDays","AddTime","AddDuration","AddInstant","AddDurationToOrSubtractDurationFromDuration","AddDurationToOrSubtractDurationFromInstant","AddDurationToOrSubtractDurationFromPlainDateTime","AddDurationToOrSubtractDurationFromPlainTime","AddDurationToOrSubtractDurationFromPlainYearMonth","AddDurationToOrSubtractDurationFromZonedDateTime","RoundTime","DaysUntil","MoveRelativeZonedDateTime","total","ComparisonResult","ToBigIntExternal","ToBigInt","BigInt","toPrimitive","match","SyntaxError","message","startsWith","now","CreateOnePropObject","ke","Ae","Ue","Le","xe","He","qe","We","ze","_e","Je","Ve","Xe","descriptor","Ke","Qe","et","hasOwnProperty","tt","getPropLazy","getResolvedTimeZoneLazy","DateTimeFormatImpl","this","locale","dateAmend","yearMonthAmend","monthDayAmend","timeAmend","datetimeAmend","zonedDateTimeAmend","instantAmend","supportedLocalesOf","rt","instant","formatter","extractOverrides","adjustFormatterTimeZone","_len3","_key3","formatRange","isTemporalObject","sameTemporalType","formatToParts","_len4","_key4","formatRangeToParts","ot","dateStyle","timeStyle","weekday","timeZoneName","hourCycle","dayPeriod","amend","hasTimeOptions","hasDateOptions","nt","freeze","__proto__","Instant","constructor","epochSeconds","epochMicroseconds","epochNanoseconds","add","subtract","until","since","round","equals","toJSON","toLocaleString","valueOf","toZonedDateTime","toZonedDateTimeISO","fromEpochSeconds","fromEpochMilliseconds","fromEpochMicroseconds","fromEpochNanoseconds","compare","at","it","st","lt","dt","mt","ct","entries","ht","ut","Calendar","id","delete","monthCodeNumberPart","buildMonthCode","resolveNonLunisolarMonth","iso8601","OneObjectCache","calls","hits","misses","performance","MAX_CACHE_ENTRIES","report","setObject","objectMap","getCacheForObject","toUtcIsoDateString","_ref5","isoYear","isoMonth","isoDay","simpleDateDiff","HelperBase","eraLength","hasEra","getFormatter","isoToCalendarDate","JSON","stringify","func","type","monthExtra","normalize","replace","toLowerCase","reviseIntlEra","checkIcuBugs","adjustCalendarDate","validateCalendarDate","constantEra","calendarType","regulateMonthDayNaive","maximumMonthLength","calendarToIsoDate","estimateIsoDate","calculateSameMonthResult","addDaysIso","minimumMonthLength","compareCalendarDates","temporalToCalendarDate","regulateDate","addDaysCalendar","addMonthsCalendar","daysInPreviousMonth","addCalendar","_ref6","untilCalendar","calendarDaysUntil","startOfCalendarYear","startOfCalendarMonth","isoDaysUntil","HebrewHelper","super","Tishri","leap","regular","Heshvan","Kislev","Tevet","Shevat","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","minMaxMonthLength","getMonthCode","find","IslamicBaseHelper","DAYS_PER_ISLAMIC_YEAR","DAYS_PER_ISO_YEAR","IslamicHelper","IslamicUmalquraHelper","IslamicTblaHelper","IslamicCivilHelper","IslamicRgsaHelper","IslamicCcHelper","PersianHelper","IndianHelper","nextYear","vulnerableToBceBug","toLocaleDateString","isGregorianLeapYear","getMonthInfo","GregorianBaseHelper","v8IsVulnerableToJulianBug","calendarIsVulnerableToJulianBug","eras","anchorEra","reverseOf","name","filter","isAnchor","anchorEpoch","hasYearZero","isoEpoch","genericName","completeEraYear","checkField","eraFromYear","OrthodoxBaseHelper","EthioaaHelper","CopticHelper","EthiopicHelper","RocHelper","BuddhistHelper","GregoryHelper","JapaneseHelper","ChineseBaseHelper","getMonthList","calendarYear","getCalendarDate","setUTCDate","calendarMonthString","calendarDay","calendarYearToVerify","monthIndex","_ref7","ChineseHelper","DangiHelper","Tt","helper","PlainDate","with","withCalendar","toPlainDateTime","plainTime","toPlainYearMonth","toPlainMonthDay","getISOFields","PlainDateTime","withPlainTime","withPlainDate","toPlainDate","toPlainTime","isoHour","isoMicrosecond","isoMillisecond","isoMinute","isoNanosecond","isoSecond","Duration","blank","negated","DurationFormat","console","warn","pt","PlainMonthDay","plainDateTime","plainDateTimeISO","zonedDateTime","ft","plainDate","plainDateISO","plainTimeISO","zonedDateTimeISO","yt","TemporalTimeToString","PlainTime","TimeZone","getOffsetStringFor","getPlainDateTimeFor","getInstantFor","getNextTransition","getPreviousTransition","St","PlainYearMonth","ZonedDateTime","dateTime","hoursInDay","offsetNanoseconds","withTimeZone","startOfDay","toInstant","wt","Now","gt","dhis2CalendarsMap","ethiopian","coptic","gregorian","islamic","nepali","thai","persian","monthNames","dayNamesShort","numbers","monthNamesShort","dayNames","dayNamesMin","NEPALI_CALENDAR_DATA","NepaliCalendar","Temporal","date","_isoToNepali2","_isoToNepali","_isoToNepali3","nepaliDay","options","_nepaliToIso","supportedNepaliYears","firstSupportedNepaliYear","lastSupportedNepaliYear","nepaliYear","nepaliMonth","gregorianDayOfYear","monthCounter","gregorianYear","result","isoDate","gregorianDate","dayOfFirstJanInPaush","daysSinceJanFirstToEndOfNepaliMonth","_NEPALI_CALENDAR_DATA","customCalendars","locales","calendarLocalisations","defaultLocale","dateStringRegExp","extractDatePartsFromDateString","dateString","parts","yearStr","monthStr","dayStr","detectedFormat","parseInt","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","_Intl$DateTimeFormat$2","_Intl$DateTimeFormat$3","_dhis2CalendarsMap","calendarToUse","isCustomCalendar","getCustomCalendarIfExists","DateValidationResult","validateDateString","_dhis2CalendarsMap$ca","minDateString","maxDateString","strictValidation","resolvedCalendar","valid","error","validationCode","WRONG_FORMAT","validationText","dateParts","err","INVALID_DATE_IN_CALENDAR","validationType","warning","minDateParts","minDate","LESS_THAN_MIN","maxDateParts","maxDate","MORE_THAN_MAX","padWithZeroes","number","count","formatDate","dayType","_date$eraYear","dayString","_customCalendars","customCalendar","getCurrentDateResult","getNowInCalendar","isValid","getValidDateResult","adjustForEthiopicCalendar","getInvalidDateResult","numberingSystems","getCustomCalendarLocale","customLocalisations","getPartialLocaleMatch","availableLocales","partialLocaleMatch","supportedLocale","_supportedLocale$spli","_supportedLocale$spli2","localisationHelpers","localiseYear","zdt","localeOptions","localiseDateLabel","selectedDateZdt","isCustom","nonCustomDate","localiseWeekLabel","_customLocale$numbers","customLocale","numberingSystem","localiseMonth","localiseWeekDayLabel","customDayString","weekDayFormat","groupByWeek","acc","requestedLocale","lng","region","script","getWeekDayString","useDatePicker","onDateSelect","userOptions","getValidLocale","useMemo","_defaultDateTimeOptio","_defaultDateTimeOptio2","_defaultDateTimeOptio3","_defaultDateTimeOptio4","resolvedLocale","defaultDateTimeOptions","defaultUserOptions","localeToUse","useResolvedLocaleOptions","_options$calendar","prevDateStringRef","useRef","todayZdt","extractAndValidateDateString","temporalCalendar","temporalTimeZone","firstZdtOfVisibleMonth","setFirstZdtOfVisibleMonth","useState","weekDayLabels","today","startOfWeek","labels","currentDate","weekDayString","useWeekDayLabels","navigation","useNavigation","prevYear","prevMonth","nextMonth","yearNumericFormat","monthFormat","label","navigateTo","currYear","currMonth","selectDate","useCallback","calendarDateString","calendarWeekDaysZdts","dayZdt","dateInfo","firstDayOfMonth","firstDayToDisplay","lastDayOfMonth","numberOfDaysInCalendar","allDates","useEffect","current","some","calendarWeekDays","weekDayZdt","dateValue","onClick","isSelected","isToday","isInCurrentMonth","periodTypes","monthlyFixedPeriodTypes","periodType","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","FinancialYearlyMonths","values","yearlyMonthValueKeys","monthNumbers","monthlyRegExps","CalendarTableCell","cellSize","selectedDate","dayHoverBackgroundColor","colors","grey200","selectedDayBackgroundColor","teal700","React","className","_JSXStyle","dynamic","grey900","grey300","teal600","teal200","grey600","cx","otherMonth","propTypes","PropTypes","CalendarTableDaysHeader","dayNamesColor","grey700","scope","key","CalendarTable","width","spacers","dp4","weekIndex","CalendarTableProps","calendarDate","isRequired","wrapperBorderColor","headerBackground","grey050","NavigationContainer","_currYear$label","languageDirection","PreviousIcon","IconChevronLeft16","IconChevronRight16","NextIcon","currentYearLabel","dp8","NavigationContainerProps","backgroundColor","CalendarContainer","calendarRef","navigationProps","dir","ref","_extends","bind","offsetModifier","CalendarInput","parentOnDateSelect","clearable","inputWidth","dataTest","rest","open","setOpen","partialDate","setPartialDate","useDatePickerOptions","onChooseDate","validationOptions","validation","pickerResults","useResolvedDirection","localeIdentifier","calendarProps","InputField","onFocus","_rest$onFocus","onChange","onBlur","handleBlur","_calendarRef$current","relatedTarget","contains","loading","dense","Button","secondary","small","Layer","onBackdropClick","Popper","reference","placement","modifiers","Card","imul","clz32","iterator","setPrototypeOf","getPrototypeOf","construct","sham","Proxy","Boolean","Function","ReferenceError","isArray","next","done","return","__kMaxLength","__toStringBasePowerOfTwo","__toStringGeneric","pop","__clz30","__digit","__imul","__setDigit","__halfDigit","__setHalfDigit","__unsignedDigit","__zero","__isOneDigitInt","__oneDigit","__fromDouble","__fromString","__toPrimitive","__decideRounding","__kBitConversionInts","__kBitConversionDouble","__copy","__absoluteSubOne","__trim","__absoluteAddOne","unaryMinus","__kMaxLengthBits","__initializeDigits","multiply","__clzmsd","__multiplyAccumulate","__absoluteCompare","__absoluteDivSmall","__absoluteDivLarge","__absoluteModSmall","__absoluteAdd","__absoluteSub","__rightShiftByAbsolute","__leftShiftByAbsolute","__compareToBigInt","equal","__absoluteAnd","__absoluteOr","__absoluteAndNot","__absoluteXor","__truncateToNBits","__truncateAndSubFromPowerOfTwo","__toNumeric","__isBigInt","__compare","EQ","__equalToNumber","asIntN","DataViewGetBigUint64","getUint32","DataViewSetBigUint64","asUintN","setUint32","charCodeAt","__isWhitespace","__kMaxBitsPerChar","__kBitsPerCharTableMultiplier","__kBitsPerCharTableShift","__fillFromParts","__inplaceMultiplyAdd","__kConversionChars","exponentiate","__unequalSign","__absoluteGreater","__absoluteLess","__compareToDouble","__comparisonResultToBool","__compareToNumber","__setDigitGrow","__halfDigitLength","__clz15","__specialLeftShift","__internalMultiplyAdd","__inplaceSub","__inplaceAdd","__inplaceRightShift","__toShiftAmount","__rightShiftByMaximum","__kBitConversionBuffer","ArrayBuffer","Float64Array","Int32Array","LN2","log"],"sourceRoot":""}