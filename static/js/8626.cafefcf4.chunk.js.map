{"version":3,"file":"static/js/8626.cafefcf4.chunk.js","mappings":"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","sources":["D2App/pages/organisationUnits/List.js","D2App/testUtils/builders.js","D2App/pages/organisationUnits/List.spec.js","D2App/pages/organisationUnits/list/OrganisationUnitList.js","D2App/pages/organisationUnits/list/OrganisationUnitListActions.js","D2App/pages/organisationUnits/list/OrganisationUnitListMessage.js","D2App/pages/organisationUnits/list/OrganisationUnitRow.js","D2App/pages/organisationUnits/list/useOrganisationUnits.js","D2App/testUtils/TestComponentWithRouter.js","webpack://@dhis2/app-shell/./src/D2App/pages/organisationUnits/list/OrganisationUnitList.module.css?1639"],"sourcesContent":["import React from 'react';\nimport { OrganisationUnitList } from './list/';\nexport const Component = () => {\n  return /*#__PURE__*/React.createElement(OrganisationUnitList, null);\n};","import { faker } from '@faker-js/faker';\nexport const randomDhis2Id = () => faker.helpers.fromRegExp(/[a-zA-Z]{1}[a-zA-Z0-9]{10}/);\nexport const testPager = function () {\n  let {\n    page = faker.number.int({\n      min: 0,\n      max: 5\n    }),\n    total = faker.number.int({\n      min: 0,\n      max: 50\n    }),\n    pageSize = 50,\n    pageCount = faker.number.int({\n      min: 0,\n      max: 5\n    })\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    page,\n    total,\n    pageSize,\n    pageCount\n  };\n};\nexport const testAccess = function () {\n  let {\n    deleteAccess = faker.datatype.boolean(),\n    externalizeAccess = faker.datatype.boolean(),\n    manageAccess = faker.datatype.boolean(),\n    readAccess = faker.datatype.boolean(),\n    updateAccess = faker.datatype.boolean(),\n    writeAccess = faker.datatype.boolean(),\n    readDataAcess = faker.datatype.boolean(),\n    writeDataAccess = faker.datatype.boolean()\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    data: {\n      read: readDataAcess,\n      write: writeDataAccess\n    },\n    delete: deleteAccess,\n    externalize: externalizeAccess,\n    manage: manageAccess,\n    read: readAccess,\n    update: updateAccess,\n    write: writeAccess\n  };\n};\nexport const testUser = function () {\n  let {\n    id = randomDhis2Id(),\n    code = null,\n    name = faker.person.fullName(),\n    username = faker.internet.userName()\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    id,\n    code,\n    name,\n    displayName: name,\n    username\n  };\n};\nexport const testOrgUnit = function () {\n  let {\n    id = randomDhis2Id(),\n    code = faker.string.alphanumeric(6),\n    name = faker.location.city(),\n    created = faker.date.past().toUTCString(),\n    lastUpdated = faker.date.past().toUTCString(),\n    createdBy = testUser(),\n    lastUpdatedBy = testUser(),\n    parentId = null,\n    ancestors = [],\n    level = null,\n    childCount = 0,\n    access = testAccess()\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    code,\n    name,\n    created: created,\n    lastUpdated,\n    createdBy,\n    lastUpdatedBy,\n    sharing: {},\n    shortName: name.slice(0, 5),\n    parent: parentId ? {\n      id: parentId\n    } : undefined,\n    path: `/${id}`,\n    displayName: name,\n    href: faker.internet.url(),\n    id,\n    level: level || ancestors.length,\n    ancestors,\n    childCount,\n    access\n  };\n};","import { FetchError } from '@dhis2/app-runtime';\nimport { faker } from '@faker-js/faker';\nimport { fireEvent, render, waitFor, waitForElementToBeRemoved, within } from '@testing-library/react';\nimport React from 'react';\nimport organisationUnitsSchemaMock from '../../__mocks__/schema/organisationUnitsSchema.json';\nimport { getRelativeTime, SECTIONS_MAP } from '../../lib';\nimport { useSchemaStore } from '../../lib/schemas/schemaStore';\nimport { useCurrentUserStore } from '../../lib/user/currentUserStore';\nimport { testAccess, testOrgUnit } from '../../testUtils/builders';\nimport TestComponentWithRouter from '../../testUtils/TestComponentWithRouter';\nimport { Component as OrgUnitsList } from './List';\nconst error404 = new FetchError({\n  type: 'unknown',\n  message: '404 not found',\n  details: {\n    httpStatusCode: 404\n  }\n});\nconst defaultUserDataStoreData = () => Promise.reject(new FetchError(error404));\nconst deleteOrgUnitMock = jest.fn();\nconst renderList = async _ref => {\n  let {\n    rootOrgUnits = [testOrgUnit()],\n    otherOrgUnits = [],\n    userDataStore = defaultUserDataStoreData\n  } = _ref;\n  const routeOptions = {\n    handle: {\n      section: SECTIONS_MAP.organisationUnit\n    }\n  };\n  const organisationUnits = [...otherOrgUnits, ...rootOrgUnits];\n  useSchemaStore.getState().setSchemas({\n    organisationUnit: organisationUnitsSchemaMock\n  });\n  useCurrentUserStore.getState().setCurrentUser({\n    organisationUnits: rootOrgUnits,\n    authorities: new Set(),\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    settings: {}\n  });\n  const result = render( /*#__PURE__*/React.createElement(TestComponentWithRouter, {\n    path: \"/organisationUnits\",\n    customData: {\n      organisationUnits: (type, params) => {\n        if (type === 'read' && params.id !== undefined) {\n          const foundOrgUnit = organisationUnits.find(ou => ou.id === params.id);\n          return foundOrgUnit;\n        }\n        if (type === 'read') {\n          const regex = /:(\\w+)$/;\n          const orgUnitFilter = params.params.filter[0].match(regex)[1];\n          const filteredOrgUnits = organisationUnits.filter(ou => {\n            var _ou$parent;\n            return ou.id === orgUnitFilter || ((_ou$parent = ou.parent) === null || _ou$parent === void 0 ? void 0 : _ou$parent.id) === orgUnitFilter;\n          });\n          return {\n            organisationUnits: filteredOrgUnits\n          };\n        }\n        if (type === 'delete') {\n          deleteOrgUnitMock(params);\n        }\n      },\n      userDataStore\n    },\n    routeOptions: routeOptions\n  }, /*#__PURE__*/React.createElement(OrgUnitsList, null)));\n  await waitForElementToBeRemoved(() => result.queryByTestId('dhis2-uicore-circularloader'));\n  return result;\n};\ndescribe('Organisation unit list', () => {\n  const originalWarn = console.warn;\n  jest.spyOn(console, 'warn').mockImplementation(value => {\n    if (!value.match(/No server timezone/)) {\n      originalWarn(value);\n    }\n  });\n  it('should show evey org unit in the right order', async () => {\n    const rootOrg1 = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const rootOrg2 = testOrgUnit({\n      level: 2,\n      childCount: 1\n    });\n    const root1Level2Child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 1\n    });\n    const root1Level2Child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 0\n    });\n    const root1Level3Child1 = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg1, root1Level2Child1],\n      parentId: root1Level2Child1.id,\n      childCount: 0\n    });\n    const root2Level3Child = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg2],\n      parentId: rootOrg2.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg1, rootOrg2],\n      otherOrgUnits: [root1Level2Child1, root1Level2Child2, root1Level3Child1, root2Level3Child]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(6);\n    expect(tableRows[0]).toHaveTextContent('Name');\n    expect(tableRows[0]).toHaveTextContent('Id');\n    expect(tableRows[0]).toHaveTextContent('Code');\n    expect(tableRows[0]).toHaveTextContent('Last updated');\n    expect(tableRows[0]).toHaveTextContent('Actions');\n    expect(tableRows[1]).toHaveTextContent(rootOrg1.displayName);\n    expect(tableRows[1]).toHaveTextContent(rootOrg1.id);\n    expect(tableRows[1]).toHaveTextContent(rootOrg1.code);\n    expect(tableRows[1]).toHaveTextContent(getRelativeTime(new Date(rootOrg1.lastUpdated)));\n    expect(tableRows[2]).toHaveTextContent(root1Level2Child1.displayName);\n    expect(tableRows[2]).toHaveTextContent(root1Level2Child1.id);\n    expect(tableRows[2]).toHaveTextContent(root1Level2Child1.code);\n    expect(tableRows[2]).toHaveTextContent(getRelativeTime(new Date(root1Level2Child1.lastUpdated)));\n    expect(tableRows[3]).toHaveTextContent(root1Level2Child2.displayName);\n    expect(tableRows[3]).toHaveTextContent(root1Level2Child2.id);\n    expect(tableRows[3]).toHaveTextContent(root1Level2Child2.code);\n    expect(tableRows[3]).toHaveTextContent(getRelativeTime(new Date(root1Level2Child2.lastUpdated)));\n    expect(tableRows[4]).toHaveTextContent(rootOrg2.displayName);\n    expect(tableRows[4]).toHaveTextContent(rootOrg2.id);\n    expect(tableRows[4]).toHaveTextContent(rootOrg2.code);\n    expect(tableRows[4]).toHaveTextContent(getRelativeTime(new Date(rootOrg2.lastUpdated)));\n    expect(tableRows[5]).toHaveTextContent(root2Level3Child.displayName);\n    expect(tableRows[5]).toHaveTextContent(root2Level3Child.id);\n    expect(tableRows[5]).toHaveTextContent(root2Level3Child.code);\n    expect(tableRows[5]).toHaveTextContent(getRelativeTime(new Date(root2Level3Child.lastUpdated)));\n  });\n  it('should collapse visible tree nodes', async () => {\n    const rootOrg1 = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const rootOrg2 = testOrgUnit({\n      level: 2,\n      childCount: 1\n    });\n    const root1Level2Child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 1\n    });\n    const root1Level2Child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 0\n    });\n    const root1Level3Child1 = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg1, root1Level2Child1],\n      parentId: root1Level2Child1.id,\n      childCount: 0\n    });\n    const root2Level3Child = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg2],\n      parentId: rootOrg2.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg1, rootOrg2],\n      otherOrgUnits: [root1Level2Child1, root1Level2Child2, root1Level3Child1, root2Level3Child]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(6);\n    const rootOrg2Row = tableRows[4];\n    const rootOrg2RowExpandIcon = within(rootOrg2Row).getByTestId('row-expand-icon');\n    fireEvent.click(rootOrg2RowExpandIcon);\n    const tableRowsRefreshed = await screen.findAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRowsRefreshed.length).toBe(5);\n    expect(tableRows[1]).toHaveTextContent(rootOrg1.displayName);\n    expect(tableRows[2]).toHaveTextContent(root1Level2Child1.displayName);\n    expect(tableRows[3]).toHaveTextContent(root1Level2Child2.displayName);\n    expect(tableRows[4]).toHaveTextContent(rootOrg2.displayName);\n  });\n  it('should expand a node tree', async () => {\n    const rootOrg1 = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const rootOrg2 = testOrgUnit({\n      level: 2,\n      childCount: 1\n    });\n    const root1Level2Child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 1\n    });\n    const root1Level2Child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg1],\n      parentId: rootOrg1.id,\n      childCount: 0\n    });\n    const root1Level3Child1 = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg1, root1Level2Child1],\n      parentId: root1Level2Child1.id,\n      childCount: 0\n    });\n    const root2Level3Child = testOrgUnit({\n      level: 3,\n      ancestors: [rootOrg2],\n      parentId: rootOrg2.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg1, rootOrg2],\n      otherOrgUnits: [root1Level2Child1, root1Level2Child2, root1Level3Child1, root2Level3Child]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(6);\n    const root1Level2Child1Row = tableRows[2];\n    const rootOrg2RowExpandIcon = within(root1Level2Child1Row).getByTestId('row-expand-icon');\n    fireEvent.click(rootOrg2RowExpandIcon);\n    let tableRowsRefreshed = [];\n    await waitFor(() => {\n      tableRowsRefreshed = screen.getAllByTestId('dhis2-uicore-datatablerow');\n      expect(tableRowsRefreshed.length).toBe(7);\n    });\n    expect(tableRowsRefreshed[1]).toHaveTextContent(rootOrg1.displayName);\n    expect(tableRowsRefreshed[2]).toHaveTextContent(root1Level2Child1.displayName);\n    expect(tableRowsRefreshed[3]).toHaveTextContent(root1Level3Child1.displayName);\n    expect(tableRowsRefreshed[4]).toHaveTextContent(root1Level2Child2.displayName);\n    expect(tableRowsRefreshed[5]).toHaveTextContent(rootOrg2.displayName);\n    expect(tableRowsRefreshed[6]).toHaveTextContent(root2Level3Child.displayName);\n  });\n  it('should show a clickable delete action when org unit can be deleted', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(2);\n    expect(tableRows[1]).toHaveTextContent(rootOrg.displayName);\n    const actionButton = within(tableRows[1]).getByTestId('row-actions-menu-button');\n    fireEvent.click(actionButton);\n    const actionsMenu = screen.getByTestId('row-actions-menu');\n    expect(actionsMenu).toBeVisible();\n    expect(within(actionsMenu).getByText('Delete').closest('li')).not.toHaveClass('disabled');\n  });\n  it('should show a disabled delete action when org unit can not be deleted', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: false\n      })\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(2);\n    expect(tableRows[1]).toHaveTextContent(rootOrg.displayName);\n    const actionButton = within(tableRows[1]).getByTestId('row-actions-menu-button');\n    fireEvent.click(actionButton);\n    const actionsMenu = screen.getByTestId('row-actions-menu');\n    expect(actionsMenu).toBeVisible();\n    expect(within(actionsMenu).getByText('Delete').closest('li')).toHaveClass('disabled');\n  });\n  it('deletes an org unit when possible', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    expect(tableRows[2]).toHaveTextContent(child1.displayName);\n    const actionButton = within(tableRows[2]).getByTestId('row-actions-menu-button');\n    fireEvent.click(actionButton);\n    const actionsMenu = screen.getByTestId('row-actions-menu');\n    expect(actionsMenu).toBeVisible();\n    fireEvent.click(within(actionsMenu).getByText('Delete'));\n    const deleteConfirmationModal = await screen.findByTestId('delete-confirmation-modal');\n    expect(deleteConfirmationModal).toBeVisible();\n    fireEvent.click(within(deleteConfirmationModal).getByRole('button', {\n      name: 'Confirm deletion'\n    }));\n    await waitFor(() => {\n      expect(deleteOrgUnitMock).toHaveBeenCalledWith(expect.objectContaining({\n        id: child1.id\n      }));\n    });\n  });\n  it('has a link to an org unit edit page in the row actions menu', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    expect(screen.queryByText('Organisation unit management')).toBeVisible();\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    expect(tableRows[2]).toHaveTextContent(child1.displayName);\n    const actionButton = within(tableRows[2]).getByTestId('row-actions-menu-button');\n    fireEvent.click(actionButton);\n    const actionsMenu = screen.getByTestId('row-actions-menu');\n    expect(actionsMenu).toBeVisible();\n    expect(within(actionsMenu).getByText('Edit').closest('a')).toHaveAttribute('href', `/organisationUnits/${child1.id}`);\n  });\n  it('has a link to an org unit edit page outside the action menu', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    expect(screen.queryByText('Organisation unit management')).toBeVisible();\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    expect(tableRows[2]).toHaveTextContent(child1.displayName);\n    const actionCell = within(tableRows[2]).getByTestId('row-actions');\n    const links = within(actionCell).getAllByRole('link');\n    expect(links[0]).toHaveAttribute('href', `/organisationUnits/${child1.id}`);\n  });\n  it('has show a detail panel', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    expect(tableRows[2]).toHaveTextContent(child1.displayName);\n    const actionButton = within(tableRows[2]).getByTestId('row-actions-menu-button');\n    fireEvent.click(actionButton);\n    const actionsMenu = screen.getByTestId('row-actions-menu');\n    expect(actionsMenu).toBeVisible();\n    fireEvent.click(within(actionsMenu).getByText('Show details'));\n    const detailsPanel = await screen.findByTestId('details-panel');\n    expect(detailsPanel).toBeVisible();\n    expect(detailsPanel).toHaveTextContent(child1.displayName);\n    expect(detailsPanel).toHaveTextContent(child1.code);\n    expect(detailsPanel).toHaveTextContent(child1.id);\n    expect(detailsPanel).toHaveTextContent(child1.createdBy.displayName);\n    expect(detailsPanel).toHaveTextContent(child1.lastUpdatedBy.displayName);\n    expect(within(detailsPanel).getByText('API URL link').closest('a')).toHaveAttribute('href', child1.href);\n  });\n  it('should open and close the multi select toolbar', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    const secondChildCheckBox = within(tableRows[3]).getByRole('checkbox');\n    fireEvent.click(secondChildCheckBox);\n    const toolbar = screen.getByTestId('dhis2-uicore-tabletoolbar');\n    expect(toolbar).toBeVisible();\n    expect(secondChildCheckBox).toBeChecked();\n    fireEvent.click(within(toolbar).getByText('Deselect all'));\n    expect(secondChildCheckBox).not.toBeChecked();\n    expect(toolbar).not.toBeVisible();\n  });\n  it('should download all selected rows', async () => {\n    const rootOrg = testOrgUnit({\n      level: 1,\n      childCount: 2\n    });\n    const child1 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0,\n      access: testAccess({\n        deleteAccess: true\n      })\n    });\n    const child2 = testOrgUnit({\n      level: 2,\n      ancestors: [rootOrg],\n      parentId: rootOrg.id,\n      childCount: 0\n    });\n    const screen = await renderList({\n      rootOrgUnits: [rootOrg],\n      otherOrgUnits: [child1, child2]\n    });\n    const tableRows = screen.getAllByTestId('dhis2-uicore-datatablerow');\n    expect(tableRows.length).toBe(4);\n    const rootRow = tableRows[1];\n    const secondChildRow = tableRows[3];\n    fireEvent.click(within(rootRow).getByRole('checkbox'));\n    fireEvent.click(within(secondChildRow).getByRole('checkbox'));\n    const toolbar = screen.getByTestId('dhis2-uicore-tabletoolbar');\n    fireEvent.click(within(toolbar).getByText('Download'));\n    const downloadModal = await screen.findByTestId('download-modal');\n    expect(downloadModal).toBeVisible();\n    const downloadModelsSelector = within(downloadModal).getByTestId('download-models-to-include');\n    const radios = within(downloadModelsSelector).getAllByRole('radio');\n    const selectedRadio = radios.find(radio => radio.checked);\n    expect(selectedRadio).not.toBeNull();\n    expect(selectedRadio.closest('label')).toHaveTextContent('Only selected (2)');\n  });\n});","import { getCoreRowModel, getExpandedRowModel, useReactTable } from '@tanstack/react-table';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { IdentifiableFilter, SectionList } from '../../../components';\nimport { DefaultDetailsPanelContent, DetailsPanel } from '../../../components/sectionList/detailsPanel';\nimport { useModelListView } from '../../../components/sectionList/listView';\nimport { ModelValue } from '../../../components/sectionList/modelValue/ModelValue';\nimport { SectionListTitle } from '../../../components/sectionList/SectionListTitle';\nimport { Toolbar } from '../../../components/sectionList/toolbar';\nimport { SchemaName, useSchema, useSectionListFilter } from '../../../lib';\nimport { getFieldFilter } from '../../../lib/models/path';\nimport { useCurrentUserRootOrgUnits } from '../../../lib/user/currentUserStore';\nimport css from './OrganisationUnitList.module.css';\nimport { OrganisationUnitListMessage } from './OrganisationUnitListMessage';\nimport { OrganisationUnitRow } from './OrganisationUnitRow';\nimport { useFilteredOrgUnits, usePaginatedChildrenOrgUnitsController } from './useOrganisationUnits';\nconst useColumns = () => {\n  const {\n    columns: selectedColumns\n  } = useModelListView();\n  const schema = useSchema(SchemaName.organisationUnit);\n  const columnDefinitions = useMemo(() => selectedColumns.map(descriptor => {\n    return {\n      accessorKey: descriptor.path,\n      header: descriptor.label,\n      cell: _ref => {\n        let {\n          row\n        } = _ref;\n        return /*#__PURE__*/React.createElement(ModelValue, {\n          path: descriptor.path === 'name' ? 'displayName' : descriptor.path,\n          schema: schema,\n          sectionModel: row.original\n        });\n      },\n      meta: {\n        fieldFilter: getFieldFilter(schema, descriptor.path)\n      }\n    };\n  }), [selectedColumns, schema]);\n  return columnDefinitions;\n};\nexport const OrganisationUnitList = () => {\n  const columnDefinitions = useColumns();\n  const [identifiableFilter] = useSectionListFilter('identifiable');\n  const userRootOrgUnits = useCurrentUserRootOrgUnits();\n  const initialExpandedState = useMemo(() => {\n    return Object.fromEntries(userRootOrgUnits.map(ou => [ou.id, true]));\n  }, [userRootOrgUnits]);\n  const [parentIdsToLoad, setParentIdsToLoad] = useState(() => initialExpandedState);\n  // the expanded organisationUnit Ids\n  const [expanded, setExpanded] = useState(() => initialExpandedState);\n  const [detailsId, setDetailsId] = useState();\n  const handleDetailsClick = useCallback(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    setDetailsId(prevDetailsId => prevDetailsId === id ? undefined : id);\n  }, [setDetailsId]);\n  const fieldFilters = columnDefinitions.map(column => column.meta.fieldFilter);\n  const {\n    queries,\n    fetchNextPage\n  } = usePaginatedChildrenOrgUnitsController({\n    parentIds: parentIdsToLoad,\n    fieldFilters\n  });\n  const isFiltering = !!identifiableFilter;\n  const hasErrored = queries.some(query => query.isError);\n  const orgUnitFiltered = useFilteredOrgUnits({\n    searchQuery: identifiableFilter,\n    fieldFilters,\n    enabled: isFiltering\n  });\n\n  // expand ancestors of the filtered org units\n  useEffect(() => {\n    // reset state when not filtering\n    if (!isFiltering) {\n      setExpanded(initialExpandedState);\n      setParentIdsToLoad(initialExpandedState);\n      return;\n    }\n    // if we are filtering, expand all, and reset parentIdsToLoad\n    setExpanded(true);\n    // hide data from usePaginatedChildrenOrgUnitsController\n    setParentIdsToLoad({});\n  }, [isFiltering, initialExpandedState]);\n  const {\n    rootOrgUnits,\n    flatOrgUnits\n  } = useMemo(() => {\n    const rootOrgUnits = new Map();\n    //gather all loaded orgUnits and their ancestors and deduplicate them\n\n    const deduplicatedOrgUnits = queries.concat(orgUnitFiltered).flatMap(q => {\n      var _q$data$organisationU;\n      if (!q.data) {\n        return [];\n      }\n      const queryOrgs = (_q$data$organisationU = q.data.organisationUnits) !== null && _q$data$organisationU !== void 0 ? _q$data$organisationU : [];\n      const ancestors = queryOrgs.flatMap(ou => ou.ancestors);\n      return [...queryOrgs, ...ancestors];\n    }).reduce((acc, ou) => {\n      if (initialExpandedState[ou.id]) {\n        rootOrgUnits.set(ou.id, ou);\n      }\n      acc[ou.id] = ou;\n      return acc;\n    }, {});\n    return {\n      rootOrgUnits: Array.from(rootOrgUnits.values()),\n      flatOrgUnits: Object.values(deduplicatedOrgUnits)\n    };\n  }, [queries, orgUnitFiltered, initialExpandedState]);\n  const handleExpand = useCallback(valueOrUpdater => {\n    // when we expand something and are not filtering, we need to load the children\n    // also translate expandedState === true (expand all) to expand all loaded units\n    const getAllExpanded = () => Object.fromEntries(flatOrgUnits.map(ou => [ou.id, true]));\n    // we always want to keep root loaded\n    const getValueWithRoot = value => ({\n      ...initialExpandedState,\n      ...value\n    });\n    if (typeof valueOrUpdater === 'function') {\n      setExpanded(old => {\n        const value = valueOrUpdater(old);\n        if (!isFiltering) {\n          setParentIdsToLoad(value === true ? getAllExpanded() : getValueWithRoot(value));\n        }\n        return value;\n      });\n    } else {\n      setExpanded(valueOrUpdater);\n      if (!isFiltering) {\n        setParentIdsToLoad(valueOrUpdater === true ? getAllExpanded() : getValueWithRoot(valueOrUpdater));\n      }\n    }\n  }, [isFiltering, setExpanded, flatOrgUnits, initialExpandedState]);\n  const table = useReactTable({\n    columns: columnDefinitions,\n    // note data must change for table to re-compute\n    // thus we have to compute the root whenever data changes (since subrows is not part of the data)\n    data: rootOrgUnits,\n    getRowId: row => row.id,\n    getCoreRowModel: getCoreRowModel(),\n    getRowCanExpand: row => row.original.childCount > 0,\n    getSubRows: row => {\n      return flatOrgUnits.filter(d => {\n        var _d$parent;\n        return ((_d$parent = d.parent) === null || _d$parent === void 0 ? void 0 : _d$parent.id) === row.id;\n      });\n    },\n    getExpandedRowModel: getExpandedRowModel(),\n    onExpandedChange: handleExpand,\n    state: {\n      expanded\n    },\n    enableSubRowSelection: false\n  });\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SectionListTitle, null), /*#__PURE__*/React.createElement(IdentifiableFilter, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.listDetailsWrapper\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    selectedModels: new Set(table.getSelectedRowModel().flatRows.map(r => r.id)),\n    onDeselectAll: () => {\n      table.resetRowSelection(true);\n    }\n  }), /*#__PURE__*/React.createElement(SectionList, {\n    headerColumns: table.getHeaderGroups()[0].headers.map(h => ({\n      label: h.column.columnDef.header,\n      path: h.column.id\n    }))\n  }, /*#__PURE__*/React.createElement(OrganisationUnitListMessage, {\n    isFiltering: isFiltering,\n    queries: queries.concat(orgUnitFiltered),\n    orgUnitCount: table.getRowCount()\n  }), table.getRowModel().rows.map(row => /*#__PURE__*/React.createElement(OrganisationUnitRow, {\n    key: row.id,\n    row: row,\n    toggleShowAll: id => setParentIdsToLoad(prev => {\n      const {\n        [id]: wasShown,\n        ...withoutId\n      } = prev;\n      if (wasShown) {\n        return withoutId;\n      }\n      return {\n        ...prev,\n        [id]: true\n      };\n    }),\n    showAllActive: parentIdsToLoad[row.original.id] === true,\n    onShowDetailsClick: handleDetailsClick,\n    isFiltering: isFiltering,\n    hasErrored: hasErrored,\n    fetchNextPage: fetchNextPage\n  }))), detailsId && /*#__PURE__*/React.createElement(DetailsPanel, {\n    onClose: () => setDetailsId(undefined)\n    // reset component state when modelId changes\n    ,\n    key: detailsId\n  }, /*#__PURE__*/React.createElement(DefaultDetailsPanelContent, {\n    modelId: detailsId\n  }))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, FlyoutMenu, IconEdit16, IconMore16, IconMore24, MenuItem, Popover } from '@dhis2/ui';\nimport React, { useState, useRef } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useHref, useLinkClickHandler } from 'react-router-dom';\nimport { DeleteAction } from '../../../components/sectionList/listActions/DeleteAction';\nimport { ListActions, ActionEdit } from '../../../components/sectionList/listActions/SectionListActions';\nimport { TooltipWrapper } from '../../../components/tooltip';\nimport { TOOLTIPS } from '../../../lib';\nimport { canDeleteModel } from '../../../lib/models/access';\nexport const OrganisationUnitListActions = _ref => {\n  let {\n    model,\n    onShowDetailsClick\n  } = _ref;\n  const deletable = canDeleteModel(model);\n  const queryClient = useQueryClient();\n  const handleDeleteSuccess = () => {\n    queryClient.invalidateQueries({\n      queryKey: [{\n        resource: 'organisationUnits'\n      }]\n    });\n  };\n  return /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(ActionEdit, {\n    modelId: model.id\n  }), /*#__PURE__*/React.createElement(OrganisationUnitActionMore, {\n    deletable: deletable,\n    model: model\n    // onTranslateClick={() => onOpenTranslationClick(model)}\n    ,\n    onDeleteSuccess: handleDeleteSuccess,\n    onShowDetailsClick: onShowDetailsClick\n  }));\n};\nconst OrganisationUnitActionMore = _ref2 => {\n  let {\n    deletable,\n    model,\n    // onTranslateClick,\n    onDeleteSuccess,\n    onShowDetailsClick\n  } = _ref2;\n  const [open, setOpen] = useState(false);\n  const ref = useRef(null);\n  const href = useHref(model.id, {\n    relative: 'path'\n  });\n  const handleEditClick = useLinkClickHandler(model.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: () => setOpen(!open),\n    dataTest: \"row-actions-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, null)\n  }), open && /*#__PURE__*/React.createElement(Popover, {\n    arrow: false,\n    placement: \"bottom-end\",\n    reference: ref,\n    onClickOutside: () => setOpen(false),\n    dataTest: \"row-actions-menu\"\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Show details'),\n    icon: /*#__PURE__*/React.createElement(IconMore16, null),\n    onClick: () => {\n      onShowDetailsClick(model);\n      setOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Edit'),\n    icon: /*#__PURE__*/React.createElement(IconEdit16, null),\n    onClick: (_, e) => {\n      handleEditClick(e);\n      setOpen(false);\n    },\n    target: \"_blank\",\n    href: href\n  }), /*#__PURE__*/React.createElement(TooltipWrapper, {\n    condition: !deletable,\n    content: TOOLTIPS.noDeleteAccess\n  }, /*#__PURE__*/React.createElement(DeleteAction, {\n    model: model,\n    disabled: !deletable,\n    onDeleteSuccess: () => {\n      onDeleteSuccess();\n      setOpen(false);\n    },\n    onCancel: () => setOpen(false)\n  })))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Center } from '@dhis2/ui';\nimport React from 'react';\nimport { SectionListLoader } from '../../../components/sectionList/SectionListLoader';\nimport { SectionListEmpty, SectionListError, SectionListMessage } from '../../../components/sectionList/SectionListMessages';\nexport const OrganisationUnitListMessage = _ref => {\n  let {\n    orgUnitCount,\n    isFiltering,\n    queries\n  } = _ref;\n  const firstError = queries.find(query => query.error);\n  if (firstError) {\n    console.error(firstError.error);\n    return /*#__PURE__*/React.createElement(SectionListError, null);\n  }\n\n  // we only show loading indicator when we don't have any data to show\n  // and some query is loading\n  const showLoading = orgUnitCount < 1 && queries.some(query => query.isLoading);\n  if (showLoading) {\n    return /*#__PURE__*/React.createElement(SectionListLoader, null);\n  }\n  if (isFiltering && orgUnitCount < 1) {\n    return /*#__PURE__*/React.createElement(SectionListEmpty, null);\n  }\n  // if for some reason we don't have any data, are not loading and are not filtering\n  // it could mean that the user doesn't have access to any org units\n  if (orgUnitCount < 1) {\n    return /*#__PURE__*/React.createElement(SectionListMessage, null, /*#__PURE__*/React.createElement(Center, null, i18n.t('No organisation units available')));\n  }\n  return null;\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Checkbox, DataTableCell, DataTableRow, IconArrowDown16, IconArrowUp16, IconChevronDown16, IconChevronRight16 } from '@dhis2/ui';\nimport { flexRender } from '@tanstack/react-table';\nimport React from 'react';\nimport css from './OrganisationUnitList.module.css';\nimport { OrganisationUnitListActions } from './OrganisationUnitListActions';\nexport const OrganisationUnitRow = _ref => {\n  let {\n    row,\n    toggleShowAll,\n    showAllActive,\n    isFiltering,\n    fetchNextPage,\n    onShowDetailsClick,\n    hasErrored\n  } = _ref;\n  const parentRow = row.getParentRow();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTableRow, {\n    key: row.id\n  }, /*#__PURE__*/React.createElement(DataTableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: `${row.depth * 2}rem`,\n      display: 'flex'\n    }\n  }, row.getCanExpand() ? /*#__PURE__*/React.createElement(React.Fragment, null, isFiltering && (showAllActive || row.original.childCount !== row.subRows.length) && /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: () => {\n      toggleShowAll(row.original.id);\n    },\n    icon: showAllActive ? /*#__PURE__*/React.createElement(IconArrowUp16, null) : /*#__PURE__*/React.createElement(IconArrowDown16, null)\n  }, \"Show all\"), /*#__PURE__*/React.createElement(Button, {\n    className: css.expandButton,\n    secondary: true,\n    type: \"button\",\n    dataTest: \"row-expand-icon\",\n    loading: row.getIsExpanded() && row.subRows.length < 1 && !hasErrored,\n    icon: row.getIsExpanded() ? /*#__PURE__*/React.createElement(IconChevronDown16, null) : /*#__PURE__*/React.createElement(IconChevronRight16, null),\n    onClick: row.getToggleExpandedHandler()\n  })) : null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: row.getIsSelected(),\n    onChange: _ref2 => {\n      let {\n        checked\n      } = _ref2;\n      return row.toggleSelected(checked);\n    }\n  }))), row.getVisibleCells().map(cell => {\n    return /*#__PURE__*/React.createElement(DataTableCell, {\n      key: cell.id\n    }, flexRender(cell.column.columnDef.cell, cell.getContext()));\n  }), /*#__PURE__*/React.createElement(DataTableCell, null, /*#__PURE__*/React.createElement(OrganisationUnitListActions, {\n    model: row.original,\n    onShowDetailsClick: onShowDetailsClick\n    // onOpenTranslationClick={()=>{}}\n  }))), !isFiltering && parentRow && parentRow.getIsExpanded() && parentRow.subRows.length < (parentRow === null || parentRow === void 0 ? void 0 : parentRow.original.childCount) && row === parentRow.subRows[parentRow.subRows.length - 1] && /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    colSpan: \"100\",\n    style: {\n      textAlign: 'center'\n    },\n    onClick: () => fetchNextPage(parentRow.original.id)\n  }, i18n.t('Load more for {{orgUnitName}}', {\n    orgUnitName: parentRow.original.displayName\n  }))));\n};","import { useCallback, useMemo, useState } from 'react';\nimport { useQuery, useQueries } from 'react-query';\nimport { useBoundResourceQueryFn } from '../../../lib/query/useBoundQueryFn';\nconst staticOrgUnitFields = ['id', 'access', 'displayName', 'level', 'path', 'parent', 'children~size~rename(childCount)'];\nconst getOrgUnitFieldFilters = fieldFilters => {\n  const orgUnitFields = staticOrgUnitFields.concat(fieldFilters);\n  const ancestorFields = `ancestors[${orgUnitFields.join()},href]`;\n  return orgUnitFields.concat(ancestorFields);\n};\nexport const useFilteredOrgUnits = _ref => {\n  let {\n    fieldFilters,\n    searchQuery,\n    enabled\n  } = _ref;\n  const boundQueryFn = useBoundResourceQueryFn();\n  const resourceQuery = {\n    resource: 'organisationUnits',\n    params: {\n      fields: getOrgUnitFieldFilters(fieldFilters),\n      query: searchQuery,\n      withinUserHierarchy: true\n    }\n  };\n  return useQuery({\n    enabled,\n    queryKey: [resourceQuery],\n    queryFn: boundQueryFn,\n    staleTime: 60000,\n    cacheTime: 60000,\n    keepPreviousData: true\n  });\n};\nexport const usePaginatedChildrenOrgUnitsController = options => {\n  const boundQueryFn = useBoundResourceQueryFn();\n  const parentIds = options.parentIds;\n\n  // store a \"map\" of pages to fetch for each parent id\n  const [parentIdPages, setFetchPages] = useState(Object.fromEntries(Object.keys(parentIds).map(id => [id, [1]])));\n\n  // this will create a query for each parent id and each page\n  // eg if parentIds = ['a', 'b'] and fetchPages = {a: [1, 2], b: [1]}\n  // then queries will be [['a', 1], ['a', 2], ['b', 1]]\n  const flatParentIdPages = useMemo(() => {\n    return Object.keys(parentIds).flatMap(id => {\n      const pages = parentIdPages[id] || [1];\n      return pages.map(p => [id, p]);\n    });\n  }, [parentIds, parentIdPages]);\n  const fetchNextPage = useCallback(id => {\n    setFetchPages(prev => {\n      const pages = prev[id] || [1];\n      return {\n        ...prev,\n        [id]: [...pages, pages[pages.length - 1] + 1]\n      };\n    });\n  }, [setFetchPages]);\n  const queryObjects = flatParentIdPages.map(_ref2 => {\n    let [id, page] = _ref2;\n    const resourceQuery = {\n      resource: 'organisationUnits',\n      params: {\n        fields: getOrgUnitFieldFilters(options.fieldFilters),\n        // `id:eq:id` is for an edge-case where a root-unit is a leaf-node\n        // and `parent.id`-filter would return empty results\n        filter: [`parent.id:eq:${id}`, `id:eq:${id}`],\n        rootJunction: 'OR',\n        order: 'displayName:asc',\n        page: page\n      }\n    };\n    const queryOptions = {\n      enabled: options.enabled,\n      queryKey: [resourceQuery],\n      queryFn: boundQueryFn,\n      staleTime: 60000,\n      cacheTime: 60000,\n      meta: {\n        parent: id\n      }\n    };\n    return queryOptions;\n  });\n  const queries = useQueries(queryObjects);\n  return {\n    queries,\n    fetchNextPage\n  };\n};","import { CustomDataProvider, Provider } from '@dhis2/app-runtime';\nimport React from 'react';\nimport { RouterProvider, createMemoryRouter } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\nexport const ComponentWithProvider = _ref => {\n  let {\n    dataForCustomProvider,\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Provider, {\n    config: {\n      baseUrl: 'http://dhis2-imaginary-test-server',\n      apiVersion: 41\n    },\n    plugin: false,\n    parentAlertsAdd: () => undefined,\n    showAlertsInPlugin: true\n  }, /*#__PURE__*/React.createElement(CustomDataProvider, {\n    data: dataForCustomProvider,\n    options: {\n      failOnMiss: true\n    }\n  }, children));\n};\nconst TestComponentWithRouter = _ref2 => {\n  let {\n    path,\n    customData,\n    routeOptions,\n    children\n  } = _ref2;\n  const routes = [{\n    path,\n    element: /*#__PURE__*/React.createElement(ComponentWithProvider, {\n      dataForCustomProvider: customData\n    }, /*#__PURE__*/React.createElement(QueryParamProvider, {\n      adapter: ReactRouter6Adapter\n    }, children)),\n    ...routeOptions\n  }];\n  const router = createMemoryRouter(routes, {\n    initialEntries: [path],\n    initialIndex: 0\n  });\n  return /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router\n  });\n};\nexport default TestComponentWithRouter;","// extracted by mini-css-extract-plugin\nexport default {\"expandButton\":\"OrganisationUnitList_expandButton__AjbgN\",\"listDetailsWrapper\":\"OrganisationUnitList_listDetailsWrapper__eX9Q3\"};"],"names":["Component","React","OrganisationUnitList","randomDhis2Id","faker","helpers","fromRegExp","testAccess","deleteAccess","datatype","boolean","externalizeAccess","manageAccess","readAccess","updateAccess","writeAccess","readDataAcess","writeDataAccess","arguments","length","undefined","data","read","write","delete","externalize","manage","update","testUser","id","code","name","person","fullName","username","internet","userName","displayName","testOrgUnit","string","alphanumeric","location","city","created","date","past","toUTCString","lastUpdated","createdBy","lastUpdatedBy","parentId","ancestors","level","childCount","access","sharing","shortName","slice","parent","path","href","url","error404","FetchError","type","message","details","httpStatusCode","defaultUserDataStoreData","Promise","reject","deleteOrgUnitMock","jest","fn","renderList","async","rootOrgUnits","otherOrgUnits","userDataStore","_ref","routeOptions","handle","section","SECTIONS_MAP","organisationUnit","organisationUnits","useSchemaStore","getState","setSchemas","organisationUnitsSchemaMock","useCurrentUserStore","setCurrentUser","authorities","Set","email","settings","result","render","TestComponentWithRouter","customData","params","find","ou","regex","orgUnitFilter","filter","match","_ou$parent","OrgUnitsList","waitForElementToBeRemoved","queryByTestId","describe","originalWarn","console","warn","spyOn","mockImplementation","value","it","rootOrg1","rootOrg2","root1Level2Child1","root1Level2Child2","root1Level3Child1","root2Level3Child","tableRows","getAllByTestId","expect","toBe","toHaveTextContent","getRelativeTime","Date","screen","rootOrg2Row","rootOrg2RowExpandIcon","within","getByTestId","fireEvent","click","tableRowsRefreshed","findAllByTestId","root1Level2Child1Row","waitFor","rootOrg","actionButton","actionsMenu","toBeVisible","getByText","closest","not","toHaveClass","child1","child2","deleteConfirmationModal","findByTestId","getByRole","toHaveBeenCalledWith","objectContaining","queryByText","toHaveAttribute","actionCell","links","getAllByRole","detailsPanel","secondChildCheckBox","toolbar","toBeChecked","rootRow","secondChildRow","downloadModal","downloadModelsSelector","selectedRadio","radio","checked","toBeNull","columnDefinitions","useColumns","columns","selectedColumns","useModelListView","schema","useSchema","SchemaName","useMemo","map","descriptor","accessorKey","header","label","cell","row","ModelValue","sectionModel","original","meta","fieldFilter","getFieldFilter","identifiableFilter","useSectionListFilter","userRootOrgUnits","useCurrentUserRootOrgUnits","initialExpandedState","Object","fromEntries","parentIdsToLoad","setParentIdsToLoad","useState","expanded","setExpanded","detailsId","setDetailsId","handleDetailsClick","useCallback","_ref2","prevDetailsId","fieldFilters","column","queries","fetchNextPage","usePaginatedChildrenOrgUnitsController","parentIds","isFiltering","hasErrored","some","query","isError","orgUnitFiltered","useFilteredOrgUnits","searchQuery","enabled","useEffect","flatOrgUnits","Map","deduplicatedOrgUnits","concat","flatMap","q","_q$data$organisationU","queryOrgs","reduce","acc","set","Array","from","values","handleExpand","valueOrUpdater","getAllExpanded","getValueWithRoot","old","table","useReactTable","getRowId","getCoreRowModel","getRowCanExpand","getSubRows","d","_d$parent","getExpandedRowModel","onExpandedChange","state","enableSubRowSelection","SectionListTitle","IdentifiableFilter","className","css","listDetailsWrapper","Toolbar","selectedModels","getSelectedRowModel","flatRows","r","onDeselectAll","resetRowSelection","SectionList","headerColumns","getHeaderGroups","headers","h","columnDef","OrganisationUnitListMessage","orgUnitCount","getRowCount","getRowModel","rows","OrganisationUnitRow","key","toggleShowAll","prev","wasShown","withoutId","showAllActive","onShowDetailsClick","DetailsPanel","onClose","DefaultDetailsPanelContent","modelId","OrganisationUnitListActions","model","deletable","canDeleteModel","queryClient","useQueryClient","ListActions","ActionEdit","OrganisationUnitActionMore","onDeleteSuccess","handleDeleteSuccess","invalidateQueries","queryKey","resource","open","setOpen","ref","useRef","useHref","relative","handleEditClick","useLinkClickHandler","Button","small","secondary","onClick","dataTest","icon","IconMore24","Popover","arrow","placement","reference","onClickOutside","FlyoutMenu","MenuItem","dense","i18n","t","IconMore16","IconEdit16","_","e","target","TooltipWrapper","condition","content","TOOLTIPS","noDeleteAccess","DeleteAction","disabled","onCancel","firstError","error","SectionListError","isLoading","SectionListLoader","SectionListEmpty","SectionListMessage","Center","parentRow","getParentRow","DataTableRow","DataTableCell","style","paddingLeft","depth","display","getCanExpand","subRows","IconArrowUp16","IconArrowDown16","expandButton","loading","getIsExpanded","IconChevronDown16","IconChevronRight16","getToggleExpandedHandler","Checkbox","getIsSelected","onChange","toggleSelected","getVisibleCells","flexRender","getContext","colSpan","textAlign","orgUnitName","staticOrgUnitFields","getOrgUnitFieldFilters","orgUnitFields","ancestorFields","join","boundQueryFn","useBoundResourceQueryFn","resourceQuery","fields","withinUserHierarchy","useQuery","queryFn","staleTime","cacheTime","keepPreviousData","options","parentIdPages","setFetchPages","keys","flatParentIdPages","p","pages","queryObjects","page","rootJunction","order","useQueries","ComponentWithProvider","dataForCustomProvider","children","Provider","config","baseUrl","apiVersion","plugin","parentAlertsAdd","showAlertsInPlugin","CustomDataProvider","failOnMiss","routes","element","QueryParamProvider","adapter","ReactRouter6Adapter","router","createMemoryRouter","initialEntries","initialIndex","RouterProvider"],"sourceRoot":""}