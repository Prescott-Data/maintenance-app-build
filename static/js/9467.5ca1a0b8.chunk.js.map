{"version":3,"file":"static/js/9467.5ca1a0b8.chunk.js","mappings":"uRAGA,MAAM,oBACJA,EAAmB,aACnBC,EAAY,MACZC,EAAK,oBACLC,GACEC,EAAAA,GACSC,EAAoBJ,EAAaK,MAAMN,GAAqBO,OAAO,CAC9EC,GAAIC,EAAAA,EAAEC,SAASC,WACfC,KAAMH,EAAAA,EAAEC,SAASG,OAAOF,WACxBG,YAAaL,EAAAA,EAAEC,SAASG,OAAOF,WAC/BT,QACAa,aAAcZ,EAAoBa,QAAQ,MAG/BC,GAAgBC,EAAAA,EAAAA,IAAYb,GAC5Bc,GAAWC,EAAAA,EAAAA,GAAmBf,E","sources":["D2App/pages/dataSetsWip/form/dataSetFormSchema.js"],"sourcesContent":["import { z } from 'zod';\nimport { getDefaults, modelFormSchemas } from '../../../lib';\nimport { createFormValidate } from '../../../lib/form/validate';\nconst {\n  withAttributeValues,\n  identifiable,\n  style,\n  referenceCollection\n} = modelFormSchemas;\nexport const dataSetFormSchema = identifiable.merge(withAttributeValues).extend({\n  id: z.string().optional(),\n  code: z.string().trim().optional(),\n  description: z.string().trim().optional(),\n  style,\n  dataElements: referenceCollection.default([])\n  // categoryCombo: z.object({ id: z.string() }),\n});\nexport const initialValues = getDefaults(dataSetFormSchema);\nexport const validate = createFormValidate(dataSetFormSchema);"],"names":["withAttributeValues","identifiable","style","referenceCollection","modelFormSchemas","dataSetFormSchema","merge","extend","id","z","string","optional","code","trim","description","dataElements","default","initialValues","getDefaults","validate","createFormValidate"],"sourceRoot":""}