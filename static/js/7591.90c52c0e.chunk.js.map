{"version":3,"file":"static/js/7591.90c52c0e.chunk.js","mappings":"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","sources":["D2App/pages/dataElements/fields/AggregationLevelsField.js","D2App/pages/dataElements/fields/AggregationTypeField.js","D2App/pages/dataElements/fields/CategoryComboField.js","D2App/pages/dataElements/fields/ColorAndIconField.js","D2App/pages/dataElements/fields/DomainField.js","D2App/pages/dataElements/fields/FieldMaskField.js","D2App/pages/dataElements/fields/FormNameField.js","D2App/pages/dataElements/fields/LegendSetField.js","D2App/pages/dataElements/fields/OptionSetCommentField.js","D2App/pages/dataElements/fields/OptionSetField.js","D2App/pages/dataElements/fields/UrlField.js","D2App/pages/dataElements/fields/ValueTypeField.js","D2App/pages/dataElements/fields/ZeroIsSignificantField.js","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/AggregationLevelsField.module.css?2462","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/CategoryComboField.module.css?8aba","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/DomainField.module.css?2da9","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/LegendSetField.module.css?85e3","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/OptionSetCommentField.module.css?6ee8","webpack://@dhis2/app-shell/./src/D2App/pages/dataElements/fields/OptionSetField.module.css?7034"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { AggregationLevelMultiSelect, EditableFieldWrapper } from '../../../components';\nimport classes from './AggregationLevelsField.module.css';\n\n/**\n *\n * AggregationLevels\n *\n */\nexport function AggregationLevelsField() {\n  const newAggregationLevelLink = useHref('/organisationUnitLevel/new');\n  const {\n    input,\n    meta\n  } = useField('aggregationLevels', {\n    multiple: true,\n    format: levels => levels.map(level => level.toString()),\n    parse: levels => levels.map(level => parseInt(level, 10)),\n    validateFields: []\n  });\n  const aggregationLevelHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-aggregationlevels\",\n    onRefresh: () => aggregationLevelHandle.current.refetch(),\n    onAddNew: () => window.open(newAggregationLevelLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.aggregationLevelsMultiSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"aggregationLevels\",\n    label: i18n.t('Aggregation level(s)'),\n    helpText: i18n.t('Choose how this data element is disaggregated'),\n    validationText: meta.touched ? meta.error : undefined,\n    error: meta.touched && !!meta.error,\n    dataTest: \"formfields-aggregationlevels\"\n  }, /*#__PURE__*/React.createElement(AggregationLevelMultiSelect, {\n    ref: aggregationLevelHandle,\n    invalid: meta.touched && !!meta.error,\n    inputWidth: \"400px\",\n    placeholder: \"\",\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus,\n    onRetryClick: () => aggregationLevelHandle.current.refetch()\n  }))));\n}","import i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { Field as FieldRFF, useForm, useField } from 'react-final-form';\nimport { AGGREGATION_TYPE, required, useSchemas } from '../../../lib';\nconst DISABLING_VALUE_TYPES = ['TEXT', 'LONG_TEXT', 'MULTI_TEXT', 'LETTER', 'PHONE_NUMBER', 'EMAIL', 'TRACKER_ASSOCIATE', 'USERNAME', 'FILE_RESOURCE', 'COORDINATE'];\n\n/**\n * Field rule: When value type has a certain value,\n *             disable aggregationType field\n * Field rule: When value type is disabled, set value to ''\n */\nconst aggregationTypeHelpText = i18n.t('The default way to aggregate this data element in analytics.');\nconst aggregationTypeDisabledHelpText = i18n.t('Disabled for the selected value type.');\nexport function AggregationTypeField() {\n  var _dataElement$properti;\n  const {\n    change\n  } = useForm();\n  const valueTypeField = useField('valueType');\n  const valueType = valueTypeField.input.value;\n  const disabled = DISABLING_VALUE_TYPES.includes(valueType);\n  useEffect(() => {\n    if (disabled) {\n      change('aggregationType', 'NONE');\n    }\n  }, [change, disabled]);\n  const {\n    dataElement\n  } = useSchemas();\n  const options = ((_dataElement$properti = dataElement.properties.aggregationType.constants) === null || _dataElement$properti === void 0 ? void 0 : _dataElement$properti.map(constant => ({\n    value: constant,\n    label: AGGREGATION_TYPE[constant]\n  }))) || [];\n  const helpText = disabled ? `${aggregationTypeHelpText} ${aggregationTypeDisabledHelpText}` : aggregationTypeHelpText;\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    disabled: disabled,\n    component: SingleSelectFieldFF,\n    dataTest: \"formfields-aggregationtype\",\n    required: !disabled,\n    inputWidth: \"400px\",\n    name: \"aggregationType\",\n    label: disabled ? i18n.t('Aggregation type') : i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Aggregation type')\n    }),\n    helpText: helpText,\n    options: options,\n    validateFields: [],\n    validate: required\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useEffect, useRef } from 'react';\nimport { useField, useForm, useFormState } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { CategoryComboSelect, EditableFieldWrapper } from '../../../components';\nimport { useDefaultCategoryComboQuery } from '../../../lib';\nimport classes from './CategoryComboField.module.css';\nconst required = value => {\n  if (!value.id) {\n    return i18n.t('Required');\n  }\n};\n\n/*\n * @TODO: Verify that the api ignores the category combo when it's disabled.\n *        If it does not, file a jira issue and \"escalate\" this so it will be\n *        implemented\n *\n * Field rule: Disable when domainType is TRACKER\n * Field rule: Set categoryCombo.id to the default category combo when\n *             domainType is Tracker\n */\nexport function CategoryComboField() {\n  var _defaultCategoryCombo2;\n  const defaultCategoryComboQuery = useDefaultCategoryComboQuery();\n  const {\n    change\n  } = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const domainTypeIsTracker = values.domainType === 'TRACKER';\n  const disabled = domainTypeIsTracker;\n  const validate = disabled ? undefined : required;\n  const newCategoryComboLink = useHref('/categoryCombos/new');\n  const {\n    input,\n    meta\n  } = useField('categoryCombo', {\n    validateFields: [],\n    validate,\n    format: categoryCombo => categoryCombo.id,\n    parse: id => ({\n      id\n    })\n  });\n  const categoryComboHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  useEffect(() => {\n    var _defaultCategoryCombo;\n    if ((_defaultCategoryCombo = defaultCategoryComboQuery.data) !== null && _defaultCategoryCombo !== void 0 && _defaultCategoryCombo.id && domainTypeIsTracker) {\n      change('categoryCombo.id', defaultCategoryComboQuery.data.id);\n    }\n  }, [change, (_defaultCategoryCombo2 = defaultCategoryComboQuery.data) === null || _defaultCategoryCombo2 === void 0 ? void 0 : _defaultCategoryCombo2.id, domainTypeIsTracker]);\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-categorycombo\",\n    onRefresh: () => categoryComboHandle.current.refetch(),\n    onAddNew: () => window.open(newCategoryComboLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.categoryComboSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"categoryCombo.id\",\n    label: i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Category combination')\n    }),\n    helpText: i18n.t('Choose how this data element is disaggregated'),\n    error: meta.touched && !!meta.error,\n    validationText: meta.touched ? meta.error : undefined,\n    dataTest: \"formfields-categorycombo\"\n  }, /*#__PURE__*/React.createElement(CategoryComboSelect, {\n    required: true,\n    placeholder: \"\",\n    disabled: disabled,\n    invalid: meta.touched && !!meta.error,\n    ref: categoryComboHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      input.onChange(selected);\n      input.onBlur();\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React from 'react';\nimport { useField } from 'react-final-form';\nimport { ColorAndIconPicker } from '../../../components';\nexport function ColorAndIconField() {\n  const {\n    input: colorInput\n  } = useField('style.color', {\n    validateFields: []\n  });\n  const {\n    input: iconInput\n  } = useField('style.icon', {\n    validateFields: []\n  });\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-colorandicon\",\n    label: i18n.t('Color and icon'),\n    helpText: i18n.t('A color and icon are helpful for identifying data elements in information-dense screens.')\n  }, /*#__PURE__*/React.createElement(ColorAndIconPicker, {\n    icon: iconInput.value,\n    color: colorInput.value,\n    onIconPick: _ref => {\n      let {\n        icon\n      } = _ref;\n      iconInput.onChange(icon);\n    },\n    onColorPick: _ref2 => {\n      let {\n        color\n      } = _ref2;\n      colorInput.onChange(color);\n    }\n  }));\n}","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, Radio } from '@dhis2/ui';\nimport React from 'react';\nimport { useField } from 'react-final-form';\nimport { DOMAIN_TYPE } from '../../../lib';\nimport classes from './DomainField.module.css';\nfunction createHandler(callback) {\n  return (_, e) => {\n    callback(e);\n  };\n}\nexport function DomainField() {\n  const name = 'domainType';\n  const validate = value => !value ? 'Required' : undefined;\n  const aggregateInput = useField(name, {\n    type: 'radio',\n    value: 'AGGREGATE',\n    validate,\n    validateFields: []\n  });\n  const trackerInput = useField(name, {\n    type: 'radio',\n    value: 'TRACKER',\n    validate,\n    validateFields: []\n  });\n  const touched = aggregateInput.meta.touched || trackerInput.meta.touched;\n  const error = aggregateInput.meta.error || trackerInput.meta.error;\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: \"formfields-domaintype\",\n    name: name,\n    label: i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Domain')\n    }),\n    helpText: i18n.t('A data element can either be aggregated or tracked data.'),\n    error: touched && !!error,\n    validationText: touched ? error : undefined\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Radio, _extends({}, aggregateInput.input, {\n    className: classes.domainTypeRadioButton,\n    label: DOMAIN_TYPE.AGGREGATE,\n    onChange: createHandler(aggregateInput.input.onChange),\n    onBlur: createHandler(aggregateInput.input.onBlur),\n    onFocus: createHandler(aggregateInput.input.onFocus)\n  })), /*#__PURE__*/React.createElement(Radio, _extends({}, trackerInput.input, {\n    label: DOMAIN_TYPE.TRACKER,\n    className: classes.domainTypeRadioButton,\n    onChange: createHandler(trackerInput.input.onChange),\n    onBlur: createHandler(trackerInput.input.onBlur),\n    onFocus: createHandler(trackerInput.input.onFocus)\n  }))));\n}","import i18n from '@dhis2/d2-i18n';\nimport { InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field as FieldRFF } from 'react-final-form';\nimport { useCheckMaxLengthFromSchema } from '../../../lib';\nexport function FieldMaskField() {\n  const validate = useCheckMaxLengthFromSchema('dataElement', 'fieldMask');\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    component: InputFieldFF,\n    inputWidth: \"400px\",\n    dataTest: \"formfields-fieldmask\",\n    name: \"fieldMask\",\n    label: i18n.t('Field mask'),\n    helpText: i18n.t('Use a pattern to limit what information can be entered.'),\n    placeholder: i18n.t('e.g. 999-000-0000'),\n    validateFields: [],\n    validate: validate\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field as FieldRFF } from 'react-final-form';\nimport { useCheckMaxLengthFromSchema } from '../../../lib';\nimport { SchemaName } from '../../../types';\nexport function FormNameField() {\n  const validate = useCheckMaxLengthFromSchema(SchemaName.dataElement, 'formName');\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    component: InputFieldFF,\n    dataTest: \"formfields-formname\",\n    inputWidth: \"400px\",\n    name: \"formName\",\n    label: i18n.t('Form name'),\n    helpText: i18n.t('An alternative name used in section or automatic data entry forms.'),\n    validateFields: [],\n    validate: validate\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { ButtonStrip, Button, Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { LegendSetTransfer } from '../../../components';\nimport classes from './LegendSetField.module.css';\n\n/**\n *\n * LegendSet\n *\n */\nexport function LegendSetField() {\n  var _meta$error;\n  const name = 'legendSets';\n  const {\n    input,\n    meta\n  } = useField(name, {\n    multiple: true,\n    format: legendSets => legendSets === null || legendSets === void 0 ? void 0 : legendSets.map(legendSet => legendSet.id),\n    parse: ids => ids.map(id => ({\n      id\n    })),\n    validateFields: []\n  });\n  const newLegendSetLink = useHref('/legendSets/new');\n  const legendSetHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  const rightHeader = /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.legendsPickedHeader\n  }, i18n.t('Selected legends'));\n  const leftFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.legendsOptionsFooter\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: legendSetHandle.current.refetch\n  }, i18n.t('Refresh list')), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: () => window.open(newLegendSetLink, '_blank')\n  }, i18n.t('Add new'))));\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: \"formfields-legendsets\",\n    error: !!meta.error,\n    validationText: (_meta$error = meta.error) === null || _meta$error === void 0 ? void 0 : _meta$error.toString(),\n    name: name\n  }, /*#__PURE__*/React.createElement(LegendSetTransfer, {\n    ref: legendSetHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    rightHeader: rightHeader,\n    leftFooter: leftFooter\n  }));\n}","import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { EditableFieldWrapper, OptionSetSelect } from '../../../components';\nimport classes from './OptionSetCommentField.module.css';\n\n/**\n *\n * OptionSetComment\n *\n */\nexport function OptionSetCommentField() {\n  const newOptionSetLink = useHref('/optionSets/new');\n  // Not using a dot path because setting the value to an empty string\n  // removes the option set from the form state entirely\n  const {\n    input,\n    meta\n  } = useField('commentOptionSet', {\n    validateFields: [],\n    format: optionSet => optionSet.id,\n    parse: id => ({\n      id\n    })\n  });\n  const optionSetHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-commentoptionset\",\n    onRefresh: () => optionSetHandle.current.refetch(),\n    onAddNew: () => window.open(newOptionSetLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.optionSetCommentSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"commentOptionSet.id\",\n    label: i18n.t('Option set comment'),\n    helpText: i18n.t('Choose a set of predefined comment for data entry'),\n    validationText: meta.touched ? meta.error : undefined,\n    error: meta.touched && !!meta.error,\n    dataTest: \"formfields-commentoptionset\"\n  }, /*#__PURE__*/React.createElement(OptionSetSelect, {\n    showAllOption: true,\n    ref: optionSetHandle,\n    invalid: meta.touched && !!meta.error,\n    placeholder: \"\",\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","import i18n from '@dhis2/d2-i18n';\nimport { Field } from '@dhis2/ui';\nimport React, { useRef } from 'react';\nimport { useField } from 'react-final-form';\nimport { useHref } from 'react-router';\nimport { EditableFieldWrapper, OptionSetSelect } from '../../../components';\nimport classes from './OptionSetField.module.css';\nexport function OptionSetField() {\n  const newOptionSetLink = useHref('/optionSets/new');\n  // Not using a dot path because setting the value to an empty string\n  // removes the option set from the form state entirely\n  const {\n    input,\n    meta\n  } = useField('optionSet', {\n    validateFields: [],\n    format: optionSet => optionSet.id,\n    parse: id => ({\n      id\n    })\n  });\n  const optionSetHandle = useRef({\n    refetch: () => {\n      throw new Error('Not initialized');\n    }\n  });\n  return /*#__PURE__*/React.createElement(EditableFieldWrapper, {\n    dataTest: \"formfields-optionset\",\n    onRefresh: () => optionSetHandle.current.refetch(),\n    onAddNew: () => window.open(newOptionSetLink, '_blank')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.optionSetSelect\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"optionSet.id\",\n    label: i18n.t('Option set'),\n    helpText: i18n.t('Choose a set of predefined options for data entry'),\n    validationText: meta.touched ? meta.error : undefined,\n    error: meta.touched && !!meta.error,\n    dataTest: \"formfields-optionset\"\n  }, /*#__PURE__*/React.createElement(OptionSetSelect, {\n    showAllOption: true,\n    placeholder: \"\",\n    invalid: meta.touched && !!meta.error,\n    ref: optionSetHandle,\n    selected: input.value,\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return input.onChange(selected);\n    },\n    onBlur: input.onBlur,\n    onFocus: input.onFocus\n  }))));\n}","import i18n from '@dhis2/d2-i18n';\nimport { InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field as FieldRFF } from 'react-final-form';\nimport { useCheckMaxLengthFromSchema } from '../../../lib';\nexport function UrlField() {\n  const validate = useCheckMaxLengthFromSchema('dataElement', 'url');\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    component: InputFieldFF,\n    dataTest: \"formfields-url\",\n    inputWidth: \"400px\",\n    name: \"url\",\n    label: i18n.t('Url'),\n    helpText: i18n.t('A web link that provides extra information'),\n    validateFields: [],\n    validate: validate\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { SingleSelectFieldFF } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { Field as FieldRFF, useForm, useFormState } from 'react-final-form';\nimport { VALUE_TYPE, required, useSchemas, useOptionSetQuery } from '../../../lib';\n\n/**\n * Field rule: Unless valueType or the selected optionSet's valueType is\n *             MULTI_TEXT, filter out the MULTI_TEXT option\n * Field rule: When the selected optionSet's valueType is MULTI_TEXT, disable\n *             valueType field\n * Field rule: When the selected optionSet's valueType is MULTI_TEXT, set\n *             valueTypeField value to optionSet's valueType\n */\nconst valueTypeHelpText = i18n.t('The type of data that will be recorded.');\nconst valueTypeDisabledHelpText = i18n.t('Disabled as the value type must match the value type of the selected option set');\nconst valueTypeOptionSetFields = ['id', 'valueType'];\nexport function ValueTypeField() {\n  var _values$optionSet, _optionSetQuery$data3, _dataElement$properti;\n  const {\n    change\n  } = useForm();\n  const {\n    values\n  } = useFormState({\n    subscription: {\n      values: true\n    }\n  });\n  const disabled = !!values.optionSet.id;\n  const [lazy] = useState(!values.optionSet.id);\n  const {\n    refetch,\n    ...optionSetQuery\n  } = useOptionSetQuery({\n    lazy,\n    variables: {\n      id: values.optionSet.id,\n      fields: valueTypeOptionSetFields\n    }\n  });\n  useEffect(() => {\n    if (values.optionSet.id) {\n      refetch({\n        id: values.optionSet.id\n      });\n    }\n  }, [refetch, values.optionSet.id]);\n  useEffect(() => {\n    var _optionSetQuery$data;\n    if (values.optionSet.id && !optionSetQuery.loading && !optionSetQuery.fetching && !optionSetQuery.error && (_optionSetQuery$data = optionSetQuery.data) !== null && _optionSetQuery$data !== void 0 && _optionSetQuery$data.optionSets.valueType) {\n      var _optionSetQuery$data2;\n      change('valueType', (_optionSetQuery$data2 = optionSetQuery.data) === null || _optionSetQuery$data2 === void 0 ? void 0 : _optionSetQuery$data2.optionSets.valueType);\n    }\n  });\n  const schemas = useSchemas();\n  const {\n    dataElement\n  } = schemas;\n  const optionSetHasMultiTextValueType = values.valueType === 'MULTI_TEXT' || ((_values$optionSet = values.optionSet) === null || _values$optionSet === void 0 ? void 0 : _values$optionSet.id) && ((_optionSetQuery$data3 = optionSetQuery.data) === null || _optionSetQuery$data3 === void 0 ? void 0 : _optionSetQuery$data3.optionSets.valueType) === 'MULTI_TEXT';\n  const options = (_dataElement$properti = dataElement.properties.valueType.constants) === null || _dataElement$properti === void 0 ? void 0 : _dataElement$properti.map(constant => ({\n    value: constant,\n    label: VALUE_TYPE[constant]\n  })).filter(_ref => {\n    let {\n      value\n    } = _ref;\n    return optionSetHasMultiTextValueType || value !== 'MULTI_TEXT';\n  });\n  const helpText = disabled ? `${valueTypeHelpText} ${valueTypeDisabledHelpText}` : valueTypeHelpText;\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    required: true,\n    disabled: disabled,\n    component: SingleSelectFieldFF,\n    dataTest: \"formfields-valuetype\",\n    inputWidth: \"400px\",\n    name: \"valueType\",\n    label: i18n.t('{{fieldLabel}} (required)', {\n      fieldLabel: i18n.t('Value type')\n    }),\n    helpText: helpText,\n    options: options || [],\n    validateFields: [],\n    validate: required\n  });\n}","import i18n from '@dhis2/d2-i18n';\nimport { CheckboxFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field as FieldRFF } from 'react-final-form';\nexport function ZeroIsSignificantField() {\n  return /*#__PURE__*/React.createElement(FieldRFF, {\n    component: CheckboxFieldFF,\n    dataTest: \"formfields-zeroissignificant\",\n    name: \"zeroIsSignificant\",\n    label: i18n.t('Store zero data values'),\n    type: \"checkbox\",\n    validateFields: []\n  });\n}","// extracted by mini-css-extract-plugin\nexport default {\"aggregationLevelsMultiSelect\":\"AggregationLevelsField_aggregationLevelsMultiSelect__a24R1\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoryComboSelect\":\"CategoryComboField_categoryComboSelect__X790g\"};","// extracted by mini-css-extract-plugin\nexport default {\"domainTypeRadioButton\":\"DomainField_domainTypeRadioButton__J0ngo\"};","// extracted by mini-css-extract-plugin\nexport default {\"legendsOptionsFooter\":\"LegendSetField_legendsOptionsFooter__sImkA\",\"legendsPickedHeader\":\"LegendSetField_legendsPickedHeader__gP48Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"optionSetCommentSelect\":\"OptionSetCommentField_optionSetCommentSelect__87vCm\"};","// extracted by mini-css-extract-plugin\nexport default {\"optionSetSelect\":\"OptionSetField_optionSetSelect__4gFHR\"};"],"names":["AggregationLevelsField","newAggregationLevelLink","useHref","input","meta","useField","multiple","format","levels","map","level","toString","parse","parseInt","validateFields","aggregationLevelHandle","useRef","refetch","Error","React","EditableFieldWrapper","dataTest","onRefresh","current","onAddNew","window","open","className","classes","aggregationLevelsMultiSelect","Field","name","label","i18n","t","helpText","validationText","touched","error","undefined","AggregationLevelMultiSelect","ref","invalid","inputWidth","placeholder","selected","value","onChange","_ref","onBlur","onFocus","onRetryClick","DISABLING_VALUE_TYPES","aggregationTypeHelpText","aggregationTypeDisabledHelpText","AggregationTypeField","_dataElement$properti","change","useForm","valueType","disabled","includes","useEffect","dataElement","useSchemas","options","properties","aggregationType","constants","constant","AGGREGATION_TYPE","FieldRFF","component","SingleSelectFieldFF","required","fieldLabel","validate","id","CategoryComboField","_defaultCategoryCombo2","defaultCategoryComboQuery","useDefaultCategoryComboQuery","values","useFormState","subscription","domainTypeIsTracker","domainType","newCategoryComboLink","categoryCombo","categoryComboHandle","_defaultCategoryCombo","data","categoryComboSelect","CategoryComboSelect","ColorAndIconField","colorInput","iconInput","ColorAndIconPicker","icon","color","onIconPick","onColorPick","_ref2","_extends","Object","assign","bind","n","e","arguments","length","r","hasOwnProperty","call","apply","createHandler","callback","_","DomainField","aggregateInput","type","trackerInput","Radio","domainTypeRadioButton","DOMAIN_TYPE","AGGREGATE","TRACKER","FieldMaskField","useCheckMaxLengthFromSchema","InputFieldFF","FormNameField","SchemaName","LegendSetField","_meta$error","legendSets","legendSet","ids","newLegendSetLink","legendSetHandle","rightHeader","legendsPickedHeader","leftFooter","legendsOptionsFooter","ButtonStrip","Button","small","onClick","LegendSetTransfer","OptionSetCommentField","newOptionSetLink","optionSet","optionSetHandle","optionSetCommentSelect","OptionSetSelect","showAllOption","OptionSetField","optionSetSelect","UrlField","valueTypeHelpText","valueTypeDisabledHelpText","valueTypeOptionSetFields","ValueTypeField","_values$optionSet","_optionSetQuery$data3","lazy","useState","optionSetQuery","useOptionSetQuery","variables","fields","_optionSetQuery$data","_optionSetQuery$data2","loading","fetching","optionSets","schemas","optionSetHasMultiTextValueType","VALUE_TYPE","filter","ZeroIsSignificantField","CheckboxFieldFF"],"sourceRoot":""}