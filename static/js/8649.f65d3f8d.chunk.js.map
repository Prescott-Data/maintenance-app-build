{"version":3,"file":"static/js/8649.f65d3f8d.chunk.js","mappings":"8QAMA,MAAMA,E,SAAUC,GAAaC,oBAChBC,EAAgCA,IACvBC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBC,EAAAA,GAAqB,KAAmBD,EAAAA,cAAoBE,EAAAA,GAA0B,KAAMC,EAAAA,EAAKC,EAAE,sBAAoCJ,EAAAA,cAAoBK,EAAAA,GAAgC,KAAMF,EAAAA,EAAKC,EAAE,oDAAkEJ,EAAAA,cAAoBM,EAAAA,GAAmB,KAAmBN,EAAAA,cAAoBO,EAAAA,GAAO,CAC5bC,UAAWC,EAAAA,EACXC,SAAU,kBACVC,UAAU,EACVC,WAAY,QACZC,MAAOV,EAAAA,EAAKC,EAAE,QACdU,KAAM,OACNC,eAAgB,MACAf,EAAAA,cAAoBM,EAAAA,GAAmB,KAAmBN,EAAAA,cAAoBgB,EAAAA,GAAW,CACzGC,cAAerB,KACCI,EAAAA,cAAoBM,EAAAA,GAAmB,KAAmBN,EAAAA,cAAoBO,EAAAA,GAAO,CACrGC,UAAWU,EAAAA,EACXJ,KAAM,iBACND,MAAOV,EAAAA,EAAKC,EAAE,wBACdW,eAAgB,GAChBI,KAAM,eACWnB,EAAAA,cAAoBoB,EAAAA,GAAyB,CAC9DH,cAAerB,I,4LCtBnB,MAAM,oBACJyB,GACEC,EAAAA,GAGSC,EAA4BF,EAAoBG,OAAO,CAClEC,GAAIC,EAAAA,EAAEC,SACNC,KAAMF,EAAAA,EAAEC,SAASE,OAAOC,WACxBC,eAAgBL,EAAAA,EAAEM,UAAUF,WAAWG,SAAQ,KAEpCC,GAAgBC,EAAAA,EAAAA,IAAYZ,GAC5Ba,GAAWC,EAAAA,EAAAA,GAAmBd,E","sources":["D2App/pages/categoryOptionCombos/form/CategoryOptionComboFormFields.js","D2App/pages/categoryOptionCombos/form/categoryOptionComboSchema.js"],"sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport { CheckboxFieldFF, InputFieldFF } from '@dhis2/ui';\nimport React from 'react';\nimport { Field } from 'react-final-form';\nimport { StandardFormField, StandardFormSection, StandardFormSectionTitle, StandardFormSectionDescription, CodeField, CustomAttributesSection } from '../../../components';\nimport { SECTIONS_MAP } from '../../../lib';\nconst section = SECTIONS_MAP.categoryOptionCombo;\nexport const CategoryOptionComboFormFields = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StandardFormSection, null, /*#__PURE__*/React.createElement(StandardFormSectionTitle, null, i18n.t('Basic information')), /*#__PURE__*/React.createElement(StandardFormSectionDescription, null, i18n.t('Set up the basic information for this category.')), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    component: InputFieldFF,\n    dataTest: \"formfields-name\",\n    disabled: true,\n    inputWidth: \"400px\",\n    label: i18n.t('Name'),\n    name: \"name\",\n    validateFields: []\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(CodeField, {\n    schemaSection: section\n  })), /*#__PURE__*/React.createElement(StandardFormField, null, /*#__PURE__*/React.createElement(Field, {\n    component: CheckboxFieldFF,\n    name: \"ignoreApproval\",\n    label: i18n.t('Ignore data approval'),\n    validateFields: [],\n    type: \"checkbox\"\n  }))), /*#__PURE__*/React.createElement(CustomAttributesSection, {\n    schemaSection: section\n  }));\n};","import { z } from 'zod';\nimport { getDefaults, modelFormSchemas } from '../../../lib';\nimport { createFormValidate } from '../../../lib/form/validate';\nconst {\n  withAttributeValues\n} = modelFormSchemas;\n\n// categoryCombos should only be able to change the code and attributes\nexport const categoryOptionComboSchema = withAttributeValues.extend({\n  id: z.string(),\n  code: z.string().trim().optional(),\n  ignoreApproval: z.boolean().optional().default(false)\n});\nexport const initialValues = getDefaults(categoryOptionComboSchema);\nexport const validate = createFormValidate(categoryOptionComboSchema);"],"names":["section","SECTIONS_MAP","categoryOptionCombo","CategoryOptionComboFormFields","React","StandardFormSection","StandardFormSectionTitle","i18n","t","StandardFormSectionDescription","StandardFormField","Field","component","InputFieldFF","dataTest","disabled","inputWidth","label","name","validateFields","CodeField","schemaSection","CheckboxFieldFF","type","CustomAttributesSection","withAttributeValues","modelFormSchemas","categoryOptionComboSchema","extend","id","z","string","code","trim","optional","ignoreApproval","boolean","default","initialValues","getDefaults","validate","createFormValidate"],"sourceRoot":""}